

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 30 16:20:01 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71   000000                     
    72                           ; Generated 09/02/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4580 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   0014DA                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for read_switches@once
   112   0014DA  01                 	db	1
   113                           
   114                           ;initializer for _d
   115   0014DB  04                 	db	4
   116                           
   117                           	psect	idataBANK0
   118   00142C                     __pidataBANK0:
   119                           	callstack 0
   120                           
   121                           ;initializer for _Event1
   122   00142C  4F                 	db	79
   123   00142D  4E                 	db	78
   124   00142E  00                 	db	0
   125   00142F  47                 	db	71
   126   001430  4E                 	db	78
   127   001431  00                 	db	0
   128   001432  47                 	db	71
   129   001433  52                 	db	82
   130   001434  00                 	db	0
   131   001435  47                 	db	71
   132   001436  31                 	db	49
   133   001437  00                 	db	0
   134   001438  47                 	db	71
   135   001439  32                 	db	50
   136   00143A  00                 	db	0
   137   00143B  47                 	db	71
   138   00143C  33                 	db	51
   139   00143D  00                 	db	0
   140   00143E  47                 	db	71
   141   00143F  34                 	db	52
   142   001440  00                 	db	0
   143   001441  47                 	db	71
   144   001442  35                 	db	53
   145   001443  00                 	db	0
   146   001444  43                 	db	67
   147   001445  4C                 	db	76
   148   001446  00                 	db	0
   149                           
   150                           	psect	idataBANK1
   151   000DDE                     __pidataBANK1:
   152                           	callstack 0
   153                           
   154                           ;initializer for view_menu@view_array
   155   000DDE  56                 	db	86
   156   000DDF  69                 	db	105
   157   000DE0  65                 	db	101
   158   000DE1  77                 	db	119
   159   000DE2  20                 	db	32
   160   000DE3  4C                 	db	76
   161   000DE4  6F                 	db	111
   162   000DE5  67                 	db	103
   163   000DE6  20                 	db	32
   164   000DE7  20                 	db	32
   165   000DE8  20                 	db	32
   166   000DE9  20                 	db	32
   167   000DEA  20                 	db	32
   168   000DEB  20                 	db	32
   169   000DEC  20                 	db	32
   170   000DED  20                 	db	32
   171   000DEE  00                 	db	0
   172   000DEF  43                 	db	67
   173   000DF0  6C                 	db	108
   174   000DF1  65                 	db	101
   175   000DF2  61                 	db	97
   176   000DF3  72                 	db	114
   177   000DF4  20                 	db	32
   178   000DF5  4C                 	db	76
   179   000DF6  6F                 	db	111
   180   000DF7  67                 	db	103
   181   000DF8  20                 	db	32
   182   000DF9  20                 	db	32
   183   000DFA  20                 	db	32
   184   000DFB  20                 	db	32
   185   000DFC  20                 	db	32
   186   000DFD  00                 	db	0
   187   000DFE  00                 	db	0
   188   000DFF  00                 	db	0
   189   000E00  44                 	db	68
   190   000E01  6F                 	db	111
   191   000E02  77                 	db	119
   192   000E03  6E                 	db	110
   193   000E04  6C                 	db	108
   194   000E05  6F                 	db	111
   195   000E06  61                 	db	97
   196   000E07  64                 	db	100
   197   000E08  20                 	db	32
   198   000E09  4C                 	db	76
   199   000E0A  6F                 	db	111
   200   000E0B  67                 	db	103
   201   000E0C  20                 	db	32
   202   000E0D  20                 	db	32
   203   000E0E  20                 	db	32
   204   000E0F  00                 	db	0
   205   000E10  00                 	db	0
   206   000E11  53                 	db	83
   207   000E12  65                 	db	101
   208   000E13  74                 	db	116
   209   000E14  20                 	db	32
   210   000E15  54                 	db	84
   211   000E16  69                 	db	105
   212   000E17  6D                 	db	109
   213   000E18  65                 	db	101
   214   000E19  20                 	db	32
   215   000E1A  20                 	db	32
   216   000E1B  20                 	db	32
   217   000E1C  20                 	db	32
   218   000E1D  20                 	db	32
   219   000E1E  20                 	db	32
   220   000E1F  20                 	db	32
   221   000E20  00                 	db	0
   222   000E21  00                 	db	0
   223   000E22  43                 	db	67
   224   000E23  68                 	db	104
   225   000E24  61                 	db	97
   226   000E25  6E                 	db	110
   227   000E26  67                 	db	103
   228   000E27  65                 	db	101
   229   000E28  20                 	db	32
   230   000E29  50                 	db	80
   231   000E2A  61                 	db	97
   232   000E2B  73                 	db	115
   233   000E2C  73                 	db	115
   234   000E2D  77                 	db	119
   235   000E2E  6F                 	db	111
   236   000E2F  72                 	db	114
   237   000E30  64                 	db	100
   238   000E31  00                 	db	0
   239   000E32  00                 	db	0
   240   000E33  3C                 	db	60
   241   000E34  3C                 	db	60
   242   000E35  20                 	db	32
   243   000E36  20                 	db	32
   244   000E37  20                 	db	32
   245   000E38  45                 	db	69
   246   000E39  58                 	db	88
   247   000E3A  49                 	db	73
   248   000E3B  54                 	db	84
   249   000E3C  20                 	db	32
   250   000E3D  20                 	db	32
   251   000E3E  20                 	db	32
   252   000E3F  3E                 	db	62
   253   000E40  3E                 	db	62
   254   000E41  20                 	db	32
   255   000E42  00                 	db	0
   256   000E43  00                 	db	0
   257   000000                     _RCREG	set	4014
   258   000000                     _TXREG	set	4013
   259   000000                     _SPBRG	set	4015
   260   000000                     _SSPADD	set	4040
   261   000000                     _SSPCON1	set	4038
   262   000000                     _ADRESL	set	4035
   263   000000                     _ADRESH	set	4036
   264   000000                     _ABDOVF	set	32199
   265   000000                     _ACKSTAT	set	32302
   266   000000                     _CKE	set	32318
   267   000000                     _VCFG1	set	32269
   268   000000                     _GODONE	set	32273
   269   000000                     _TRISC	set	3988
   270   000000                     _TRISD	set	3989
   271   000000                     _PORTBbits	set	3969
   272   000000                     _ADCON1	set	4033
   273   000000                     _ADCON0	set	4034
   274   000000                     _RD7	set	31775
   275   000000                     _RC0	set	31760
   276   000000                     _RC2	set	31762
   277   000000                     _RCIF	set	31989
   278   000000                     _RCIE	set	31981
   279   000000                     _TXIF	set	31988
   280   000000                     _ABDEN	set	32192
   281   000000                     _WUE	set	32193
   282   000000                     _BRG16	set	32195
   283   000000                     _SCKP	set	32196
   284   000000                     _RCIDL	set	32198
   285   000000                     _RX9D	set	32088
   286   000000                     _OERR	set	32089
   287   000000                     _FERR	set	32090
   288   000000                     _ADDEN	set	32091
   289   000000                     _CREN	set	32092
   290   000000                     _SREN	set	32093
   291   000000                     _RX9	set	32094
   292   000000                     _TX9D	set	32096
   293   000000                     _TRMT	set	32097
   294   000000                     _BRGH	set	32098
   295   000000                     _SENDB	set	32099
   296   000000                     _SYNC	set	32100
   297   000000                     _TXEN	set	32101
   298   000000                     _TX9	set	32102
   299   000000                     _TRISC6	set	31910
   300   000000                     _TRISC7	set	31911
   301   000000                     _TMR2IF	set	31985
   302   000000                     _ACKEN	set	32300
   303   000000                     _ACKDT	set	32301
   304   000000                     _RCEN	set	32299
   305   000000                     _RSEN	set	32297
   306   000000                     _PEN	set	32298
   307   000000                     _SEN	set	32296
   308   000000                     _SMP	set	32319
   309   000000                     _TRISC4	set	31908
   310   000000                     _GO	set	32273
   311   000000                     _ADON	set	32272
   312   000000                     _VCFG0	set	32268
   313   000000                     _ADCS2	set	32258
   314   000000                     _ADCS1	set	32257
   315   000000                     _ADCS0	set	32256
   316   000000                     _ACQT0	set	32259
   317   000000                     _ACQT1	set	32260
   318   000000                     _ACQT2	set	32261
   319   000000                     _PORTB	set	3969
   320   000000                     _TRISB	set	3987
   321   000000                     _TRISC3	set	31907
   322   000000                     _ADFM	set	32263
   323   000000                     _TRISD7	set	31919
   324   000000                     _TXIE	set	31980
   325   000000                     _SSPIF	set	31987
   326   000000                     _PR2	set	4043
   327   000000                     _SSPBUF	set	4041
   328   000000                     _TMR2ON	set	32338
   329   000000                     _RBPU	set	32655
   330   000000                     _BCLIF	set	32011
   331   000000                     _SPEN	set	32095
   332   000000                     _CSRC	set	32103
   333   000000                     _PORTD	set	3971
   334   000000                     _RC1	set	31761
   335                           
   336                           	psect	mediumconst
   337   002EE6                     __pmediumconst:
   338                           	callstack 0
   339   002EE6  00                 	db	0
   340   002EE7                     STR_11:
   341   002EE7  44                 	db	68	;'D'
   342   002EE8  6F                 	db	111	;'o'
   343   002EE9  77                 	db	119	;'w'
   344   002EEA  6E                 	db	110	;'n'
   345   002EEB  6C                 	db	108	;'l'
   346   002EEC  6F                 	db	111	;'o'
   347   002EED  61                 	db	97	;'a'
   348   002EEE  64                 	db	100	;'d'
   349   002EEF  20                 	db	32
   350   002EF0  63                 	db	99	;'c'
   351   002EF1  6F                 	db	111	;'o'
   352   002EF2  6D                 	db	109	;'m'
   353   002EF3  70                 	db	112	;'p'
   354   002EF4  6C                 	db	108	;'l'
   355   002EF5  65                 	db	101	;'e'
   356   002EF6  74                 	db	116	;'t'
   357   002EF7  65                 	db	101	;'e'
   358   002EF8  64                 	db	100	;'d'
   359   002EF9  00                 	db	0
   360   002EFA                     STR_15:
   361   002EFA  52                 	db	82	;'R'
   362   002EFB  65                 	db	101	;'e'
   363   002EFC  65                 	db	101	;'e'
   364   002EFD  20                 	db	32
   365   002EFE  45                 	db	69	;'E'
   366   002EFF  6E                 	db	110	;'n'
   367   002F00  74                 	db	116	;'t'
   368   002F01  65                 	db	101	;'e'
   369   002F02  72                 	db	114	;'r'
   370   002F03  20                 	db	32
   371   002F04  70                 	db	112	;'p'
   372   002F05  61                 	db	97	;'a'
   373   002F06  73                 	db	115	;'s'
   374   002F07  73                 	db	115	;'s'
   375   002F08  77                 	db	119	;'w'
   376   002F09  6F                 	db	111	;'o'
   377   002F0A  72                 	db	114	;'r'
   378   002F0B  64                 	db	100	;'d'
   379   002F0C  00                 	db	0
   380   002F0D                     STR_13:
   381   002F0D  53                 	db	83	;'S'
   382   002F0E  61                 	db	97	;'a'
   383   002F0F  76                 	db	118	;'v'
   384   002F10  65                 	db	101	;'e'
   385   002F11  64                 	db	100	;'d'
   386   002F12  20                 	db	32
   387   002F13  54                 	db	84	;'T'
   388   002F14  69                 	db	105	;'i'
   389   002F15  6D                 	db	109	;'m'
   390   002F16  65                 	db	101	;'e'
   391   002F17  20                 	db	32
   392   002F18  69                 	db	105	;'i'
   393   002F19  6E                 	db	110	;'n'
   394   002F1A  20                 	db	32
   395   002F1B  52                 	db	82	;'R'
   396   002F1C  54                 	db	84	;'T'
   397   002F1D  43                 	db	67	;'C'
   398   002F1E  00                 	db	0
   399   002F1F                     STR_4:
   400   002F1F  20                 	db	32
   401   002F20  20                 	db	32
   402   002F21  20                 	db	32
   403   002F22  20                 	db	32
   404   002F23  20                 	db	32
   405   002F24  20                 	db	32
   406   002F25  20                 	db	32
   407   002F26  20                 	db	32
   408   002F27  20                 	db	32
   409   002F28  20                 	db	32
   410   002F29  20                 	db	32
   411   002F2A  20                 	db	32
   412   002F2B  20                 	db	32
   413   002F2C  20                 	db	32
   414   002F2D  20                 	db	32
   415   002F2E  20                 	db	32
   416   002F2F  00                 	db	0
   417   002F30                     STR_2:
   418   002F30  20                 	db	32
   419   002F31  20                 	db	32
   420   002F32  20                 	db	32
   421   002F33  54                 	db	84	;'T'
   422   002F34  72                 	db	114	;'r'
   423   002F35  79                 	db	121	;'y'
   424   002F36  5F                 	db	95	;'_'
   425   002F37  41                 	db	65	;'A'
   426   002F38  67                 	db	103	;'g'
   427   002F39  61                 	db	97	;'a'
   428   002F3A  69                 	db	105	;'i'
   429   002F3B  6E                 	db	110	;'n'
   430   002F3C  20                 	db	32
   431   002F3D  20                 	db	32
   432   002F3E  20                 	db	32
   433   002F3F  20                 	db	32
   434   002F40  00                 	db	0
   435   002F41                     STR_12:
   436   002F41  54                 	db	84	;'T'
   437   002F42  69                 	db	105	;'i'
   438   002F43  6D                 	db	109	;'m'
   439   002F44  65                 	db	101	;'e'
   440   002F45  20                 	db	32
   441   002F46  28                 	db	40
   442   002F47  48                 	db	72	;'H'
   443   002F48  48                 	db	72	;'H'
   444   002F49  3A                 	db	58	;':'
   445   002F4A  4D                 	db	77	;'M'
   446   002F4B  4D                 	db	77	;'M'
   447   002F4C  3A                 	db	58	;':'
   448   002F4D  53                 	db	83	;'S'
   449   002F4E  53                 	db	83	;'S'
   450   002F4F  29                 	db	41
   451   002F50  20                 	db	32
   452   002F51  00                 	db	0
   453   002F52                     STR_5:
   454   002F52  5F                 	db	95	;'_'
   455   002F53  45                 	db	69	;'E'
   456   002F54  4E                 	db	78	;'N'
   457   002F55  54                 	db	84	;'T'
   458   002F56  45                 	db	69	;'E'
   459   002F57  52                 	db	82	;'R'
   460   002F58  5F                 	db	95	;'_'
   461   002F59  50                 	db	80	;'P'
   462   002F5A  41                 	db	65	;'A'
   463   002F5B  53                 	db	83	;'S'
   464   002F5C  53                 	db	83	;'S'
   465   002F5D  57                 	db	87	;'W'
   466   002F5E  4F                 	db	79	;'O'
   467   002F5F  52                 	db	82	;'R'
   468   002F60  44                 	db	68	;'D'
   469   002F61  20                 	db	32
   470   002F62  00                 	db	0
   471   002F63                     STR_19:
   472   002F63  20                 	db	32
   473   002F64  20                 	db	32
   474   002F65  54                 	db	84	;'T'
   475   002F66  49                 	db	73	;'I'
   476   002F67  4D                 	db	77	;'M'
   477   002F68  45                 	db	69	;'E'
   478   002F69  20                 	db	32
   479   002F6A  20                 	db	32
   480   002F6B  20                 	db	32
   481   002F6C  20                 	db	32
   482   002F6D  45                 	db	69	;'E'
   483   002F6E  56                 	db	86	;'V'
   484   002F6F  20                 	db	32
   485   002F70  20                 	db	32
   486   002F71  53                 	db	83	;'S'
   487   002F72  50                 	db	80	;'P'
   488   002F73  00                 	db	0
   489   002F74                     STR_16:
   490   002F74  50                 	db	80	;'P'
   491   002F75  61                 	db	97	;'a'
   492   002F76  73                 	db	115	;'s'
   493   002F77  73                 	db	115	;'s'
   494   002F78  77                 	db	119	;'w'
   495   002F79  6F                 	db	111	;'o'
   496   002F7A  72                 	db	114	;'r'
   497   002F7B  64                 	db	100	;'d'
   498   002F7C  20                 	db	32
   499   002F7D  63                 	db	99	;'c'
   500   002F7E  68                 	db	104	;'h'
   501   002F7F  61                 	db	97	;'a'
   502   002F80  6E                 	db	110	;'n'
   503   002F81  67                 	db	103	;'g'
   504   002F82  65                 	db	101	;'e'
   505   002F83  64                 	db	100	;'d'
   506   002F84  00                 	db	0
   507   002F85                     STR_3:
   508   002F85  20                 	db	32
   509   002F86  20                 	db	32
   510   002F87  54                 	db	84	;'T'
   511   002F88  69                 	db	105	;'i'
   512   002F89  6D                 	db	109	;'m'
   513   002F8A  65                 	db	101	;'e'
   514   002F8B  20                 	db	32
   515   002F8C  6C                 	db	108	;'l'
   516   002F8D  65                 	db	101	;'e'
   517   002F8E  66                 	db	102	;'f'
   518   002F8F  74                 	db	116	;'t'
   519   002F90  20                 	db	32
   520   002F91  20                 	db	32
   521   002F92  20                 	db	32
   522   002F93  20                 	db	32
   523   002F94  00                 	db	0
   524   002F95                     STR_1:
   525   002F95  45                 	db	69	;'E'
   526   002F96  4E                 	db	78	;'N'
   527   002F97  54                 	db	84	;'T'
   528   002F98  45                 	db	69	;'E'
   529   002F99  52                 	db	82	;'R'
   530   002F9A  20                 	db	32
   531   002F9B  50                 	db	80	;'P'
   532   002F9C  41                 	db	65	;'A'
   533   002F9D  53                 	db	83	;'S'
   534   002F9E  53                 	db	83	;'S'
   535   002F9F  57                 	db	87	;'W'
   536   002FA0  4F                 	db	79	;'O'
   537   002FA1  52                 	db	82	;'R'
   538   002FA2  44                 	db	68	;'D'
   539   002FA3  00                 	db	0
   540   002FA4                     STR_18:
   541   002FA4  57                 	db	87	;'W'
   542   002FA5  72                 	db	114	;'r'
   543   002FA6  6F                 	db	111	;'o'
   544   002FA7  6E                 	db	110	;'n'
   545   002FA8  67                 	db	103	;'g'
   546   002FA9  20                 	db	32
   547   002FAA  50                 	db	80	;'P'
   548   002FAB  61                 	db	97	;'a'
   549   002FAC  73                 	db	115	;'s'
   550   002FAD  73                 	db	115	;'s'
   551   002FAE  77                 	db	119	;'w'
   552   002FAF  6F                 	db	111	;'o'
   553   002FB0  72                 	db	114	;'r'
   554   002FB1  64                 	db	100	;'d'
   555   002FB2  00                 	db	0
   556   002FB3                     STR_14:
   557   002FB3  45                 	db	69	;'E'
   558   002FB4  6E                 	db	110	;'n'
   559   002FB5  74                 	db	116	;'t'
   560   002FB6  65                 	db	101	;'e'
   561   002FB7  72                 	db	114	;'r'
   562   002FB8  20                 	db	32
   563   002FB9  50                 	db	80	;'P'
   564   002FBA  61                 	db	97	;'a'
   565   002FBB  73                 	db	115	;'s'
   566   002FBC  73                 	db	115	;'s'
   567   002FBD  77                 	db	119	;'w'
   568   002FBE  6F                 	db	111	;'o'
   569   002FBF  72                 	db	114	;'r'
   570   002FC0  64                 	db	100	;'d'
   571   002FC1  00                 	db	0
   572   002FC2                     STR_7:
   573   002FC2  4E                 	db	78	;'N'
   574   002FC3  6F                 	db	111	;'o'
   575   002FC4  20                 	db	32
   576   002FC5  6C                 	db	108	;'l'
   577   002FC6  6F                 	db	111	;'o'
   578   002FC7  67                 	db	103	;'g'
   579   002FC8  20                 	db	32
   580   002FC9  66                 	db	102	;'f'
   581   002FCA  6F                 	db	111	;'o'
   582   002FCB  75                 	db	117	;'u'
   583   002FCC  6E                 	db	110	;'n'
   584   002FCD  64                 	db	100	;'d'
   585   002FCE  20                 	db	32
   586   002FCF  00                 	db	0
   587   002FD0                     STR_17:
   588   002FD0  53                 	db	83	;'S'
   589   002FD1  75                 	db	117	;'u'
   590   002FD2  63                 	db	99	;'c'
   591   002FD3  63                 	db	99	;'c'
   592   002FD4  65                 	db	101	;'e'
   593   002FD5  73                 	db	115	;'s'
   594   002FD6  73                 	db	115	;'s'
   595   002FD7  66                 	db	102	;'f'
   596   002FD8  75                 	db	117	;'u'
   597   002FD9  6C                 	db	108	;'l'
   598   002FDA  6C                 	db	108	;'l'
   599   002FDB  79                 	db	121	;'y'
   600   002FDC  20                 	db	32
   601   002FDD  00                 	db	0
   602   002FDE                     STR_9:
   603   002FDE  53                 	db	83	;'S'
   604   002FDF  55                 	db	85	;'U'
   605   002FE0  43                 	db	67	;'C'
   606   002FE1  43                 	db	67	;'C'
   607   002FE2  45                 	db	69	;'E'
   608   002FE3  53                 	db	83	;'S'
   609   002FE4  53                 	db	83	;'S'
   610   002FE5  46                 	db	70	;'F'
   611   002FE6  55                 	db	85	;'U'
   612   002FE7  4C                 	db	76	;'L'
   613   002FE8  4C                 	db	76	;'L'
   614   002FE9  59                 	db	89	;'Y'
   615   002FEA  00                 	db	0
   616   002FEB                     STR_8:
   617   002FEB  43                 	db	67	;'C'
   618   002FEC  6C                 	db	108	;'l'
   619   002FED  65                 	db	101	;'e'
   620   002FEE  61                 	db	97	;'a'
   621   002FEF  72                 	db	114	;'r'
   622   002FF0  65                 	db	101	;'e'
   623   002FF1  64                 	db	100	;'d'
   624   002FF2  20                 	db	32
   625   002FF3  4C                 	db	76	;'L'
   626   002FF4  6F                 	db	111	;'o'
   627   002FF5  67                 	db	103	;'g'
   628   002FF6  00                 	db	0
   629   002FF7                     STR_6:
   630   002FF7  6C                 	db	108	;'l'
   631   002FF8  6F                 	db	111	;'o'
   632   002FF9  67                 	db	103	;'g'
   633   002FFA  73                 	db	115	;'s'
   634   002FFB  00                 	db	0
   635   002FFC                     STR_10:
   636   002FFC  0A                 	db	10
   637   002FFD  0D                 	db	13
   638   002FFE  00                 	db	0
   639   002FFF  00                 	db	0	; dummy byte at the end
   640   000000                     
   641                           ; #config settings
   642                           
   643                           	psect	cinit
   644   000C7E                     __pcinit:
   645                           	callstack 0
   646   000C7E                     start_initialization:
   647                           	callstack 0
   648   000C7E                     __initialization:
   649                           	callstack 0
   650                           
   651                           ; Initialize objects allocated to BANK1 (102 bytes)
   652                           ; load TBLPTR registers with __pidataBANK1
   653   000C7E  0EDE               	movlw	low __pidataBANK1
   654   000C80  6EF6               	movwf	tblptrl,c
   655   000C82  0E0D               	movlw	high __pidataBANK1
   656   000C84  6EF7               	movwf	tblptrh,c
   657   000C86  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   658   000C88  6EF8               	movwf	tblptru,c
   659   000C8A  EE01  F000         	lfsr	0,__pdataBANK1
   660   000C8E  EE10 F066          	lfsr	1,102
   661   000C92                     copy_data0:
   662   000C92  0009               	tblrd		*+
   663   000C94  CFF5 FFEE          	movff	tablat,postinc0
   664   000C98  50E5               	movf	postdec1,w,c
   665   000C9A  50E1               	movf	fsr1l,w,c
   666   000C9C  E1FA               	bnz	copy_data0
   667                           
   668                           ; Initialize objects allocated to BANK0 (27 bytes)
   669                           ; load TBLPTR registers with __pidataBANK0
   670   000C9E  0E2C               	movlw	low __pidataBANK0
   671   000CA0  6EF6               	movwf	tblptrl,c
   672   000CA2  0E14               	movlw	high __pidataBANK0
   673   000CA4  6EF7               	movwf	tblptrh,c
   674   000CA6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   675   000CA8  6EF8               	movwf	tblptru,c
   676   000CAA  EE00  F088         	lfsr	0,__pdataBANK0
   677   000CAE  EE10 F01B          	lfsr	1,27
   678   000CB2                     copy_data1:
   679   000CB2  0009               	tblrd		*+
   680   000CB4  CFF5 FFEE          	movff	tablat,postinc0
   681   000CB8  50E5               	movf	postdec1,w,c
   682   000CBA  50E1               	movf	fsr1l,w,c
   683   000CBC  E1FA               	bnz	copy_data1
   684                           
   685                           ; Initialize objects allocated to COMRAM (2 bytes)
   686                           ; load TBLPTR registers with __pidataCOMRAM
   687   000CBE  0EDA               	movlw	low __pidataCOMRAM
   688   000CC0  6EF6               	movwf	tblptrl,c
   689   000CC2  0E14               	movlw	high __pidataCOMRAM
   690   000CC4  6EF7               	movwf	tblptrh,c
   691   000CC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   692   000CC8  6EF8               	movwf	tblptru,c
   693   000CCA  0009               	tblrd		*+	;fetch initializer
   694   000CCC  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   695   000CD0  0009               	tblrd		*+	;fetch initializer
   696   000CD2  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   697                           
   698                           ; Clear objects allocated to BANK0 (40 bytes)
   699   000CD6  EE00  F060         	lfsr	0,__pbssBANK0
   700   000CDA  0E28               	movlw	40
   701   000CDC                     clear_0:
   702   000CDC  6AEE               	clrf	postinc0,c
   703   000CDE  06E8               	decf	wreg,f,c
   704   000CE0  E1FD               	bnz	clear_0
   705                           
   706                           ; Clear objects allocated to COMRAM (51 bytes)
   707   000CE2  EE00  F001         	lfsr	0,__pbssCOMRAM
   708   000CE6  0E33               	movlw	51
   709   000CE8                     clear_1:
   710   000CE8  6AEE               	clrf	postinc0,c
   711   000CEA  06E8               	decf	wreg,f,c
   712   000CEC  E1FD               	bnz	clear_1
   713   000CEE                     end_of_initialization:
   714                           	callstack 0
   715   000CEE                     __end_of__initialization:
   716                           	callstack 0
   717   000CEE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   718   000CF0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   719   000CF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   720   000CF4  6EF8               	movwf	tblptru,c
   721   000CF6  0100               	movlb	0
   722   000CF8  EF01  F008         	goto	_main	;jump to C main() function
   723                           
   724                           	psect	bssCOMRAM
   725   000001                     __pbssCOMRAM:
   726                           	callstack 0
   727   000001                     _clock_reg:
   728                           	callstack 0
   729   000001                     	ds	3
   730   000004                     isr@count:
   731                           	callstack 0
   732   000004                     	ds	2
   733   000006                     _blink:
   734                           	callstack 0
   735   000006                     	ds	2
   736   000008                     change_password@psswd:
   737                           	callstack 0
   738   000008                     	ds	2
   739   00000A                     	ds	2
   740   00000C                     change_password@i:
   741                           	callstack 0
   742   00000C                     	ds	2
   743   00000E                     change_password@choice:
   744                           	callstack 0
   745   00000E                     	ds	2
   746   000010                     change_password@re_pass:
   747                           	callstack 0
   748   000010                     	ds	2
   749   000012                     set_time@car:
   750                           	callstack 0
   751   000012                     	ds	2
   752   000014                     set_time@cal:
   753                           	callstack 0
   754   000014                     	ds	2
   755   000016                     view_log@menu:
   756                           	callstack 0
   757   000016                     	ds	2
   758   000018                     view_log@value2:
   759                           	callstack 0
   760   000018                     	ds	2
   761   00001A                     view_log@value1:
   762                           	callstack 0
   763   00001A                     	ds	2
   764   00001C                     view_menu@delay2:
   765                           	callstack 0
   766   00001C                     	ds	2
   767   00001E                     view_menu@delay1:
   768                           	callstack 0
   769   00001E                     	ds	2
   770   000020                     view_menu@menu:
   771                           	callstack 0
   772   000020                     	ds	2
   773   000022                     _password:
   774                           	callstack 0
   775   000022                     	ds	2
   776   000024                     _speed:
   777                           	callstack 0
   778   000024                     	ds	2
   779   000026                     read_switches@key:
   780                           	callstack 0
   781   000026                     	ds	1
   782   000027                     set_time@val:
   783                           	callstack 0
   784   000027                     	ds	1
   785   000028                     Download_log@b:
   786                           	callstack 0
   787   000028                     	ds	1
   788   000029                     Download_log@i:
   789                           	callstack 0
   790   000029                     	ds	1
   791   00002A                     Enter_password@input:
   792                           	callstack 0
   793   00002A                     	ds	1
   794   00002B                     Enter_password@attempt:
   795                           	callstack 0
   796   00002B                     	ds	1
   797   00002C                     _select_flag:
   798                           	callstack 0
   799   00002C                     	ds	1
   800   00002D                     	ds	1
   801   00002E                     	ds	1
   802   00002F                     _choose_flag:
   803                           	callstack 0
   804   00002F                     	ds	1
   805   000030                     _clear_flag:
   806                           	callstack 0
   807   000030                     	ds	1
   808   000031                     _flag:
   809                           	callstack 0
   810   000031                     	ds	1
   811   000032                     _count:
   812                           	callstack 0
   813   000032                     	ds	1
   814   000033                     _event:
   815                           	callstack 0
   816   000033                     	ds	1
   817                           
   818                           	psect	dataCOMRAM
   819   00005D                     __pdataCOMRAM:
   820                           	callstack 0
   821   00005D                     read_switches@once:
   822                           	callstack 0
   823   00005D                     	ds	1
   824   00005E                     _d:
   825                           	callstack 0
   826   00005E                     	ds	1
   827                           
   828                           	psect	bssBANK0
   829   000060                     __pbssBANK0:
   830                           	callstack 0
   831   000060                     	ds	15
   832   00006F                     _store_data:
   833                           	callstack 0
   834   00006F                     	ds	14
   835   00007D                     	ds	2
   836   00007F                     _time:
   837                           	callstack 0
   838   00007F                     	ds	9
   839                           
   840                           	psect	dataBANK0
   841   000088                     __pdataBANK0:
   842                           	callstack 0
   843   000088                     _Event1:
   844                           	callstack 0
   845   000088                     	ds	27
   846                           
   847                           	psect	dataBANK1
   848   000100                     __pdataBANK1:
   849                           	callstack 0
   850   000100                     view_menu@view_array:
   851                           	callstack 0
   852   000100                     	ds	102
   853                           
   854                           	psect	cstackCOMRAM
   855   000034                     __pcstackCOMRAM:
   856                           	callstack 0
   857   000034                     ?_read_adc:
   858                           	callstack 0
   859   000034                     ?___wmul:
   860                           	callstack 0
   861   000034                     ?___lwdiv:
   862                           	callstack 0
   863   000034                     ?___lwmod:
   864                           	callstack 0
   865   000034                     ?___ftpack:
   866                           	callstack 0
   867   000034                     i2c_write@data:
   868                           	callstack 0
   869   000034                     read_switches@detection_type:
   870                           	callstack 0
   871   000034                     putch@byte:
   872                           	callstack 0
   873   000034                     clcd_write@control_bit:
   874                           	callstack 0
   875   000034                     ___lbmod@divisor:
   876                           	callstack 0
   877   000034                     ___wmul@multiplier:
   878                           	callstack 0
   879   000034                     ___lwdiv@dividend:
   880                           	callstack 0
   881   000034                     ___lwmod@dividend:
   882                           	callstack 0
   883   000034                     ___ftpack@arg:
   884                           	callstack 0
   885                           
   886                           ; 3 bytes @ 0x0
   887   000034                     	ds	1
   888   000035                     write_ds1307@data:
   889                           	callstack 0
   890   000035                     read_ds1307@address:
   891                           	callstack 0
   892   000035                     clcd_write@byte:
   893                           	callstack 0
   894   000035                     write_external_eeprom@data:
   895                           	callstack 0
   896   000035                     read_external_eeprom@address:
   897                           	callstack 0
   898   000035                     ___lbmod@dividend:
   899                           	callstack 0
   900   000035                     puts@s:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x1
   904   000035                     	ds	1
   905   000036                     ??_read_adc:
   906   000036                     write_ds1307@address:
   907                           	callstack 0
   908   000036                     read_ds1307@data:
   909                           	callstack 0
   910   000036                     read_external_eeprom@data:
   911                           	callstack 0
   912   000036                     ___lbmod@counter:
   913                           	callstack 0
   914   000036                     write_external_eeprom@i:
   915                           	callstack 0
   916   000036                     ___wmul@multiplicand:
   917                           	callstack 0
   918   000036                     ___lwdiv@divisor:
   919                           	callstack 0
   920   000036                     ___lwmod@divisor:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x2
   924   000036                     	ds	1
   925   000037                     init_ds1307@dummy:
   926                           	callstack 0
   927   000037                     ___ftpack@exp:
   928                           	callstack 0
   929   000037                     ___lbmod@rem:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x3
   933   000037                     	ds	1
   934   000038                     write_external_eeprom@address:
   935                           	callstack 0
   936   000038                     ___ftpack@sign:
   937                           	callstack 0
   938   000038                     ___lwmod@counter:
   939                           	callstack 0
   940   000038                     read_adc@reg_val:
   941                           	callstack 0
   942   000038                     ___wmul@product:
   943                           	callstack 0
   944   000038                     ___lwdiv@quotient:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x4
   948   000038                     	ds	1
   949   000039                     ??___ftpack:
   950   000039                     store_external_eeprom@i:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x5
   954   000039                     	ds	1
   955   00003A                     read_adc@CHANNEL:
   956                           	callstack 0
   957   00003A                     ___lwdiv@counter:
   958                           	callstack 0
   959   00003A                     clcd_print@data:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x6
   963   00003A                     	ds	1
   964   00003B                     change_event@key:
   965                           	callstack 0
   966   00003B                     clcd_putch@addr:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x7
   970   00003B                     	ds	1
   971   00003C                     ?___lwtoft:
   972                           	callstack 0
   973   00003C                     clcd_print@addr:
   974                           	callstack 0
   975   00003C                     clcd_putch@data:
   976                           	callstack 0
   977   00003C                     ___lwtoft@c:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x8
   981   00003C                     	ds	1
   982   00003D                     ??_Enter_password:
   983   00003D                     ??_set_time:
   984   00003D                     ??_change_password:
   985   00003D                     ??_display_event:
   986   00003D                     view_menu@key:
   987                           	callstack 0
   988   00003D                     view_log@b:
   989                           	callstack 0
   990   00003D                     clear_log@val:
   991                           	callstack 0
   992   00003D                     Download_log@down_array:
   993                           	callstack 0
   994                           
   995                           ; 15 bytes @ 0x9
   996   00003D                     	ds	1
   997   00003E                     set_time@i:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0xA
  1001   00003E                     	ds	1
  1002   00003F                     ?___ftdiv:
  1003                           	callstack 0
  1004   00003F                     view_log@v:
  1005                           	callstack 0
  1006   00003F                     clear_log@key:
  1007                           	callstack 0
  1008   00003F                     Enter_password@i:
  1009                           	callstack 0
  1010   00003F                     set_time@j:
  1011                           	callstack 0
  1012   00003F                     change_password@i_249:
  1013                           	callstack 0
  1014   00003F                     ___ftdiv@f1:
  1015                           	callstack 0
  1016                           
  1017                           ; 3 bytes @ 0xB
  1018   00003F                     	ds	1
  1019   000040                     view_log@i:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0xC
  1023   000040                     	ds	1
  1024   000041                     view_log@key:
  1025                           	callstack 0
  1026   000041                     set_time@i_237:
  1027                           	callstack 0
  1028   000041                     Enter_password@wait:
  1029                           	callstack 0
  1030   000041                     change_password@i_252:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0xD
  1034   000041                     	ds	1
  1035   000042                     set_time@hr:
  1036                           	callstack 0
  1037   000042                     ___ftdiv@f2:
  1038                           	callstack 0
  1039                           
  1040                           ; 3 bytes @ 0xE
  1041   000042                     	ds	1
  1042   000043                     Enter_password@key:
  1043                           	callstack 0
  1044   000043                     set_time@sec:
  1045                           	callstack 0
  1046   000043                     change_password@j_250:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0xF
  1050   000043                     	ds	1
  1051   000044                     Enter_password@count:
  1052                           	callstack 0
  1053   000044                     set_time@min:
  1054                           	callstack 0
  1055   000044                     change_password@j_253:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x10
  1059   000044                     	ds	1
  1060   000045                     ??___ftdiv:
  1061   000045                     set_time@key:
  1062                           	callstack 0
  1063   000045                     change_password@key:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x11
  1067   000045                     	ds	1
  1068   000046                     set_time@change_time:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x12
  1072   000046                     	ds	2
  1073   000048                     ___ftdiv@cntr:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x14
  1077   000048                     	ds	1
  1078   000049                     ___ftdiv@f3:
  1079                           	callstack 0
  1080                           
  1081                           ; 3 bytes @ 0x15
  1082   000049                     	ds	3
  1083   00004C                     ___ftdiv@exp:
  1084                           	callstack 0
  1085   00004C                     Download_log@j:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x18
  1089   00004C                     	ds	1
  1090   00004D                     ___ftdiv@sign:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x19
  1094   00004D                     	ds	1
  1095   00004E                     ?___fttol:
  1096                           	callstack 0
  1097   00004E                     Download_log@k:
  1098                           	callstack 0
  1099   00004E                     ___fttol@f1:
  1100                           	callstack 0
  1101                           
  1102                           ; 3 bytes @ 0x1A
  1103   00004E                     	ds	1
  1104   00004F                     
  1105                           ; 1 bytes @ 0x1B
  1106   00004F                     	ds	3
  1107   000052                     ??___fttol:
  1108                           
  1109                           ; 1 bytes @ 0x1E
  1110   000052                     	ds	5
  1111   000057                     ___fttol@sign1:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x23
  1115   000057                     	ds	1
  1116   000058                     ___fttol@lval:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x24
  1120   000058                     	ds	4
  1121   00005C                     ___fttol@exp1:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x28
  1125   00005C                     	ds	1
  1126   00005D                     
  1127                           ; 1 bytes @ 0x29
  1128 ;;
  1129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1130 ;;
  1131 ;; *************** function _main *****************
  1132 ;; Defined at:
  1133 ;;		line 597 in file "main.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  choose_key      1    0        unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1147 ;;      Params:         0       0       0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels required when called: 7
  1153 ;; This function calls:
  1154 ;;		_Enter_menu
  1155 ;;		_Enter_password
  1156 ;;		_change_event
  1157 ;;		_display_event
  1158 ;;		_display_time
  1159 ;;		_get_time
  1160 ;;		_init_config
  1161 ;;		_read_switches
  1162 ;;		_view_menu
  1163 ;; This function is called by:
  1164 ;;		Startup code after reset
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text0
  1169   001002                     __ptext0:
  1170                           	callstack 0
  1171   001002                     _main:
  1172                           	callstack 24
  1173                           
  1174                           ;main.c: 600: init_config();
  1175                           
  1176                           ;incstack = 0
  1177   001002  EC21  F009         	call	_init_config	;wreg free
  1178   001006  0E01               	movlw	1
  1179   001008  ECAE  F008         	call	_read_switches
  1180                           
  1181                           ;main.c: 609: if (choose_flag == 0)
  1182   00100C  502F               	movf	_choose_flag^0,w,c
  1183   00100E  A4D8               	btfss	status,2,c
  1184   001010  D009               	goto	l3669
  1185                           
  1186                           ;main.c: 610: {;main.c: 611: get_time();
  1187   001012  ECBA  F006         	call	_get_time	;wreg free
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;main.c: 612: display_time();
  1191   001016  EC6A  F005         	call	_display_time	;wreg free
  1192                           
  1193                           ;main.c: 613: display_event();
  1194   00101A  EC6A  F009         	call	_display_event	;wreg free
  1195                           
  1196                           ;main.c: 614: change_event();
  1197   00101E  EC22  F007         	call	_change_event	;wreg free
  1198                           
  1199                           ;main.c: 615: }
  1200   001022  D7F1               	goto	l3655
  1201   001024                     l3669:
  1202                           
  1203                           ;main.c: 616: else if (choose_flag == 1)
  1204   001024  042F               	decf	_choose_flag^0,w,c
  1205   001026  A4D8               	btfss	status,2,c
  1206   001028  D003               	goto	l3673
  1207                           
  1208                           ;main.c: 617: {;main.c: 618: Enter_password();
  1209   00102A  EC61  F002         	call	_Enter_password	;wreg free
  1210                           
  1211                           ;main.c: 619: }
  1212   00102E  D7EB               	goto	l3655
  1213   001030                     l3673:
  1214                           
  1215                           ;main.c: 620: else if (choose_flag == 2)
  1216   001030  0E02               	movlw	2
  1217   001032  182F               	xorwf	_choose_flag^0,w,c
  1218   001034  A4D8               	btfss	status,2,c
  1219   001036  D003               	goto	l3677
  1220                           
  1221                           ;main.c: 621: {;main.c: 622: view_menu();
  1222   001038  EC07  F003         	call	_view_menu	;wreg free
  1223                           
  1224                           ;main.c: 623: }
  1225   00103C  D7E4               	goto	l3655
  1226   00103E                     l3677:
  1227                           
  1228                           ;main.c: 624: else if (choose_flag == 3)
  1229   00103E  0E03               	movlw	3
  1230   001040  182F               	xorwf	_choose_flag^0,w,c
  1231   001042  A4D8               	btfss	status,2,c
  1232   001044  D7E0               	goto	l3655
  1233                           
  1234                           ;main.c: 625: {;main.c: 626: Enter_menu();
  1235   001046  EC26  F008         	call	_Enter_menu	;wreg free
  1236   00104A  D7DD               	goto	l3655
  1237   00104C                     __end_of_main:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _view_menu *****************
  1241 ;; Defined at:
  1242 ;;		line 111 in file "main.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  key             1    9[COMRAM] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1256 ;;      Params:         0       0       0       0       0       0       0
  1257 ;;      Locals:         1       0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0
  1259 ;;      Totals:         1       0       0       0       0       0       0
  1260 ;;Total ram usage:        1 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 3
  1263 ;; This function calls:
  1264 ;;		___wmul
  1265 ;;		_clcd_print
  1266 ;;		_clcd_putch
  1267 ;;		_clcd_write
  1268 ;;		_read_switches
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text1
  1275   00060E                     __ptext1:
  1276                           	callstack 0
  1277   00060E                     _view_menu:
  1278                           	callstack 27
  1279                           
  1280                           ;main.c: 114: unsigned static int menu = 0,delay1 = 0,delay2 = 0;;main.c: 115: unsigned 
      +                          static char view_array[6][17] = {"View Log        ","Clear Log     ","Download Log   ","
      +                          Set Time       ","Change Password","<<   EXIT   >> "};;main.c: 116: unsigned char key;;m
      +                          ain.c: 119: clcd_putch('*',(0x80 + (0)));
  1281                           
  1282                           ;incstack = 0
  1283   00060E  0E80               	movlw	128
  1284   000610  6E3B               	movwf	clcd_putch@addr^0,c
  1285   000612  0E2A               	movlw	42
  1286   000614  EC24  F00A         	call	_clcd_putch
  1287                           
  1288                           ;main.c: 120: clcd_putch(' ',(0xC0 + (0)));
  1289   000618  0EC0               	movlw	192
  1290   00061A  6E3B               	movwf	clcd_putch@addr^0,c
  1291   00061C  0E20               	movlw	32
  1292   00061E  EC24  F00A         	call	_clcd_putch
  1293                           
  1294                           ;main.c: 122: clcd_print(view_array[menu],(0x80 + (1)));
  1295   000622  C020  F034         	movff	view_menu@menu,___wmul@multiplier
  1296   000626  C021  F035         	movff	view_menu@menu+1,___wmul@multiplier+1
  1297   00062A  0E00               	movlw	0
  1298   00062C  6E37               	movwf	(___wmul@multiplicand+1)^0,c
  1299   00062E  0E11               	movlw	17
  1300   000630  6E36               	movwf	___wmul@multiplicand^0,c
  1301   000632  ECD2  F009         	call	___wmul	;wreg free
  1302   000636  0E00               	movlw	low view_menu@view_array
  1303   000638  2434               	addwf	?___wmul^0,w,c
  1304   00063A  6E3A               	movwf	clcd_print@data^0,c
  1305   00063C  0E01               	movlw	high view_menu@view_array
  1306   00063E  2035               	addwfc	(?___wmul+1)^0,w,c
  1307   000640  6E3B               	movwf	(clcd_print@data+1)^0,c
  1308   000642  0E81               	movlw	129
  1309   000644  6E3C               	movwf	clcd_print@addr^0,c
  1310   000646  EC55  F007         	call	_clcd_print	;wreg free
  1311                           
  1312                           ;main.c: 123: clcd_print(view_array[menu+1],(0xC0 + (1)));
  1313   00064A  C020  F034         	movff	view_menu@menu,___wmul@multiplier
  1314   00064E  C021  F035         	movff	view_menu@menu+1,___wmul@multiplier+1
  1315   000652  0E00               	movlw	0
  1316   000654  6E37               	movwf	(___wmul@multiplicand+1)^0,c
  1317   000656  0E11               	movlw	17
  1318   000658  6E36               	movwf	___wmul@multiplicand^0,c
  1319   00065A  ECD2  F009         	call	___wmul	;wreg free
  1320   00065E  0E11               	movlw	low (view_menu@view_array+17)
  1321   000660  2434               	addwf	?___wmul^0,w,c
  1322   000662  6E3A               	movwf	clcd_print@data^0,c
  1323   000664  0E01               	movlw	high (view_menu@view_array+17)
  1324   000666  2035               	addwfc	(?___wmul+1)^0,w,c
  1325   000668  6E3B               	movwf	(clcd_print@data+1)^0,c
  1326   00066A  0EC1               	movlw	193
  1327   00066C  6E3C               	movwf	clcd_print@addr^0,c
  1328   00066E  EC55  F007         	call	_clcd_print	;wreg free
  1329                           
  1330                           ;main.c: 124: key = read_switches(0);
  1331   000672  0E00               	movlw	0
  1332   000674  ECAE  F008         	call	_read_switches
  1333   000678  6E3D               	movwf	view_menu@key^0,c
  1334                           
  1335                           ;main.c: 125: if(key == 5)
  1336   00067A  0E05               	movlw	5
  1337   00067C  183D               	xorwf	view_menu@key^0,w,c
  1338   00067E  A4D8               	btfss	status,2,c
  1339   000680  D002               	goto	l3601
  1340                           
  1341                           ;main.c: 126: {;main.c: 127: delay1++;
  1342   000682  4A1E               	infsnz	view_menu@delay1^0,f,c
  1343   000684  2A1F               	incf	(view_menu@delay1+1)^0,f,c
  1344   000686                     l3601:
  1345                           
  1346                           ;main.c: 128: };main.c: 129: if (delay1 > 1000 && key == 0xFF)
  1347   000686  0EE9               	movlw	233
  1348   000688  5C1E               	subwf	view_menu@delay1^0,w,c
  1349   00068A  0E03               	movlw	3
  1350   00068C  581F               	subwfb	(view_menu@delay1+1)^0,w,c
  1351   00068E  A0D8               	btfss	status,0,c
  1352   000690  D014               	goto	l3615
  1353   000692  283D               	incf	view_menu@key^0,w,c
  1354   000694  A4D8               	btfss	status,2,c
  1355   000696  D011               	goto	l3615
  1356                           
  1357                           ;main.c: 130: {;main.c: 131: if (select_flag < 7)
  1358   000698  0E07               	movlw	7
  1359   00069A  602C               	cpfslt	_select_flag^0,c
  1360   00069C  D009               	goto	l3613
  1361                           
  1362                           ;main.c: 132: {;main.c: 133: clcd_write(0x01, 0);
  1363   00069E  0E00               	movlw	0
  1364   0006A0  6E34               	movwf	clcd_write@control_bit^0,c
  1365   0006A2  0E01               	movlw	1
  1366   0006A4  ECBE  F009         	call	_clcd_write
  1367                           
  1368                           ;main.c: 134: choose_flag = 3;
  1369   0006A8  0E03               	movlw	3
  1370   0006AA  6E2F               	movwf	_choose_flag^0,c
  1371                           
  1372                           ;main.c: 136: select_flag = menu + 1;
  1373   0006AC  2820               	incf	view_menu@menu^0,w,c
  1374   0006AE  6E2C               	movwf	_select_flag^0,c
  1375   0006B0                     l3613:
  1376                           
  1377                           ;main.c: 137: };main.c: 138: delay1 = 0;
  1378   0006B0  0E00               	movlw	0
  1379   0006B2  6E1F               	movwf	(view_menu@delay1+1)^0,c
  1380   0006B4  0E00               	movlw	0
  1381   0006B6  6E1E               	movwf	view_menu@delay1^0,c
  1382                           
  1383                           ;main.c: 139: }
  1384   0006B8  D016               	goto	l3627
  1385   0006BA                     l3615:
  1386                           
  1387                           ;main.c: 140: else if (delay1 > 0 && delay1 < 1000 && key == 0xFF)
  1388   0006BA  501E               	movf	view_menu@delay1^0,w,c
  1389   0006BC  101F               	iorwf	(view_menu@delay1+1)^0,w,c
  1390   0006BE  B4D8               	btfsc	status,2,c
  1391   0006C0  D012               	goto	l3627
  1392   0006C2  0EE8               	movlw	232
  1393   0006C4  5C1E               	subwf	view_menu@delay1^0,w,c
  1394   0006C6  0E03               	movlw	3
  1395   0006C8  581F               	subwfb	(view_menu@delay1+1)^0,w,c
  1396   0006CA  B0D8               	btfsc	status,0,c
  1397   0006CC  D00C               	goto	l3627
  1398   0006CE  283D               	incf	view_menu@key^0,w,c
  1399   0006D0  A4D8               	btfss	status,2,c
  1400   0006D2  D009               	goto	l3627
  1401                           
  1402                           ;main.c: 141: {;main.c: 142: if (menu < 4)
  1403   0006D4  5021               	movf	(view_menu@menu+1)^0,w,c
  1404   0006D6  E1EC               	bnz	l3613
  1405   0006D8  0E04               	movlw	4
  1406   0006DA  5C20               	subwf	view_menu@menu^0,w,c
  1407   0006DC  B0D8               	btfsc	status,0,c
  1408   0006DE  D7E8               	goto	l3613
  1409                           
  1410                           ;main.c: 143: {;main.c: 144: menu++;
  1411   0006E0  4A20               	infsnz	view_menu@menu^0,f,c
  1412   0006E2  2A21               	incf	(view_menu@menu+1)^0,f,c
  1413   0006E4  D7E5               	goto	l3613
  1414   0006E6                     l3627:
  1415                           
  1416                           ;main.c: 147: };main.c: 148: if ( key == 6)
  1417   0006E6  0E06               	movlw	6
  1418   0006E8  183D               	xorwf	view_menu@key^0,w,c
  1419   0006EA  A4D8               	btfss	status,2,c
  1420   0006EC  D002               	goto	l3631
  1421                           
  1422                           ;main.c: 149: {;main.c: 150: delay2++;
  1423   0006EE  4A1C               	infsnz	view_menu@delay2^0,f,c
  1424   0006F0  2A1D               	incf	(view_menu@delay2+1)^0,f,c
  1425   0006F2                     l3631:
  1426                           
  1427                           ;main.c: 151: };main.c: 153: if (delay2 > 1000 && key == 0xFF)
  1428   0006F2  0EE9               	movlw	233
  1429   0006F4  5C1C               	subwf	view_menu@delay2^0,w,c
  1430   0006F6  0E03               	movlw	3
  1431   0006F8  581D               	subwfb	(view_menu@delay2+1)^0,w,c
  1432   0006FA  A0D8               	btfss	status,0,c
  1433   0006FC  D00F               	goto	l3641
  1434   0006FE  283D               	incf	view_menu@key^0,w,c
  1435   000700  A4D8               	btfss	status,2,c
  1436   000702  D00C               	goto	l3641
  1437                           
  1438                           ;main.c: 154: {;main.c: 155: clcd_write(0x01, 0);
  1439   000704  0E00               	movlw	0
  1440   000706  6E34               	movwf	clcd_write@control_bit^0,c
  1441   000708  0E01               	movlw	1
  1442   00070A  ECBE  F009         	call	_clcd_write
  1443                           
  1444                           ;main.c: 156: choose_flag = 0;
  1445   00070E  0E00               	movlw	0
  1446   000710  6E2F               	movwf	_choose_flag^0,c
  1447   000712                     l3639:
  1448                           
  1449                           ;main.c: 157: delay2 = 0;
  1450   000712  0E00               	movlw	0
  1451   000714  6E1D               	movwf	(view_menu@delay2+1)^0,c
  1452   000716  0E00               	movlw	0
  1453   000718  6E1C               	movwf	view_menu@delay2^0,c
  1454                           
  1455                           ;main.c: 158: }
  1456   00071A  0012               	return	
  1457   00071C                     l3641:
  1458                           
  1459                           ;main.c: 159: else if (delay2 > 0 && delay2 < 1000 && key == 0xFF)
  1460   00071C  501C               	movf	view_menu@delay2^0,w,c
  1461   00071E  101D               	iorwf	(view_menu@delay2+1)^0,w,c
  1462   000720  B4D8               	btfsc	status,2,c
  1463   000722  0012               	return	
  1464   000724  0EE8               	movlw	232
  1465   000726  5C1C               	subwf	view_menu@delay2^0,w,c
  1466   000728  0E03               	movlw	3
  1467   00072A  581D               	subwfb	(view_menu@delay2+1)^0,w,c
  1468   00072C  B0D8               	btfsc	status,0,c
  1469   00072E  0012               	return	
  1470   000730  283D               	incf	view_menu@key^0,w,c
  1471   000732  A4D8               	btfss	status,2,c
  1472   000734  0012               	return	
  1473                           
  1474                           ;main.c: 160: {;main.c: 161: if (menu >= 1)
  1475   000736  5020               	movf	view_menu@menu^0,w,c
  1476   000738  1021               	iorwf	(view_menu@menu+1)^0,w,c
  1477   00073A  B4D8               	btfsc	status,2,c
  1478   00073C  D7EA               	goto	l3639
  1479                           
  1480                           ;main.c: 162: {;main.c: 163: menu--;
  1481   00073E  0620               	decf	view_menu@menu^0,f,c
  1482   000740  A0D8               	btfss	status,0,c
  1483   000742  0621               	decf	(view_menu@menu+1)^0,f,c
  1484   000744  D7E6               	goto	l3639
  1485   000746                     __end_of_view_menu:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function ___wmul *****************
  1489 ;; Defined at:
  1490 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  multiplier      2    0[COMRAM] unsigned int 
  1493 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  product         2    4[COMRAM] unsigned int 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2    0[COMRAM] unsigned int 
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, status,0, prodl, prodh
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1505 ;;      Params:         4       0       0       0       0       0       0
  1506 ;;      Locals:         2       0       0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0
  1508 ;;      Totals:         6       0       0       0       0       0       0
  1509 ;;Total ram usage:        6 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_view_menu
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text2
  1520   0013A4                     __ptext2:
  1521                           	callstack 0
  1522   0013A4                     ___wmul:
  1523                           	callstack 28
  1524                           
  1525                           ;incstack = 0
  1526   0013A4  5034               	movf	___wmul@multiplier^0,w,c
  1527   0013A6  0236               	mulwf	___wmul@multiplicand^0,c
  1528   0013A8  CFF3 F038          	movff	prodl,___wmul@product
  1529   0013AC  CFF4 F039          	movff	prodh,___wmul@product+1
  1530   0013B0  5034               	movf	___wmul@multiplier^0,w,c
  1531   0013B2  0237               	mulwf	(___wmul@multiplicand+1)^0,c
  1532   0013B4  50F3               	movf	243,w,c
  1533   0013B6  2639               	addwf	(___wmul@product+1)^0,f,c
  1534   0013B8  5035               	movf	(___wmul@multiplier+1)^0,w,c
  1535   0013BA  0236               	mulwf	___wmul@multiplicand^0,c
  1536   0013BC  50F3               	movf	243,w,c
  1537   0013BE  2639               	addwf	(___wmul@product+1)^0,f,c
  1538   0013C0  C038  F034         	movff	___wmul@product,?___wmul
  1539   0013C4  C039  F035         	movff	___wmul@product+1,?___wmul+1
  1540   0013C8  0012               	return		;funcret
  1541   0013CA                     __end_of___wmul:
  1542                           	callstack 0
  1543                           
  1544 ;; *************** function _init_config *****************
  1545 ;; Defined at:
  1546 ;;		line 584 in file "main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1560 ;;      Params:         0       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0
  1563 ;;      Totals:         0       0       0       0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used: 1
  1566 ;; Hardware stack levels required when called: 6
  1567 ;; This function calls:
  1568 ;;		_clcd_print
  1569 ;;		_clcd_write
  1570 ;;		_init_adc
  1571 ;;		_init_clcd
  1572 ;;		_init_ds1307
  1573 ;;		_init_i2c
  1574 ;;		_init_matrix_keypad
  1575 ;;		_init_uart
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text3
  1582   001242                     __ptext3:
  1583                           	callstack 0
  1584   001242                     _init_config:
  1585                           	callstack 24
  1586                           
  1587                           ;main.c: 586: init_clcd();
  1588                           
  1589                           ;incstack = 0
  1590   001242  ECEB  F008         	call	_init_clcd	;wreg free
  1591                           
  1592                           ;main.c: 588: init_i2c();
  1593   001246  EC30  F00A         	call	_init_i2c	;wreg free
  1594                           
  1595                           ;main.c: 589: init_ds1307();
  1596   00124A  EC4B  F008         	call	_init_ds1307	;wreg free
  1597                           
  1598                           ;main.c: 590: init_adc();
  1599   00124E  ECF7  F009         	call	_init_adc	;wreg free
  1600                           
  1601                           ;main.c: 591: init_matrix_keypad();
  1602   001252  EC3B  F00A         	call	_init_matrix_keypad	;wreg free
  1603                           
  1604                           ;main.c: 592: init_uart();
  1605   001256  EC8F  F008         	call	_init_uart	;wreg free
  1606                           
  1607                           ;main.c: 593: clcd_print("  TIME    EV  SP", (0x80 + (0)));
  1608   00125A  0E63               	movlw	low STR_19
  1609   00125C  6E3A               	movwf	clcd_print@data^0,c
  1610   00125E  0E2F               	movlw	high STR_19
  1611   001260  6E3B               	movwf	(clcd_print@data+1)^0,c
  1612   001262  0E80               	movlw	128
  1613   001264  6E3C               	movwf	clcd_print@addr^0,c
  1614   001266  EC55  F007         	call	_clcd_print	;wreg free
  1615                           
  1616                           ;main.c: 594: clcd_write(0x01, 0);
  1617   00126A  0E00               	movlw	0
  1618   00126C  6E34               	movwf	clcd_write@control_bit^0,c
  1619   00126E  0E01               	movlw	1
  1620   001270  ECBE  F009         	call	_clcd_write
  1621   001274  0012               	return		;funcret
  1622   001276                     __end_of_init_config:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _init_uart *****************
  1626 ;; Defined at:
  1627 ;;		line 4 in file "uart.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1641 ;;      Params:         0       0       0       0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 1
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_init_config
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text4
  1656   00111E                     __ptext4:
  1657                           	callstack 0
  1658   00111E                     _init_uart:
  1659                           	callstack 28
  1660                           
  1661                           ;uart.c: 7: TRISC7 = 1;
  1662                           
  1663                           ;incstack = 0
  1664   00111E  8E94               	bsf	3988,7,c	;volatile
  1665                           
  1666                           ;uart.c: 8: TRISC6 = 0;
  1667   001120  9C94               	bcf	3988,6,c	;volatile
  1668                           
  1669                           ;uart.c: 13: CSRC = 0;
  1670   001122  9EAC               	bcf	4012,7,c	;volatile
  1671                           
  1672                           ;uart.c: 15: TX9 = 0;
  1673   001124  9CAC               	bcf	4012,6,c	;volatile
  1674                           
  1675                           ;uart.c: 17: TXEN = 1;
  1676   001126  8AAC               	bsf	4012,5,c	;volatile
  1677                           
  1678                           ;uart.c: 20: SYNC = 0;
  1679   001128  98AC               	bcf	4012,4,c	;volatile
  1680                           
  1681                           ;uart.c: 22: SENDB = 0;
  1682   00112A  96AC               	bcf	4012,3,c	;volatile
  1683                           
  1684                           ;uart.c: 25: BRGH = 1;
  1685   00112C  84AC               	bsf	4012,2,c	;volatile
  1686                           
  1687                           ;uart.c: 27: TRMT = 0;
  1688   00112E  92AC               	bcf	4012,1,c	;volatile
  1689                           
  1690                           ;uart.c: 29: TX9D = 0;
  1691   001130  90AC               	bcf	4012,0,c	;volatile
  1692                           
  1693                           ;uart.c: 34: SPEN = 1;
  1694   001132  8EAB               	bsf	4011,7,c	;volatile
  1695                           
  1696                           ;uart.c: 36: RX9 = 0;
  1697   001134  9CAB               	bcf	4011,6,c	;volatile
  1698                           
  1699                           ;uart.c: 38: SREN = 0;
  1700   001136  9AAB               	bcf	4011,5,c	;volatile
  1701                           
  1702                           ;uart.c: 40: CREN = 1;
  1703   001138  88AB               	bsf	4011,4,c	;volatile
  1704                           
  1705                           ;uart.c: 42: ADDEN = 0;
  1706   00113A  96AB               	bcf	4011,3,c	;volatile
  1707                           
  1708                           ;uart.c: 44: FERR = 0;
  1709   00113C  94AB               	bcf	4011,2,c	;volatile
  1710                           
  1711                           ;uart.c: 46: OERR = 0;
  1712   00113E  92AB               	bcf	4011,1,c	;volatile
  1713                           
  1714                           ;uart.c: 48: RX9D = 0;
  1715   001140  90AB               	bcf	4011,0,c	;volatile
  1716                           
  1717                           ;uart.c: 53: ABDOVF = 0;
  1718   001142  9EB8               	bcf	4024,7,c	;volatile
  1719                           
  1720                           ;uart.c: 55: RCIDL = 1;
  1721   001144  8CB8               	bsf	4024,6,c	;volatile
  1722                           
  1723                           ;uart.c: 57: SCKP = 0;
  1724   001146  98B8               	bcf	4024,4,c	;volatile
  1725                           
  1726                           ;uart.c: 59: BRG16 = 0;
  1727   001148  96B8               	bcf	4024,3,c	;volatile
  1728                           
  1729                           ;uart.c: 61: WUE = 0;
  1730   00114A  92B8               	bcf	4024,1,c	;volatile
  1731                           
  1732                           ;uart.c: 63: ABDEN = 0;
  1733   00114C  90B8               	bcf	4024,0,c	;volatile
  1734                           
  1735                           ;uart.c: 67: SPBRG = 129;
  1736   00114E  0E81               	movlw	129
  1737   001150  6EAF               	movwf	175,c	;volatile
  1738                           
  1739                           ;uart.c: 70: TXIE = 1;
  1740   001152  889D               	bsf	3997,4,c	;volatile
  1741                           
  1742                           ;uart.c: 72: TXIF = 0;
  1743   001154  989E               	bcf	3998,4,c	;volatile
  1744                           
  1745                           ;uart.c: 74: RCIE = 1;
  1746   001156  8A9D               	bsf	3997,5,c	;volatile
  1747                           
  1748                           ;uart.c: 76: RCIF = 0;
  1749   001158  9A9E               	bcf	3998,5,c	;volatile
  1750   00115A  0012               	return		;funcret
  1751   00115C                     __end_of_init_uart:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _init_matrix_keypad *****************
  1755 ;; Defined at:
  1756 ;;		line 4 in file "matrix_keypad.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_init_config
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text5
  1785   001476                     __ptext5:
  1786                           	callstack 0
  1787   001476                     _init_matrix_keypad:
  1788                           	callstack 28
  1789                           
  1790                           ;matrix_keypad.c: 7: ADCON1 = 0x0F;
  1791                           
  1792                           ;incstack = 0
  1793   001476  0E0F               	movlw	15
  1794   001478  6EC1               	movwf	193,c	;volatile
  1795                           
  1796                           ;matrix_keypad.c: 10: TRISB = 0x1E;
  1797   00147A  0E1E               	movlw	30
  1798   00147C  6E93               	movwf	147,c	;volatile
  1799                           
  1800                           ;matrix_keypad.c: 13: RBPU = 0;
  1801   00147E  9EF1               	bcf	4081,7,c	;volatile
  1802                           
  1803                           ;matrix_keypad.c: 15: PORTB = PORTB | 0xE0;
  1804   001480  5081               	movf	129,w,c	;volatile
  1805   001482  09E0               	iorlw	224
  1806   001484  6E81               	movwf	129,c	;volatile
  1807   001486  0012               	return		;funcret
  1808   001488                     __end_of_init_matrix_keypad:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _init_i2c *****************
  1812 ;; Defined at:
  1813 ;;		line 3 in file "i2c.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_init_config
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text6
  1842   001460                     __ptext6:
  1843                           	callstack 0
  1844   001460                     _init_i2c:
  1845                           	callstack 28
  1846                           
  1847                           ;i2c.c: 6: TRISC3 = 1;
  1848                           
  1849                           ;incstack = 0
  1850   001460  8694               	bsf	3988,3,c	;volatile
  1851                           
  1852                           ;i2c.c: 7: TRISC4 = 1;
  1853   001462  8894               	bsf	3988,4,c	;volatile
  1854                           
  1855                           ;i2c.c: 9: SSPCON1 = 0x28;
  1856   001464  0E28               	movlw	40
  1857   001466  6EC6               	movwf	198,c	;volatile
  1858                           
  1859                           ;i2c.c: 11: SSPADD = 0x31;
  1860   001468  0E31               	movlw	49
  1861   00146A  6EC8               	movwf	200,c	;volatile
  1862                           
  1863                           ;i2c.c: 13: CKE = 0;
  1864   00146C  9CC7               	bcf	4039,6,c	;volatile
  1865                           
  1866                           ;i2c.c: 15: SMP = 1;
  1867   00146E  8EC7               	bsf	4039,7,c	;volatile
  1868                           
  1869                           ;i2c.c: 17: SSPIF = 0;
  1870   001470  969E               	bcf	3998,3,c	;volatile
  1871                           
  1872                           ;i2c.c: 19: BCLIF = 0;
  1873   001472  96A1               	bcf	4001,3,c	;volatile
  1874   001474  0012               	return		;funcret
  1875   001476                     __end_of_init_i2c:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _init_ds1307 *****************
  1879 ;; Defined at:
  1880 ;;		line 12 in file "ds1307.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  dummy           1    3[COMRAM] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1894 ;;      Params:         0       0       0       0       0       0       0
  1895 ;;      Locals:         1       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 5
  1901 ;; This function calls:
  1902 ;;		_read_ds1307
  1903 ;;		_write_ds1307
  1904 ;; This function is called by:
  1905 ;;		_init_config
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text7
  1910   001096                     __ptext7:
  1911                           	callstack 0
  1912   001096                     _init_ds1307:
  1913                           	callstack 24
  1914                           
  1915                           ;ds1307.c: 14: unsigned char dummy;;ds1307.c: 17: dummy = read_ds1307(0x00);
  1916                           
  1917                           ;incstack = 0
  1918   001096  0E00               	movlw	0
  1919   001098  EC55  F009         	call	_read_ds1307
  1920   00109C  6E37               	movwf	init_ds1307@dummy^0,c
  1921                           
  1922                           ;ds1307.c: 18: write_ds1307(0x00, dummy | 0x80);
  1923   00109E  5037               	movf	init_ds1307@dummy^0,w,c
  1924   0010A0  0980               	iorlw	128
  1925   0010A2  6E35               	movwf	write_ds1307@data^0,c
  1926   0010A4  0E00               	movlw	0
  1927   0010A6  EC07  F00A         	call	_write_ds1307
  1928                           
  1929                           ;ds1307.c: 21: dummy = read_ds1307(0x02);
  1930   0010AA  0E02               	movlw	2
  1931   0010AC  EC55  F009         	call	_read_ds1307
  1932   0010B0  6E37               	movwf	init_ds1307@dummy^0,c
  1933                           
  1934                           ;ds1307.c: 22: write_ds1307(0x02, dummy | 0x00);
  1935   0010B2  C037  F035         	movff	init_ds1307@dummy,write_ds1307@data
  1936   0010B6  0E02               	movlw	2
  1937   0010B8  EC07  F00A         	call	_write_ds1307
  1938                           
  1939                           ;ds1307.c: 37: write_ds1307(0x07, 0x93);
  1940   0010BC  0E93               	movlw	147
  1941   0010BE  6E35               	movwf	write_ds1307@data^0,c
  1942   0010C0  0E07               	movlw	7
  1943   0010C2  EC07  F00A         	call	_write_ds1307
  1944                           
  1945                           ;ds1307.c: 40: dummy = read_ds1307(0x00);
  1946   0010C6  0E00               	movlw	0
  1947   0010C8  EC55  F009         	call	_read_ds1307
  1948   0010CC  6E37               	movwf	init_ds1307@dummy^0,c
  1949                           
  1950                           ;ds1307.c: 41: write_ds1307(0x00, dummy & 0x7F);
  1951   0010CE  5037               	movf	init_ds1307@dummy^0,w,c
  1952   0010D0  0B7F               	andlw	127
  1953   0010D2  6E35               	movwf	write_ds1307@data^0,c
  1954   0010D4  0E00               	movlw	0
  1955   0010D6  EC07  F00A         	call	_write_ds1307
  1956   0010DA  0012               	return		;funcret
  1957   0010DC                     __end_of_init_ds1307:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _init_clcd *****************
  1961 ;; Defined at:
  1962 ;;		line 27 in file "clcd.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1976 ;;      Params:         0       0       0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0
  1979 ;;      Totals:         0       0       0       0       0       0       0
  1980 ;;Total ram usage:        0 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 2
  1983 ;; This function calls:
  1984 ;;		_clcd_write
  1985 ;; This function is called by:
  1986 ;;		_init_config
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text8
  1991   0011D6                     __ptext8:
  1992                           	callstack 0
  1993   0011D6                     _init_clcd:
  1994                           	callstack 27
  1995                           
  1996                           ;clcd.c: 30: TRISD = 0x00;
  1997                           
  1998                           ;incstack = 0
  1999   0011D6  0E00               	movlw	0
  2000   0011D8  6E95               	movwf	149,c	;volatile
  2001                           
  2002                           ;clcd.c: 32: TRISC = TRISC & 0xF8;
  2003   0011DA  5094               	movf	148,w,c	;volatile
  2004   0011DC  0BF8               	andlw	248
  2005   0011DE  6E94               	movwf	148,c	;volatile
  2006                           
  2007                           ;clcd.c: 34: RC0 = 0;
  2008   0011E0  9082               	bcf	3970,0,c	;volatile
  2009                           
  2010                           ;clcd.c: 36: clcd_write(0x02, 0);
  2011   0011E2  0E00               	movlw	0
  2012   0011E4  6E34               	movwf	clcd_write@control_bit^0,c
  2013   0011E6  0E02               	movlw	2
  2014   0011E8  ECBE  F009         	call	_clcd_write
  2015                           
  2016                           ;clcd.c: 37: clcd_write(0x38, 0);
  2017   0011EC  0E00               	movlw	0
  2018   0011EE  6E34               	movwf	clcd_write@control_bit^0,c
  2019   0011F0  0E38               	movlw	56
  2020   0011F2  ECBE  F009         	call	_clcd_write
  2021                           
  2022                           ;clcd.c: 38: clcd_write(0x0C, 0);
  2023   0011F6  0E00               	movlw	0
  2024   0011F8  6E34               	movwf	clcd_write@control_bit^0,c
  2025   0011FA  0E0C               	movlw	12
  2026   0011FC  ECBE  F009         	call	_clcd_write
  2027                           
  2028                           ;clcd.c: 39: clcd_write(0x01, 0);
  2029   001200  0E00               	movlw	0
  2030   001202  6E34               	movwf	clcd_write@control_bit^0,c
  2031   001204  0E01               	movlw	1
  2032   001206  ECBE  F009         	call	_clcd_write
  2033   00120A  0012               	return		;funcret
  2034   00120C                     __end_of_init_clcd:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _init_adc *****************
  2038 ;; Defined at:
  2039 ;;		line 4 in file "adc.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2053 ;;      Params:         0       0       0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0
  2056 ;;      Totals:         0       0       0       0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_init_config
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text9
  2068   0013EE                     __ptext9:
  2069                           	callstack 0
  2070   0013EE                     _init_adc:
  2071                           	callstack 28
  2072                           
  2073                           ;adc.c: 7: ADFM = 1;
  2074                           
  2075                           ;incstack = 0
  2076   0013EE  8EC0               	bsf	4032,7,c	;volatile
  2077                           
  2078                           ;adc.c: 13: ACQT2 = 1;
  2079   0013F0  8AC0               	bsf	4032,5,c	;volatile
  2080                           
  2081                           ;adc.c: 14: ACQT1 = 0;
  2082   0013F2  98C0               	bcf	4032,4,c	;volatile
  2083                           
  2084                           ;adc.c: 15: ACQT0 = 0;
  2085   0013F4  96C0               	bcf	4032,3,c	;volatile
  2086                           
  2087                           ;adc.c: 21: ADCS0 = 0;
  2088   0013F6  90C0               	bcf	4032,0,c	;volatile
  2089                           
  2090                           ;adc.c: 22: ADCS1 = 1;
  2091   0013F8  82C0               	bsf	4032,1,c	;volatile
  2092                           
  2093                           ;adc.c: 23: ADCS2 = 0;
  2094   0013FA  94C0               	bcf	4032,2,c	;volatile
  2095                           
  2096                           ;adc.c: 26: GODONE = 0;
  2097   0013FC  92C2               	bcf	4034,1,c	;volatile
  2098                           
  2099                           ;adc.c: 32: VCFG1 = 0;
  2100   0013FE  9AC1               	bcf	4033,5,c	;volatile
  2101                           
  2102                           ;adc.c: 34: VCFG0 = 0;
  2103   001400  98C1               	bcf	4033,4,c	;volatile
  2104                           
  2105                           ;adc.c: 37: ADRESH = 0;
  2106   001402  0E00               	movlw	0
  2107   001404  6EC4               	movwf	196,c	;volatile
  2108                           
  2109                           ;adc.c: 38: ADRESL = 0;
  2110   001406  0E00               	movlw	0
  2111   001408  6EC3               	movwf	195,c	;volatile
  2112                           
  2113                           ;adc.c: 41: ADON = 1;
  2114   00140A  80C2               	bsf	4034,0,c	;volatile
  2115   00140C  0012               	return		;funcret
  2116   00140E                     __end_of_init_adc:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _get_time *****************
  2120 ;; Defined at:
  2121 ;;		line 560 in file "main.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 3F/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2135 ;;      Params:         0       0       0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0
  2138 ;;      Totals:         0       0       0       0       0       0       0
  2139 ;;Total ram usage:        0 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 5
  2142 ;; This function calls:
  2143 ;;		_read_ds1307
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text10
  2150   000D74                     __ptext10:
  2151                           	callstack 0
  2152   000D74                     _get_time:
  2153                           	callstack 25
  2154                           
  2155                           ;main.c: 562: clock_reg[0] = read_ds1307(0x02);
  2156                           
  2157                           ;incstack = 0
  2158   000D74  0E02               	movlw	2
  2159   000D76  EC55  F009         	call	_read_ds1307
  2160   000D7A  6E01               	movwf	_clock_reg^0,c
  2161                           
  2162                           ;main.c: 563: clock_reg[1] = read_ds1307(0x01);
  2163   000D7C  0E01               	movlw	1
  2164   000D7E  EC55  F009         	call	_read_ds1307
  2165   000D82  6E02               	movwf	(_clock_reg+1)^0,c
  2166                           
  2167                           ;main.c: 564: clock_reg[2] = read_ds1307(0x00);
  2168   000D84  0E00               	movlw	0
  2169   000D86  EC55  F009         	call	_read_ds1307
  2170   000D8A  6E03               	movwf	(_clock_reg+2)^0,c
  2171                           
  2172                           ;main.c: 565: if (clock_reg[0] & 0x40)
  2173   000D8C  AC01               	btfss	_clock_reg^0,6,c
  2174   000D8E  D004               	goto	l3519
  2175                           
  2176                           ;main.c: 566: {;main.c: 567: time[0] = '0' + ((clock_reg[0] >> 4) & 0x01);
  2177   000D90  3801               	swapf	_clock_reg^0,w,c
  2178   000D92  0B0F               	andlw	15
  2179   000D94  0B01               	andlw	1
  2180   000D96  D003               	goto	L1
  2181   000D98                     l3519:
  2182                           
  2183                           ;main.c: 570: else;main.c: 571: {;main.c: 572: time[0] = '0' + ((clock_reg[0] >> 4) & 0x
      +                          03);
  2184   000D98  3801               	swapf	_clock_reg^0,w,c
  2185   000D9A  0B0F               	andlw	15
  2186   000D9C  0B03               	andlw	3
  2187   000D9E                     L1:
  2188   000D9E  0F30               	addlw	48
  2189   000DA0  0100               	movlb	0	; () banked
  2190   000DA2  6F7F               	movwf	_time& (0+255),b
  2191                           
  2192                           ;main.c: 573: time[1] = '0' + (clock_reg[0] & 0x0F);
  2193   000DA4  5001               	movf	_clock_reg^0,w,c
  2194   000DA6  0B0F               	andlw	15
  2195   000DA8  0F30               	addlw	48
  2196   000DAA  6F80               	movwf	(_time+1)& (0+255),b
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 574: };main.c: 575: time[2] = ':';
  2200   000DAC  0E3A               	movlw	58
  2201   000DAE  6F81               	movwf	(_time+2)& (0+255),b
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 576: time[3] = '0' + ((clock_reg[1] >> 4) & 0x0F);
  2205   000DB0  3802               	swapf	(_clock_reg+1)^0,w,c
  2206   000DB2  0B0F               	andlw	15
  2207   000DB4  0B0F               	andlw	15
  2208   000DB6  0F30               	addlw	48
  2209   000DB8  6F82               	movwf	(_time+3)& (0+255),b
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;main.c: 577: time[4] = '0' + (clock_reg[1] & 0x0F);
  2213   000DBA  5002               	movf	(_clock_reg+1)^0,w,c
  2214   000DBC  0B0F               	andlw	15
  2215   000DBE  0F30               	addlw	48
  2216   000DC0  6F83               	movwf	(_time+4)& (0+255),b
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main.c: 578: time[5] = ':';
  2220   000DC2  0E3A               	movlw	58
  2221   000DC4  6F84               	movwf	(_time+5)& (0+255),b
  2222                           
  2223                           ;main.c: 579: time[6] = '0' + ((clock_reg[2] >> 4) & 0x0F);
  2224   000DC6  3803               	swapf	(_clock_reg+2)^0,w,c
  2225   000DC8  0B0F               	andlw	15
  2226   000DCA  0B0F               	andlw	15
  2227   000DCC  0F30               	addlw	48
  2228   000DCE  6F85               	movwf	(_time+6)& (0+255),b
  2229                           
  2230                           ;main.c: 580: time[7] = '0' + (clock_reg[2] & 0x0F);
  2231   000DD0  5003               	movf	(_clock_reg+2)^0,w,c
  2232   000DD2  0B0F               	andlw	15
  2233   000DD4  0F30               	addlw	48
  2234   000DD6  6F86               	movwf	(_time+7)& (0+255),b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;main.c: 581: time[8] = '\0';
  2238   000DD8  0E00               	movlw	0
  2239   000DDA  6F87               	movwf	(_time+8)& (0+255),b
  2240                           
  2241                           ; BSR set to: 0
  2242   000DDC  0012               	return		;funcret
  2243   000DDE                     __end_of_get_time:
  2244                           	callstack 0
  2245                           
  2246 ;; *************** function _read_ds1307 *****************
  2247 ;; Defined at:
  2248 ;;		line 54 in file "ds1307.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  address         1    wreg     unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  address         1    1[COMRAM] unsigned char 
  2253 ;;  data            1    2[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2263 ;;      Params:         0       0       0       0       0       0       0
  2264 ;;      Locals:         2       0       0       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0
  2266 ;;      Totals:         2       0       0       0       0       0       0
  2267 ;;Total ram usage:        2 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 4
  2270 ;; This function calls:
  2271 ;;		_i2c_read
  2272 ;;		_i2c_rep_start
  2273 ;;		_i2c_start
  2274 ;;		_i2c_stop
  2275 ;;		_i2c_write
  2276 ;; This function is called by:
  2277 ;;		_init_ds1307
  2278 ;;		_get_time
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text11
  2283   0012AA                     __ptext11:
  2284                           	callstack 0
  2285   0012AA                     _read_ds1307:
  2286                           	callstack 24
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;incstack = 0
  2290                           ;read_ds1307@address stored from wreg
  2291   0012AA  6E35               	movwf	read_ds1307@address^0,c
  2292                           
  2293                           ;ds1307.c: 56: unsigned char data;;ds1307.c: 58: i2c_start();
  2294   0012AC  EC5A  F00A         	call	_i2c_start	;wreg free
  2295                           
  2296                           ;ds1307.c: 59: i2c_write(0xD0);
  2297   0012B0  0ED0               	movlw	208
  2298   0012B2  EC44  F00A         	call	_i2c_write
  2299                           
  2300                           ;ds1307.c: 60: i2c_write(address);
  2301   0012B6  5035               	movf	read_ds1307@address^0,w,c
  2302   0012B8  EC44  F00A         	call	_i2c_write
  2303                           
  2304                           ;ds1307.c: 61: i2c_rep_start();
  2305   0012BC  EC5E  F00A         	call	_i2c_rep_start	;wreg free
  2306                           
  2307                           ;ds1307.c: 62: i2c_write(0xD1);
  2308   0012C0  0ED1               	movlw	209
  2309   0012C2  EC44  F00A         	call	_i2c_write
  2310                           
  2311                           ;ds1307.c: 63: data = i2c_read();
  2312   0012C6  EC4A  F00A         	call	_i2c_read	;wreg free
  2313   0012CA  6E36               	movwf	read_ds1307@data^0,c
  2314                           
  2315                           ;ds1307.c: 64: i2c_stop();
  2316   0012CC  EC56  F00A         	call	_i2c_stop	;wreg free
  2317                           
  2318                           ;ds1307.c: 66: return data;
  2319   0012D0  5036               	movf	read_ds1307@data^0,w,c
  2320   0012D2  0012               	return		;funcret
  2321   0012D4                     __end_of_read_ds1307:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _display_time *****************
  2325 ;; Defined at:
  2326 ;;		line 550 in file "main.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 3F/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2340 ;;      Params:         0       0       0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 3
  2347 ;; This function calls:
  2348 ;;		___ftdiv
  2349 ;;		___fttol
  2350 ;;		___lwdiv
  2351 ;;		___lwmod
  2352 ;;		___lwtoft
  2353 ;;		_clcd_print
  2354 ;;		_clcd_putch
  2355 ;;		_read_adc
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text12
  2362   000AD4                     __ptext12:
  2363                           	callstack 0
  2364   000AD4                     _display_time:
  2365                           	callstack 27
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 554: speed = (read_adc(0x04) / (10.3333));
  2369                           
  2370                           ;incstack = 0
  2371   000AD4  0E55               	movlw	85
  2372   000AD6  6E42               	movwf	___ftdiv@f2^0,c
  2373   000AD8  0E25               	movlw	37
  2374   000ADA  6E43               	movwf	(___ftdiv@f2+1)^0,c
  2375   000ADC  0E41               	movlw	65
  2376   000ADE  6E44               	movwf	(___ftdiv@f2+2)^0,c
  2377   000AE0  0E04               	movlw	4
  2378   000AE2  ECCD  F008         	call	_read_adc
  2379   000AE6  C034  F03C         	movff	?_read_adc,___lwtoft@c
  2380   000AEA  C035  F03D         	movff	?_read_adc+1,___lwtoft@c+1
  2381   000AEE  ECE5  F009         	call	___lwtoft	;wreg free
  2382   000AF2  C03C  F03F         	movff	?___lwtoft,___ftdiv@f1
  2383   000AF6  C03D  F040         	movff	?___lwtoft+1,___ftdiv@f1+1
  2384   000AFA  C03E  F041         	movff	?___lwtoft+2,___ftdiv@f1+2
  2385   000AFE  EC37  F004         	call	___ftdiv	;wreg free
  2386   000B02  C03F  F04E         	movff	?___ftdiv,___fttol@f1
  2387   000B06  C040  F04F         	movff	?___ftdiv+1,___fttol@f1+1
  2388   000B0A  C041  F050         	movff	?___ftdiv+2,___fttol@f1+2
  2389   000B0E  ECAA  F004         	call	___fttol	;wreg free
  2390   000B12  C04E  F024         	movff	?___fttol,_speed
  2391   000B16  C04F  F025         	movff	?___fttol+1,_speed+1
  2392                           
  2393                           ;main.c: 556: clcd_print(time, (0xC0 + (0)));
  2394   000B1A  0E7F               	movlw	low _time
  2395   000B1C  6E3A               	movwf	clcd_print@data^0,c
  2396   000B1E  6A3B               	clrf	(clcd_print@data+1)^0,c
  2397   000B20  0EC0               	movlw	192
  2398   000B22  6E3C               	movwf	clcd_print@addr^0,c
  2399   000B24  EC55  F007         	call	_clcd_print	;wreg free
  2400                           
  2401                           ;main.c: 557: clcd_putch( ((speed/10) +'0') , (0xC0 + (14)));
  2402   000B28  0ECE               	movlw	206
  2403   000B2A  6E3B               	movwf	clcd_putch@addr^0,c
  2404   000B2C  C024  F034         	movff	_speed,___lwdiv@dividend
  2405   000B30  C025  F035         	movff	_speed+1,___lwdiv@dividend+1
  2406   000B34  0E00               	movlw	0
  2407   000B36  6E37               	movwf	(___lwdiv@divisor+1)^0,c
  2408   000B38  0E0A               	movlw	10
  2409   000B3A  6E36               	movwf	___lwdiv@divisor^0,c
  2410   000B3C  ECAF  F007         	call	___lwdiv	;wreg free
  2411   000B40  5034               	movf	?___lwdiv^0,w,c
  2412   000B42  0F30               	addlw	48
  2413   000B44  EC24  F00A         	call	_clcd_putch
  2414                           
  2415                           ;main.c: 558: clcd_putch( ((speed % 10) +'0') , (0xC0 + (15)));
  2416   000B48  0ECF               	movlw	207
  2417   000B4A  6E3B               	movwf	clcd_putch@addr^0,c
  2418   000B4C  C024  F034         	movff	_speed,___lwmod@dividend
  2419   000B50  C025  F035         	movff	_speed+1,___lwmod@dividend+1
  2420   000B54  0E00               	movlw	0
  2421   000B56  6E37               	movwf	(___lwmod@divisor+1)^0,c
  2422   000B58  0E0A               	movlw	10
  2423   000B5A  6E36               	movwf	___lwmod@divisor^0,c
  2424   000B5C  EC6E  F008         	call	___lwmod	;wreg free
  2425   000B60  5034               	movf	?___lwmod^0,w,c
  2426   000B62  0F30               	addlw	48
  2427   000B64  EC24  F00A         	call	_clcd_putch
  2428   000B68  0012               	return		;funcret
  2429   000B6A                     __end_of_display_time:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _read_adc *****************
  2433 ;; Defined at:
  2434 ;;		line 44 in file "adc.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  CHANNEL         1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  CHANNEL         1    6[COMRAM] unsigned char 
  2439 ;;  reg_val         2    4[COMRAM] unsigned short 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  2    0[COMRAM] unsigned short 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0
  2444 ;; Tracked objects:
  2445 ;;		On entry : 3F/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2449 ;;      Params:         2       0       0       0       0       0       0
  2450 ;;      Locals:         3       0       0       0       0       0       0
  2451 ;;      Temps:          2       0       0       0       0       0       0
  2452 ;;      Totals:         7       0       0       0       0       0       0
  2453 ;;Total ram usage:        7 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_display_time
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text13
  2464   00119A                     __ptext13:
  2465                           	callstack 0
  2466   00119A                     _read_adc:
  2467                           	callstack 28
  2468                           
  2469                           ;incstack = 0
  2470                           ;read_adc@CHANNEL stored from wreg
  2471   00119A  6E3A               	movwf	read_adc@CHANNEL^0,c
  2472                           
  2473                           ;adc.c: 46: unsigned short reg_val;;adc.c: 50: ADCON0 = (ADCON0 & 0xC3) | ( CHANNEL << 2
      +                          );
  2474   00119C  C03A  F036         	movff	read_adc@CHANNEL,??_read_adc
  2475   0011A0  90D8               	bcf	status,0,c
  2476   0011A2  3636               	rlcf	??_read_adc^0,f,c
  2477   0011A4  90D8               	bcf	status,0,c
  2478   0011A6  3636               	rlcf	??_read_adc^0,f,c
  2479   0011A8  50C2               	movf	194,w,c	;volatile
  2480   0011AA  0BC3               	andlw	195
  2481   0011AC  1036               	iorwf	??_read_adc^0,w,c
  2482   0011AE  6EC2               	movwf	194,c	;volatile
  2483                           
  2484                           ;adc.c: 53: GO = 1;
  2485   0011B0  82C2               	bsf	4034,1,c	;volatile
  2486   0011B2                     l36:
  2487   0011B2  B2C2               	btfsc	4034,1,c	;volatile
  2488   0011B4  D7FE               	goto	l36
  2489                           
  2490                           ;adc.c: 55: reg_val = (ADRESH << 8) | ADRESL;
  2491   0011B6  50C3               	movf	195,w,c	;volatile
  2492   0011B8  CFC4 F036          	movff	4036,??_read_adc	;volatile
  2493   0011BC  6A37               	clrf	(??_read_adc+1)^0,c
  2494   0011BE  C036  F037         	movff	??_read_adc,??_read_adc+1
  2495   0011C2  6A36               	clrf	??_read_adc^0,c
  2496   0011C4  1036               	iorwf	??_read_adc^0,w,c
  2497   0011C6  6E38               	movwf	read_adc@reg_val^0,c
  2498   0011C8  5037               	movf	(??_read_adc+1)^0,w,c
  2499   0011CA  6E39               	movwf	(read_adc@reg_val+1)^0,c
  2500                           
  2501                           ;adc.c: 57: return reg_val;
  2502   0011CC  C038  F034         	movff	read_adc@reg_val,?_read_adc
  2503   0011D0  C039  F035         	movff	read_adc@reg_val+1,?_read_adc+1
  2504   0011D4  0012               	return		;funcret
  2505   0011D6                     __end_of_read_adc:
  2506                           	callstack 0
  2507                           
  2508 ;; *************** function ___lwtoft *****************
  2509 ;; Defined at:
  2510 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwtoft.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  c               2    8[COMRAM] unsigned int 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  3    8[COMRAM] float 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2524 ;;      Params:         3       0       0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0       0       0
  2527 ;;      Totals:         3       0       0       0       0       0       0
  2528 ;;Total ram usage:        3 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 2
  2531 ;; This function calls:
  2532 ;;		___ftpack
  2533 ;; This function is called by:
  2534 ;;		_display_time
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           	psect	text14
  2539   0013CA                     __ptext14:
  2540                           	callstack 0
  2541   0013CA                     ___lwtoft:
  2542                           	callstack 27
  2543                           
  2544                           ;incstack = 0
  2545   0013CA  C03C  F034         	movff	___lwtoft@c,___ftpack@arg
  2546   0013CE  C03D  F035         	movff	___lwtoft@c+1,___ftpack@arg+1
  2547   0013D2  6A36               	clrf	(___ftpack@arg+2)^0,c
  2548   0013D4  0E8E               	movlw	142
  2549   0013D6  6E37               	movwf	___ftpack@exp^0,c
  2550   0013D8  0E00               	movlw	0
  2551   0013DA  6E38               	movwf	___ftpack@sign^0,c
  2552   0013DC  EC13  F005         	call	___ftpack	;wreg free
  2553   0013E0  C034  F03C         	movff	?___ftpack,?___lwtoft
  2554   0013E4  C035  F03D         	movff	?___ftpack+1,?___lwtoft+1
  2555   0013E8  C036  F03E         	movff	?___ftpack+2,?___lwtoft+2
  2556   0013EC  0012               	return		;funcret
  2557   0013EE                     __end_of___lwtoft:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function ___fttol *****************
  2561 ;; Defined at:
  2562 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  f1              3   26[COMRAM] float 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  lval            4   36[COMRAM] unsigned long 
  2567 ;;  exp1            1   40[COMRAM] unsigned char 
  2568 ;;  sign1           1   35[COMRAM] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  4   26[COMRAM] long 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         4       0       0       0       0       0       0
  2579 ;;      Locals:         6       0       0       0       0       0       0
  2580 ;;      Temps:          5       0       0       0       0       0       0
  2581 ;;      Totals:        15       0       0       0       0       0       0
  2582 ;;Total ram usage:       15 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_display_time
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text15
  2593   000954                     __ptext15:
  2594                           	callstack 0
  2595   000954                     ___fttol:
  2596                           	callstack 28
  2597                           
  2598                           ;incstack = 0
  2599   000954  C050  F052         	movff	___fttol@f1+2,??___fttol
  2600   000958  6A53               	clrf	(??___fttol+1)^0,c
  2601   00095A  6A54               	clrf	(??___fttol+2)^0,c
  2602   00095C  344F               	rlcf	(___fttol@f1+1)^0,w,c
  2603   00095E  3652               	rlcf	??___fttol^0,f,c
  2604   000960  E301               	bnc	u2771
  2605   000962  8053               	bsf	(??___fttol+1)^0,0,c
  2606   000964                     u2771:
  2607   000964  5052               	movf	??___fttol^0,w,c
  2608   000966  6E5C               	movwf	___fttol@exp1^0,c
  2609   000968  505C               	movf	___fttol@exp1^0,w,c
  2610   00096A  A4D8               	btfss	status,2,c
  2611   00096C  D009               	goto	l3271
  2612   00096E                     u2780:
  2613   00096E  0E00               	movlw	0
  2614   000970  6E4E               	movwf	?___fttol^0,c
  2615   000972  0E00               	movlw	0
  2616   000974  6E4F               	movwf	(?___fttol+1)^0,c
  2617   000976  0E00               	movlw	0
  2618   000978  6E50               	movwf	(?___fttol+2)^0,c
  2619   00097A  0E00               	movlw	0
  2620   00097C  6E51               	movwf	(?___fttol+3)^0,c
  2621   00097E  0012               	return	
  2622   000980                     l3271:
  2623   000980  0E17               	movlw	23
  2624   000982  6E52               	movwf	??___fttol^0,c
  2625   000984  C04E  F053         	movff	___fttol@f1,??___fttol+1
  2626   000988  C04F  F054         	movff	___fttol@f1+1,??___fttol+2
  2627   00098C  C050  F055         	movff	___fttol@f1+2,??___fttol+3
  2628   000990  2852               	incf	??___fttol^0,w,c
  2629   000992  6E56               	movwf	(??___fttol+4)^0,c
  2630   000994  D004               	goto	u2790
  2631   000996                     u2795:
  2632   000996  90D8               	bcf	status,0,c
  2633   000998  3255               	rrcf	(??___fttol+3)^0,f,c
  2634   00099A  3254               	rrcf	(??___fttol+2)^0,f,c
  2635   00099C  3253               	rrcf	(??___fttol+1)^0,f,c
  2636   00099E                     u2790:
  2637   00099E  2E56               	decfsz	(??___fttol+4)^0,f,c
  2638   0009A0  D7FA               	goto	u2795
  2639   0009A2  5053               	movf	(??___fttol+1)^0,w,c
  2640   0009A4  6E57               	movwf	___fttol@sign1^0,c
  2641   0009A6  8E4F               	bsf	(___fttol@f1+1)^0,7,c
  2642   0009A8  0EFF               	movlw	255
  2643   0009AA  164E               	andwf	___fttol@f1^0,f,c
  2644   0009AC  0EFF               	movlw	255
  2645   0009AE  164F               	andwf	(___fttol@f1+1)^0,f,c
  2646   0009B0  0E00               	movlw	0
  2647   0009B2  1650               	andwf	(___fttol@f1+2)^0,f,c
  2648   0009B4  504E               	movf	___fttol@f1^0,w,c
  2649   0009B6  6E58               	movwf	___fttol@lval^0,c
  2650   0009B8  504F               	movf	(___fttol@f1+1)^0,w,c
  2651   0009BA  6E59               	movwf	(___fttol@lval+1)^0,c
  2652   0009BC  5050               	movf	(___fttol@f1+2)^0,w,c
  2653   0009BE  6E5A               	movwf	(___fttol@lval+2)^0,c
  2654   0009C0  6A5B               	clrf	(___fttol@lval+3)^0,c
  2655   0009C2  0E8E               	movlw	142
  2656   0009C4  5E5C               	subwf	___fttol@exp1^0,f,c
  2657   0009C6  AE5C               	btfss	___fttol@exp1^0,7,c
  2658   0009C8  D00D               	goto	l3293
  2659   0009CA  505C               	movf	___fttol@exp1^0,w,c
  2660   0009CC  0A80               	xorlw	128
  2661   0009CE  0F8F               	addlw	143
  2662   0009D0  A0D8               	btfss	status,0,c
  2663   0009D2  D7CD               	goto	u2780
  2664   0009D4                     l3289:
  2665   0009D4  90D8               	bcf	status,0,c
  2666   0009D6  325B               	rrcf	(___fttol@lval+3)^0,f,c
  2667   0009D8  325A               	rrcf	(___fttol@lval+2)^0,f,c
  2668   0009DA  3259               	rrcf	(___fttol@lval+1)^0,f,c
  2669   0009DC  3258               	rrcf	___fttol@lval^0,f,c
  2670   0009DE  3E5C               	incfsz	___fttol@exp1^0,f,c
  2671   0009E0  D7F9               	goto	l3289
  2672   0009E2  D00D               	goto	u2830
  2673   0009E4                     l3293:
  2674   0009E4  0E17               	movlw	23
  2675   0009E6  645C               	cpfsgt	___fttol@exp1^0,c
  2676   0009E8  D007               	goto	l3301
  2677   0009EA  D7C1               	goto	u2780
  2678   0009EC                     l3299:
  2679   0009EC  90D8               	bcf	status,0,c
  2680   0009EE  3658               	rlcf	___fttol@lval^0,f,c
  2681   0009F0  3659               	rlcf	(___fttol@lval+1)^0,f,c
  2682   0009F2  365A               	rlcf	(___fttol@lval+2)^0,f,c
  2683   0009F4  365B               	rlcf	(___fttol@lval+3)^0,f,c
  2684   0009F6  065C               	decf	___fttol@exp1^0,f,c
  2685   0009F8                     l3301:
  2686   0009F8  505C               	movf	___fttol@exp1^0,w,c
  2687   0009FA  A4D8               	btfss	status,2,c
  2688   0009FC  D7F7               	goto	l3299
  2689   0009FE                     u2830:
  2690   0009FE  5057               	movf	___fttol@sign1^0,w,c
  2691   000A00  B4D8               	btfsc	status,2,c
  2692   000A02  D008               	goto	l3307
  2693   000A04  1E5B               	comf	(___fttol@lval+3)^0,f,c
  2694   000A06  1E5A               	comf	(___fttol@lval+2)^0,f,c
  2695   000A08  1E59               	comf	(___fttol@lval+1)^0,f,c
  2696   000A0A  6C58               	negf	___fttol@lval^0,c
  2697   000A0C  0E00               	movlw	0
  2698   000A0E  2259               	addwfc	(___fttol@lval+1)^0,f,c
  2699   000A10  225A               	addwfc	(___fttol@lval+2)^0,f,c
  2700   000A12  225B               	addwfc	(___fttol@lval+3)^0,f,c
  2701   000A14                     l3307:
  2702   000A14  C058  F04E         	movff	___fttol@lval,?___fttol
  2703   000A18  C059  F04F         	movff	___fttol@lval+1,?___fttol+1
  2704   000A1C  C05A  F050         	movff	___fttol@lval+2,?___fttol+2
  2705   000A20  C05B  F051         	movff	___fttol@lval+3,?___fttol+3
  2706   000A24  0012               	return		;funcret
  2707   000A26                     __end_of___fttol:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function ___ftdiv *****************
  2711 ;; Defined at:
  2712 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdiv.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  f1              3   11[COMRAM] float 
  2715 ;;  f2              3   14[COMRAM] float 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  f3              3   21[COMRAM] float 
  2718 ;;  sign            1   25[COMRAM] unsigned char 
  2719 ;;  exp             1   24[COMRAM] unsigned char 
  2720 ;;  cntr            1   20[COMRAM] unsigned char 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  3   11[COMRAM] float 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2730 ;;      Params:         6       0       0       0       0       0       0
  2731 ;;      Locals:         6       0       0       0       0       0       0
  2732 ;;      Temps:          3       0       0       0       0       0       0
  2733 ;;      Totals:        15       0       0       0       0       0       0
  2734 ;;Total ram usage:       15 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 2
  2737 ;; This function calls:
  2738 ;;		___ftpack
  2739 ;; This function is called by:
  2740 ;;		_display_time
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text16
  2745   00086E                     __ptext16:
  2746                           	callstack 0
  2747   00086E                     ___ftdiv:
  2748                           	callstack 27
  2749                           
  2750                           ;incstack = 0
  2751   00086E  C041  F045         	movff	___ftdiv@f1+2,??___ftdiv
  2752   000872  6A46               	clrf	(??___ftdiv+1)^0,c
  2753   000874  6A47               	clrf	(??___ftdiv+2)^0,c
  2754   000876  3440               	rlcf	(___ftdiv@f1+1)^0,w,c
  2755   000878  3645               	rlcf	??___ftdiv^0,f,c
  2756   00087A  E301               	bnc	u2721
  2757   00087C  8046               	bsf	(??___ftdiv+1)^0,0,c
  2758   00087E                     u2721:
  2759   00087E  5045               	movf	??___ftdiv^0,w,c
  2760   000880  6E4C               	movwf	___ftdiv@exp^0,c
  2761   000882  504C               	movf	___ftdiv@exp^0,w,c
  2762   000884  A4D8               	btfss	status,2,c
  2763   000886  D007               	goto	l3225
  2764   000888  0E00               	movlw	0
  2765   00088A  6E3F               	movwf	?___ftdiv^0,c
  2766   00088C  0E00               	movlw	0
  2767   00088E  6E40               	movwf	(?___ftdiv+1)^0,c
  2768   000890  0E00               	movlw	0
  2769   000892  6E41               	movwf	(?___ftdiv+2)^0,c
  2770   000894  0012               	return	
  2771   000896                     l3225:
  2772   000896  C044  F045         	movff	___ftdiv@f2+2,??___ftdiv
  2773   00089A  6A46               	clrf	(??___ftdiv+1)^0,c
  2774   00089C  6A47               	clrf	(??___ftdiv+2)^0,c
  2775   00089E  3443               	rlcf	(___ftdiv@f2+1)^0,w,c
  2776   0008A0  3645               	rlcf	??___ftdiv^0,f,c
  2777   0008A2  E301               	bnc	u2741
  2778   0008A4  8046               	bsf	(??___ftdiv+1)^0,0,c
  2779   0008A6                     u2741:
  2780   0008A6  5045               	movf	??___ftdiv^0,w,c
  2781   0008A8  6E4D               	movwf	___ftdiv@sign^0,c
  2782   0008AA  504D               	movf	___ftdiv@sign^0,w,c
  2783   0008AC  A4D8               	btfss	status,2,c
  2784   0008AE  D007               	goto	l3231
  2785   0008B0  0E00               	movlw	0
  2786   0008B2  6E3F               	movwf	?___ftdiv^0,c
  2787   0008B4  0E00               	movlw	0
  2788   0008B6  6E40               	movwf	(?___ftdiv+1)^0,c
  2789   0008B8  0E00               	movlw	0
  2790   0008BA  6E41               	movwf	(?___ftdiv+2)^0,c
  2791   0008BC  0012               	return	
  2792   0008BE                     l3231:
  2793   0008BE  0E00               	movlw	0
  2794   0008C0  6E49               	movwf	___ftdiv@f3^0,c
  2795   0008C2  0E00               	movlw	0
  2796   0008C4  6E4A               	movwf	(___ftdiv@f3+1)^0,c
  2797   0008C6  0E00               	movlw	0
  2798   0008C8  6E4B               	movwf	(___ftdiv@f3+2)^0,c
  2799   0008CA  504D               	movf	___ftdiv@sign^0,w,c
  2800   0008CC  0F89               	addlw	137
  2801   0008CE  5E4C               	subwf	___ftdiv@exp^0,f,c
  2802   0008D0  C041  F04D         	movff	___ftdiv@f1+2,___ftdiv@sign
  2803   0008D4  5044               	movf	(___ftdiv@f2+2)^0,w,c
  2804   0008D6  1A4D               	xorwf	___ftdiv@sign^0,f,c
  2805   0008D8  0E80               	movlw	128
  2806   0008DA  164D               	andwf	___ftdiv@sign^0,f,c
  2807   0008DC  8E40               	bsf	(___ftdiv@f1+1)^0,7,c
  2808   0008DE  0EFF               	movlw	255
  2809   0008E0  163F               	andwf	___ftdiv@f1^0,f,c
  2810   0008E2  0EFF               	movlw	255
  2811   0008E4  1640               	andwf	(___ftdiv@f1+1)^0,f,c
  2812   0008E6  0E00               	movlw	0
  2813   0008E8  1641               	andwf	(___ftdiv@f1+2)^0,f,c
  2814   0008EA  8E43               	bsf	(___ftdiv@f2+1)^0,7,c
  2815   0008EC  0EFF               	movlw	255
  2816   0008EE  1642               	andwf	___ftdiv@f2^0,f,c
  2817   0008F0  0EFF               	movlw	255
  2818   0008F2  1643               	andwf	(___ftdiv@f2+1)^0,f,c
  2819   0008F4  0E00               	movlw	0
  2820   0008F6  1644               	andwf	(___ftdiv@f2+2)^0,f,c
  2821   0008F8  0E18               	movlw	24
  2822   0008FA  6E48               	movwf	___ftdiv@cntr^0,c
  2823   0008FC                     l3251:
  2824   0008FC  90D8               	bcf	status,0,c
  2825   0008FE  3649               	rlcf	___ftdiv@f3^0,f,c
  2826   000900  364A               	rlcf	(___ftdiv@f3+1)^0,f,c
  2827   000902  364B               	rlcf	(___ftdiv@f3+2)^0,f,c
  2828   000904  5042               	movf	___ftdiv@f2^0,w,c
  2829   000906  5C3F               	subwf	___ftdiv@f1^0,w,c
  2830   000908  5043               	movf	(___ftdiv@f2+1)^0,w,c
  2831   00090A  5840               	subwfb	(___ftdiv@f1+1)^0,w,c
  2832   00090C  5044               	movf	(___ftdiv@f2+2)^0,w,c
  2833   00090E  5841               	subwfb	(___ftdiv@f1+2)^0,w,c
  2834   000910  A0D8               	btfss	status,0,c
  2835   000912  D007               	goto	l979
  2836   000914  5042               	movf	___ftdiv@f2^0,w,c
  2837   000916  5E3F               	subwf	___ftdiv@f1^0,f,c
  2838   000918  5043               	movf	(___ftdiv@f2+1)^0,w,c
  2839   00091A  5A40               	subwfb	(___ftdiv@f1+1)^0,f,c
  2840   00091C  5044               	movf	(___ftdiv@f2+2)^0,w,c
  2841   00091E  5A41               	subwfb	(___ftdiv@f1+2)^0,f,c
  2842   000920  8049               	bsf	___ftdiv@f3^0,0,c
  2843   000922                     l979:
  2844   000922  90D8               	bcf	status,0,c
  2845   000924  363F               	rlcf	___ftdiv@f1^0,f,c
  2846   000926  3640               	rlcf	(___ftdiv@f1+1)^0,f,c
  2847   000928  3641               	rlcf	(___ftdiv@f1+2)^0,f,c
  2848   00092A  2E48               	decfsz	___ftdiv@cntr^0,f,c
  2849   00092C  D7E7               	goto	l3251
  2850   00092E  C049  F034         	movff	___ftdiv@f3,___ftpack@arg
  2851   000932  C04A  F035         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2852   000936  C04B  F036         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2853   00093A  C04C  F037         	movff	___ftdiv@exp,___ftpack@exp
  2854   00093E  C04D  F038         	movff	___ftdiv@sign,___ftpack@sign
  2855   000942  EC13  F005         	call	___ftpack	;wreg free
  2856   000946  C034  F03F         	movff	?___ftpack,?___ftdiv
  2857   00094A  C035  F040         	movff	?___ftpack+1,?___ftdiv+1
  2858   00094E  C036  F041         	movff	?___ftpack+2,?___ftdiv+2
  2859   000952  0012               	return		;funcret
  2860   000954                     __end_of___ftdiv:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function ___ftpack *****************
  2864 ;; Defined at:
  2865 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  arg             3    0[COMRAM] unsigned um
  2868 ;;  exp             1    3[COMRAM] unsigned char 
  2869 ;;  sign            1    4[COMRAM] unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  3    0[COMRAM] float 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2881 ;;      Params:         5       0       0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0
  2883 ;;      Temps:          3       0       0       0       0       0       0
  2884 ;;      Totals:         8       0       0       0       0       0       0
  2885 ;;Total ram usage:        8 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		___ftdiv
  2892 ;;		___lwtoft
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text17
  2897   000A26                     __ptext17:
  2898                           	callstack 0
  2899   000A26                     ___ftpack:
  2900                           	callstack 27
  2901                           
  2902                           ;incstack = 0
  2903   000A26  5037               	movf	___ftpack@exp^0,w,c
  2904   000A28  B4D8               	btfsc	status,2,c
  2905   000A2A  D005               	goto	u1940
  2906   000A2C  5034               	movf	___ftpack@arg^0,w,c
  2907   000A2E  1035               	iorwf	(___ftpack@arg+1)^0,w,c
  2908   000A30  1036               	iorwf	(___ftpack@arg+2)^0,w,c
  2909   000A32  A4D8               	btfss	status,2,c
  2910   000A34  D00C               	goto	l2753
  2911   000A36                     u1940:
  2912   000A36  0E00               	movlw	0
  2913   000A38  6E34               	movwf	?___ftpack^0,c
  2914   000A3A  0E00               	movlw	0
  2915   000A3C  6E35               	movwf	(?___ftpack+1)^0,c
  2916   000A3E  0E00               	movlw	0
  2917   000A40  6E36               	movwf	(?___ftpack+2)^0,c
  2918   000A42  0012               	return	
  2919   000A44                     l2751:
  2920   000A44  2A37               	incf	___ftpack@exp^0,f,c
  2921   000A46  90D8               	bcf	status,0,c
  2922   000A48  3236               	rrcf	(___ftpack@arg+2)^0,f,c
  2923   000A4A  3235               	rrcf	(___ftpack@arg+1)^0,f,c
  2924   000A4C  3234               	rrcf	___ftpack@arg^0,f,c
  2925   000A4E                     l2753:
  2926   000A4E  0E00               	movlw	0
  2927   000A50  1434               	andwf	___ftpack@arg^0,w,c
  2928   000A52  6E39               	movwf	??___ftpack^0,c
  2929   000A54  0E00               	movlw	0
  2930   000A56  1435               	andwf	(___ftpack@arg+1)^0,w,c
  2931   000A58  6E3A               	movwf	(??___ftpack+1)^0,c
  2932   000A5A  0EFE               	movlw	254
  2933   000A5C  1436               	andwf	(___ftpack@arg+2)^0,w,c
  2934   000A5E  6E3B               	movwf	(??___ftpack+2)^0,c
  2935   000A60  5039               	movf	??___ftpack^0,w,c
  2936   000A62  103A               	iorwf	(??___ftpack+1)^0,w,c
  2937   000A64  103B               	iorwf	(??___ftpack+2)^0,w,c
  2938   000A66  B4D8               	btfsc	status,2,c
  2939   000A68  D00C               	goto	l2759
  2940   000A6A  D7EC               	goto	l2751
  2941   000A6C                     l2755:
  2942   000A6C  2A37               	incf	___ftpack@exp^0,f,c
  2943   000A6E  0E01               	movlw	1
  2944   000A70  2634               	addwf	___ftpack@arg^0,f,c
  2945   000A72  0E00               	movlw	0
  2946   000A74  2235               	addwfc	(___ftpack@arg+1)^0,f,c
  2947   000A76  0E00               	movlw	0
  2948   000A78  2236               	addwfc	(___ftpack@arg+2)^0,f,c
  2949   000A7A  90D8               	bcf	status,0,c
  2950   000A7C  3236               	rrcf	(___ftpack@arg+2)^0,f,c
  2951   000A7E  3235               	rrcf	(___ftpack@arg+1)^0,f,c
  2952   000A80  3234               	rrcf	___ftpack@arg^0,f,c
  2953   000A82                     l2759:
  2954   000A82  0E00               	movlw	0
  2955   000A84  1434               	andwf	___ftpack@arg^0,w,c
  2956   000A86  6E39               	movwf	??___ftpack^0,c
  2957   000A88  0E00               	movlw	0
  2958   000A8A  1435               	andwf	(___ftpack@arg+1)^0,w,c
  2959   000A8C  6E3A               	movwf	(??___ftpack+1)^0,c
  2960   000A8E  0EFF               	movlw	255
  2961   000A90  1436               	andwf	(___ftpack@arg+2)^0,w,c
  2962   000A92  6E3B               	movwf	(??___ftpack+2)^0,c
  2963   000A94  5039               	movf	??___ftpack^0,w,c
  2964   000A96  103A               	iorwf	(??___ftpack+1)^0,w,c
  2965   000A98  103B               	iorwf	(??___ftpack+2)^0,w,c
  2966   000A9A  B4D8               	btfsc	status,2,c
  2967   000A9C  D006               	goto	l2763
  2968   000A9E  D7E6               	goto	l2755
  2969   000AA0                     l2761:
  2970   000AA0  0637               	decf	___ftpack@exp^0,f,c
  2971   000AA2  90D8               	bcf	status,0,c
  2972   000AA4  3634               	rlcf	___ftpack@arg^0,f,c
  2973   000AA6  3635               	rlcf	(___ftpack@arg+1)^0,f,c
  2974   000AA8  3636               	rlcf	(___ftpack@arg+2)^0,f,c
  2975   000AAA                     l2763:
  2976   000AAA  BE35               	btfsc	(___ftpack@arg+1)^0,7,c
  2977   000AAC  D003               	goto	u1980
  2978   000AAE  0E02               	movlw	2
  2979   000AB0  6037               	cpfslt	___ftpack@exp^0,c
  2980   000AB2  D7F6               	goto	l2761
  2981   000AB4                     u1980:
  2982   000AB4  A037               	btfss	___ftpack@exp^0,0,c
  2983   000AB6  9E35               	bcf	(___ftpack@arg+1)^0,7,c
  2984   000AB8  90D8               	bcf	status,0,c
  2985   000ABA  3237               	rrcf	___ftpack@exp^0,f,c
  2986   000ABC  5037               	movf	___ftpack@exp^0,w,c
  2987   000ABE  1236               	iorwf	(___ftpack@arg+2)^0,f,c
  2988   000AC0  5038               	movf	___ftpack@sign^0,w,c
  2989   000AC2  A4D8               	btfss	status,2,c
  2990   000AC4  8E36               	bsf	(___ftpack@arg+2)^0,7,c
  2991   000AC6  C034  F034         	movff	___ftpack@arg,?___ftpack
  2992   000ACA  C035  F035         	movff	___ftpack@arg+1,?___ftpack+1
  2993   000ACE  C036  F036         	movff	___ftpack@arg+2,?___ftpack+2
  2994   000AD2  0012               	return		;funcret
  2995   000AD4                     __end_of___ftpack:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _display_event *****************
  2999 ;; Defined at:
  3000 ;;		line 500 in file "main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3014 ;;      Params:         0       0       0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0
  3016 ;;      Temps:          1       0       0       0       0       0       0
  3017 ;;      Totals:         1       0       0       0       0       0       0
  3018 ;;Total ram usage:        1 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 3
  3021 ;; This function calls:
  3022 ;;		_clcd_print
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text18
  3029   0012D4                     __ptext18:
  3030                           	callstack 0
  3031   0012D4                     _display_event:
  3032                           	callstack 27
  3033                           
  3034                           ;main.c: 503: clcd_print("  TIME    EV  SP", (0x80 + (0)));
  3035                           
  3036                           ;incstack = 0
  3037   0012D4  0E63               	movlw	low STR_19
  3038   0012D6  6E3A               	movwf	clcd_print@data^0,c
  3039   0012D8  0E2F               	movlw	high STR_19
  3040   0012DA  6E3B               	movwf	(clcd_print@data+1)^0,c
  3041   0012DC  0E80               	movlw	128
  3042   0012DE  6E3C               	movwf	clcd_print@addr^0,c
  3043   0012E0  EC55  F007         	call	_clcd_print	;wreg free
  3044                           
  3045                           ;main.c: 504: clcd_print(Event1[event] , (0xC0 + (11)));
  3046   0012E4  5033               	movf	_event^0,w,c
  3047   0012E6  0D03               	mullw	3
  3048   0012E8  50F3               	movf	243,w,c
  3049   0012EA  0F88               	addlw	low _Event1
  3050   0012EC  6E3D               	movwf	??_display_event^0,c
  3051   0012EE  C03D  F03A         	movff	??_display_event,clcd_print@data
  3052   0012F2  6A3B               	clrf	(clcd_print@data+1)^0,c
  3053   0012F4  0ECB               	movlw	203
  3054   0012F6  6E3C               	movwf	clcd_print@addr^0,c
  3055   0012F8  EC55  F007         	call	_clcd_print	;wreg free
  3056   0012FC  0012               	return		;funcret
  3057   0012FE                     __end_of_display_event:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _change_event *****************
  3061 ;; Defined at:
  3062 ;;		line 506 in file "main.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  key             1    7[COMRAM] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3076 ;;      Params:         0       0       0       0       0       0       0
  3077 ;;      Locals:         1       0       0       0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0
  3079 ;;      Totals:         1       0       0       0       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 6
  3083 ;; This function calls:
  3084 ;;		_read_switches
  3085 ;;		_store_event
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text19
  3092   000E44                     __ptext19:
  3093                           	callstack 0
  3094   000E44                     _change_event:
  3095                           	callstack 24
  3096                           
  3097                           ;main.c: 508: unsigned char key;;main.c: 509: key = read_switches(1);
  3098                           
  3099                           ;incstack = 0
  3100   000E44  0E01               	movlw	1
  3101   000E46  ECAE  F008         	call	_read_switches
  3102   000E4A  6E3B               	movwf	change_event@key^0,c
  3103                           
  3104                           ;main.c: 511: if (key == 1)
  3105   000E4C  043B               	decf	change_event@key^0,w,c
  3106   000E4E  A4D8               	btfss	status,2,c
  3107   000E50  D00D               	goto	l3483
  3108                           
  3109                           ;main.c: 512: {;main.c: 513: if (event < 6)
  3110   000E52  0E06               	movlw	6
  3111   000E54  6033               	cpfslt	_event^0,c
  3112   000E56  D003               	goto	l3479
  3113                           
  3114                           ;main.c: 514: {;main.c: 515: event++;
  3115   000E58  2A33               	incf	_event^0,f,c
  3116                           
  3117                           ;main.c: 516: store_event();
  3118   000E5A  ECFB  F005         	call	_store_event	;wreg free
  3119   000E5E                     l3479:
  3120                           
  3121                           ;main.c: 517: };main.c: 518: if (event == 8)
  3122   000E5E  0E08               	movlw	8
  3123   000E60  1833               	xorwf	_event^0,w,c
  3124   000E62  A4D8               	btfss	status,2,c
  3125   000E64  D01B               	goto	l3501
  3126                           
  3127                           ;main.c: 519: {;main.c: 520: event = 1;
  3128   000E66  0E01               	movlw	1
  3129   000E68  6E33               	movwf	_event^0,c
  3130   000E6A  D018               	goto	l3501
  3131   000E6C                     l3483:
  3132                           
  3133                           ;main.c: 524: else if(key == 2)
  3134   000E6C  0E02               	movlw	2
  3135   000E6E  183B               	xorwf	change_event@key^0,w,c
  3136   000E70  A4D8               	btfss	status,2,c
  3137   000E72  D00D               	goto	l3495
  3138                           
  3139                           ;main.c: 525: {;main.c: 526: if (event == 8)
  3140   000E74  0E08               	movlw	8
  3141   000E76  1833               	xorwf	_event^0,w,c
  3142   000E78  A4D8               	btfss	status,2,c
  3143   000E7A  D002               	goto	l3489
  3144                           
  3145                           ;main.c: 527: {;main.c: 528: event =1;
  3146   000E7C  0E01               	movlw	1
  3147   000E7E  6E33               	movwf	_event^0,c
  3148   000E80                     l3489:
  3149                           
  3150                           ;main.c: 530: };main.c: 532: if (event > 1)
  3151   000E80  0E01               	movlw	1
  3152   000E82  6433               	cpfsgt	_event^0,c
  3153   000E84  D00B               	goto	l3501
  3154                           
  3155                           ;main.c: 533: {;main.c: 534: event--;
  3156   000E86  0633               	decf	_event^0,f,c
  3157   000E88                     l3493:
  3158                           
  3159                           ;main.c: 535: store_event();
  3160   000E88  ECFB  F005         	call	_store_event	;wreg free
  3161   000E8C  D007               	goto	l3501
  3162   000E8E                     l3495:
  3163                           
  3164                           ;main.c: 538: else if (key == 3)
  3165   000E8E  0E03               	movlw	3
  3166   000E90  183B               	xorwf	change_event@key^0,w,c
  3167   000E92  A4D8               	btfss	status,2,c
  3168   000E94  D003               	goto	l3501
  3169                           
  3170                           ;main.c: 539: {;main.c: 540: event = 8;
  3171   000E96  0E08               	movlw	8
  3172   000E98  6E33               	movwf	_event^0,c
  3173   000E9A  D7F6               	goto	l3493
  3174   000E9C                     l3501:
  3175                           
  3176                           ;main.c: 542: };main.c: 543: if (key == 4)
  3177   000E9C  0E04               	movlw	4
  3178   000E9E  183B               	xorwf	change_event@key^0,w,c
  3179   000EA0  A4D8               	btfss	status,2,c
  3180   000EA2  0012               	return	
  3181                           
  3182                           ;main.c: 544: {;main.c: 545: choose_flag = 1;
  3183   000EA4  0E01               	movlw	1
  3184   000EA6  6E2F               	movwf	_choose_flag^0,c
  3185   000EA8  0012               	return		;funcret
  3186   000EAA                     __end_of_change_event:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function _store_event *****************
  3190 ;; Defined at:
  3191 ;;		line 467 in file "main.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3205 ;;      Params:         0       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 5
  3212 ;; This function calls:
  3213 ;;		___lwdiv
  3214 ;;		___lwmod
  3215 ;;		_store_external_eeprom
  3216 ;; This function is called by:
  3217 ;;		_change_event
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text20
  3222   000BF6                     __ptext20:
  3223                           	callstack 0
  3224   000BF6                     _store_event:
  3225                           	callstack 24
  3226                           
  3227                           ;main.c: 471: store_data[0] = time [0];
  3228                           
  3229                           ;incstack = 0
  3230   000BF6  C07F  F06F         	movff	_time,_store_data
  3231                           
  3232                           ;main.c: 472: store_data[1] = time [1];
  3233   000BFA  C080  F070         	movff	_time+1,_store_data+1
  3234                           
  3235                           ;main.c: 473: store_data[2] = ':';
  3236   000BFE  0E3A               	movlw	58
  3237   000C00  0100               	movlb	0	; () banked
  3238   000C02  6F71               	movwf	(_store_data+2)& (0+255),b
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;main.c: 474: store_data[3] = time [3];
  3242   000C04  C082  F072         	movff	_time+3,_store_data+3
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;main.c: 475: store_data[4] = time [4];
  3246   000C08  C083  F073         	movff	_time+4,_store_data+4
  3247                           
  3248                           ;main.c: 476: store_data[5] = ':' ;
  3249   000C0C  0E3A               	movlw	58
  3250   000C0E  6F74               	movwf	(_store_data+5)& (0+255),b
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 477: store_data[6] = time [6];
  3254   000C10  C085  F075         	movff	_time+6,_store_data+6
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;main.c: 478: store_data[7] = time [7];
  3258   000C14  C086  F076         	movff	_time+7,_store_data+7
  3259                           
  3260                           ;main.c: 479: store_data[8] = ':' ;
  3261   000C18  0E3A               	movlw	58
  3262   000C1A  6F77               	movwf	(_store_data+8)& (0+255),b
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;main.c: 480: store_data[9] = Event1[event][0];
  3266   000C1C  5033               	movf	_event^0,w,c
  3267   000C1E  0D03               	mullw	3
  3268   000C20  50F3               	movf	243,w,c
  3269   000C22  0F88               	addlw	low _Event1
  3270   000C24  6ED9               	movwf	fsr2l,c
  3271   000C26  6ADA               	clrf	fsr2h,c
  3272   000C28  50DF               	movf	indf2,w,c
  3273   000C2A  6F78               	movwf	(_store_data+9)& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;main.c: 481: store_data[10] = Event1[event][1];
  3277   000C2C  5033               	movf	_event^0,w,c
  3278   000C2E  0D03               	mullw	3
  3279   000C30  50F3               	movf	243,w,c
  3280   000C32  0F89               	addlw	low (_Event1+1)
  3281   000C34  6ED9               	movwf	fsr2l,c
  3282   000C36  6ADA               	clrf	fsr2h,c
  3283   000C38  50DF               	movf	indf2,w,c
  3284   000C3A  6F79               	movwf	(_store_data+10)& (0+255),b
  3285                           
  3286                           ;main.c: 482: store_data[11] = ' ' ;
  3287   000C3C  0E20               	movlw	32
  3288   000C3E  6F7A               	movwf	(_store_data+11)& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;main.c: 483: store_data[12] = '0' + (speed/10);
  3292   000C40  C024  F034         	movff	_speed,___lwdiv@dividend
  3293   000C44  C025  F035         	movff	_speed+1,___lwdiv@dividend+1
  3294   000C48  0E00               	movlw	0
  3295   000C4A  6E37               	movwf	(___lwdiv@divisor+1)^0,c
  3296   000C4C  0E0A               	movlw	10
  3297   000C4E  6E36               	movwf	___lwdiv@divisor^0,c
  3298   000C50  ECAF  F007         	call	___lwdiv	;wreg free
  3299   000C54  5034               	movf	?___lwdiv^0,w,c
  3300   000C56  0F30               	addlw	48
  3301   000C58  0100               	movlb	0	; () banked
  3302   000C5A  6F7B               	movwf	(_store_data+12)& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;main.c: 484: store_data[13] = '0' + (speed%10);
  3306   000C5C  C024  F034         	movff	_speed,___lwmod@dividend
  3307   000C60  C025  F035         	movff	_speed+1,___lwmod@dividend+1
  3308   000C64  0E00               	movlw	0
  3309   000C66  6E37               	movwf	(___lwmod@divisor+1)^0,c
  3310   000C68  0E0A               	movlw	10
  3311   000C6A  6E36               	movwf	___lwmod@divisor^0,c
  3312   000C6C  EC6E  F008         	call	___lwmod	;wreg free
  3313   000C70  5034               	movf	?___lwmod^0,w,c
  3314   000C72  0F30               	addlw	48
  3315   000C74  0100               	movlb	0	; () banked
  3316   000C76  6F7C               	movwf	(_store_data+13)& (0+255),b
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;main.c: 485: store_external_eeprom();
  3320   000C78  EC3B  F009         	call	_store_external_eeprom	;wreg free
  3321   000C7C  0012               	return		;funcret
  3322   000C7E                     __end_of_store_event:
  3323                           	callstack 0
  3324                           
  3325 ;; *************** function _store_external_eeprom *****************
  3326 ;; Defined at:
  3327 ;;		line 488 in file "main.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  i               1    5[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 3F/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3341 ;;      Params:         0       0       0       0       0       0       0
  3342 ;;      Locals:         1       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0
  3344 ;;      Totals:         1       0       0       0       0       0       0
  3345 ;;Total ram usage:        1 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 4
  3348 ;; This function calls:
  3349 ;;		_write_external_eeprom
  3350 ;; This function is called by:
  3351 ;;		_store_event
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text21
  3356   001276                     __ptext21:
  3357                           	callstack 0
  3358   001276                     _store_external_eeprom:
  3359                           	callstack 24
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;main.c: 491: unsigned char i;;main.c: 492: for (i = 0; i< 14; i++)
  3363                           
  3364                           ;incstack = 0
  3365   001276  0E00               	movlw	0
  3366   001278  6E39               	movwf	store_external_eeprom@i^0,c
  3367   00127A                     l2731:
  3368                           
  3369                           ;main.c: 493: {;main.c: 494: write_external_eeprom(((count*14) + i),store_data[i]);
  3370   00127A  5039               	movf	store_external_eeprom@i^0,w,c
  3371   00127C  0F6F               	addlw	low _store_data
  3372   00127E  6ED9               	movwf	fsr2l,c
  3373   001280  6ADA               	clrf	fsr2h,c
  3374   001282  50DF               	movf	indf2,w,c
  3375   001284  6E35               	movwf	write_external_eeprom@data^0,c
  3376   001286  5032               	movf	_count^0,w,c
  3377   001288  0D0E               	mullw	14
  3378   00128A  50F3               	movf	243,w,c
  3379   00128C  2439               	addwf	store_external_eeprom@i^0,w,c
  3380   00128E  EC06  F009         	call	_write_external_eeprom
  3381   001292  2A39               	incf	store_external_eeprom@i^0,f,c
  3382   001294  0E0D               	movlw	13
  3383   001296  6439               	cpfsgt	store_external_eeprom@i^0,c
  3384   001298  D7F0               	goto	l2731
  3385                           
  3386                           ;main.c: 495: };main.c: 496: count++;
  3387   00129A  2A32               	incf	_count^0,f,c
  3388                           
  3389                           ;main.c: 497: if (count == 10)
  3390   00129C  0E0A               	movlw	10
  3391   00129E  1832               	xorwf	_count^0,w,c
  3392   0012A0  A4D8               	btfss	status,2,c
  3393   0012A2  0012               	return	
  3394                           
  3395                           ;main.c: 498: count=0;
  3396   0012A4  0E00               	movlw	0
  3397   0012A6  6E32               	movwf	_count^0,c
  3398   0012A8  0012               	return		;funcret
  3399   0012AA                     __end_of_store_external_eeprom:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function ___lwmod *****************
  3403 ;; Defined at:
  3404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  dividend        2    0[COMRAM] unsigned int 
  3407 ;;  divisor         2    2[COMRAM] unsigned int 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  counter         1    4[COMRAM] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  2    0[COMRAM] unsigned int 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3419 ;;      Params:         4       0       0       0       0       0       0
  3420 ;;      Locals:         1       0       0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0
  3422 ;;      Totals:         5       0       0       0       0       0       0
  3423 ;;Total ram usage:        5 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_store_event
  3430 ;;		_display_time
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text22
  3435   0010DC                     __ptext22:
  3436                           	callstack 0
  3437   0010DC                     ___lwmod:
  3438                           	callstack 28
  3439                           
  3440                           ;incstack = 0
  3441   0010DC  5036               	movf	___lwmod@divisor^0,w,c
  3442   0010DE  1037               	iorwf	(___lwmod@divisor+1)^0,w,c
  3443   0010E0  B4D8               	btfsc	status,2,c
  3444   0010E2  D018               	goto	l1127
  3445   0010E4  0E01               	movlw	1
  3446   0010E6  6E38               	movwf	___lwmod@counter^0,c
  3447   0010E8  D004               	goto	l2823
  3448   0010EA                     l2821:
  3449   0010EA  90D8               	bcf	status,0,c
  3450   0010EC  3636               	rlcf	___lwmod@divisor^0,f,c
  3451   0010EE  3637               	rlcf	(___lwmod@divisor+1)^0,f,c
  3452   0010F0  2A38               	incf	___lwmod@counter^0,f,c
  3453   0010F2                     l2823:
  3454   0010F2  AE37               	btfss	(___lwmod@divisor+1)^0,7,c
  3455   0010F4  D7FA               	goto	l2821
  3456   0010F6                     u2060:
  3457   0010F6  5036               	movf	___lwmod@divisor^0,w,c
  3458   0010F8  5C34               	subwf	___lwmod@dividend^0,w,c
  3459   0010FA  5037               	movf	(___lwmod@divisor+1)^0,w,c
  3460   0010FC  5835               	subwfb	(___lwmod@dividend+1)^0,w,c
  3461   0010FE  A0D8               	btfss	status,0,c
  3462   001100  D004               	goto	l2829
  3463   001102  5036               	movf	___lwmod@divisor^0,w,c
  3464   001104  5E34               	subwf	___lwmod@dividend^0,f,c
  3465   001106  5037               	movf	(___lwmod@divisor+1)^0,w,c
  3466   001108  5A35               	subwfb	(___lwmod@dividend+1)^0,f,c
  3467   00110A                     l2829:
  3468   00110A  90D8               	bcf	status,0,c
  3469   00110C  3237               	rrcf	(___lwmod@divisor+1)^0,f,c
  3470   00110E  3236               	rrcf	___lwmod@divisor^0,f,c
  3471   001110  2E38               	decfsz	___lwmod@counter^0,f,c
  3472   001112  D7F1               	goto	u2060
  3473   001114                     l1127:
  3474   001114  C034  F034         	movff	___lwmod@dividend,?___lwmod
  3475   001118  C035  F035         	movff	___lwmod@dividend+1,?___lwmod+1
  3476   00111C  0012               	return		;funcret
  3477   00111E                     __end_of___lwmod:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function ___lwdiv *****************
  3481 ;; Defined at:
  3482 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  dividend        2    0[COMRAM] unsigned int 
  3485 ;;  divisor         2    2[COMRAM] unsigned int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  quotient        2    4[COMRAM] unsigned int 
  3488 ;;  counter         1    6[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  2    0[COMRAM] unsigned int 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3498 ;;      Params:         4       0       0       0       0       0       0
  3499 ;;      Locals:         3       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0
  3501 ;;      Totals:         7       0       0       0       0       0       0
  3502 ;;Total ram usage:        7 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; Hardware stack levels required when called: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_store_event
  3509 ;;		_display_time
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text23
  3514   000F5E                     __ptext23:
  3515                           	callstack 0
  3516   000F5E                     ___lwdiv:
  3517                           	callstack 28
  3518                           
  3519                           ;incstack = 0
  3520   000F5E  0E00               	movlw	0
  3521   000F60  6E39               	movwf	(___lwdiv@quotient+1)^0,c
  3522   000F62  0E00               	movlw	0
  3523   000F64  6E38               	movwf	___lwdiv@quotient^0,c
  3524   000F66  5036               	movf	___lwdiv@divisor^0,w,c
  3525   000F68  1037               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3526   000F6A  B4D8               	btfsc	status,2,c
  3527   000F6C  D01C               	goto	l1117
  3528   000F6E  0E01               	movlw	1
  3529   000F70  6E3A               	movwf	___lwdiv@counter^0,c
  3530   000F72  D004               	goto	l2803
  3531   000F74                     l2801:
  3532   000F74  90D8               	bcf	status,0,c
  3533   000F76  3636               	rlcf	___lwdiv@divisor^0,f,c
  3534   000F78  3637               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3535   000F7A  2A3A               	incf	___lwdiv@counter^0,f,c
  3536   000F7C                     l2803:
  3537   000F7C  AE37               	btfss	(___lwdiv@divisor+1)^0,7,c
  3538   000F7E  D7FA               	goto	l2801
  3539   000F80                     u2030:
  3540   000F80  90D8               	bcf	status,0,c
  3541   000F82  3638               	rlcf	___lwdiv@quotient^0,f,c
  3542   000F84  3639               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3543   000F86  5036               	movf	___lwdiv@divisor^0,w,c
  3544   000F88  5C34               	subwf	___lwdiv@dividend^0,w,c
  3545   000F8A  5037               	movf	(___lwdiv@divisor+1)^0,w,c
  3546   000F8C  5835               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3547   000F8E  A0D8               	btfss	status,0,c
  3548   000F90  D005               	goto	l2813
  3549   000F92  5036               	movf	___lwdiv@divisor^0,w,c
  3550   000F94  5E34               	subwf	___lwdiv@dividend^0,f,c
  3551   000F96  5037               	movf	(___lwdiv@divisor+1)^0,w,c
  3552   000F98  5A35               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3553   000F9A  8038               	bsf	___lwdiv@quotient^0,0,c
  3554   000F9C                     l2813:
  3555   000F9C  90D8               	bcf	status,0,c
  3556   000F9E  3237               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3557   000FA0  3236               	rrcf	___lwdiv@divisor^0,f,c
  3558   000FA2  2E3A               	decfsz	___lwdiv@counter^0,f,c
  3559   000FA4  D7ED               	goto	u2030
  3560   000FA6                     l1117:
  3561   000FA6  C038  F034         	movff	___lwdiv@quotient,?___lwdiv
  3562   000FAA  C039  F035         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3563   000FAE  0012               	return		;funcret
  3564   000FB0                     __end_of___lwdiv:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _Enter_password *****************
  3568 ;; Defined at:
  3569 ;;		line 29 in file "main.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  i               2   11[COMRAM] unsigned int 
  3574 ;;  wait            2   13[COMRAM] unsigned int 
  3575 ;;  delay           2    0        unsigned int 
  3576 ;;  count           1   16[COMRAM] unsigned char 
  3577 ;;  key             1   15[COMRAM] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         0       0       0       0       0       0       0
  3588 ;;      Locals:         6       0       0       0       0       0       0
  3589 ;;      Temps:          2       0       0       0       0       0       0
  3590 ;;      Totals:         8       0       0       0       0       0       0
  3591 ;;Total ram usage:        8 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 5
  3594 ;; This function calls:
  3595 ;;		_clcd_print
  3596 ;;		_clcd_putch
  3597 ;;		_clcd_write
  3598 ;;		_read_external_eeprom
  3599 ;;		_read_switches
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text24
  3606   0004C2                     __ptext24:
  3607                           	callstack 0
  3608   0004C2                     _Enter_password:
  3609                           	callstack 25
  3610                           
  3611                           ;main.c: 36: clcd_write(0x01, 0);
  3612                           
  3613                           ;incstack = 0
  3614   0004C2  0E00               	movlw	0
  3615   0004C4  6E34               	movwf	clcd_write@control_bit^0,c
  3616   0004C6  0E01               	movlw	1
  3617   0004C8  ECBE  F009         	call	_clcd_write
  3618                           
  3619                           ;main.c: 37: clcd_print("ENTER PASSWORD",(0x80 + (0)));
  3620   0004CC  0E95               	movlw	low STR_1
  3621   0004CE  6E3A               	movwf	clcd_print@data^0,c
  3622   0004D0  0E2F               	movlw	high STR_1
  3623   0004D2  6E3B               	movwf	(clcd_print@data+1)^0,c
  3624   0004D4  0E80               	movlw	128
  3625   0004D6  6E3C               	movwf	clcd_print@addr^0,c
  3626   0004D8  EC55  F007         	call	_clcd_print	;wreg free
  3627                           
  3628                           ;main.c: 39: unsigned char key;;main.c: 40: unsigned char count = 0;
  3629   0004DC  0E00               	movlw	0
  3630   0004DE  6E44               	movwf	Enter_password@count^0,c
  3631                           
  3632                           ;main.c: 41: unsigned int delay, wait=0;
  3633   0004E0  0E00               	movlw	0
  3634   0004E2  6E42               	movwf	(Enter_password@wait+1)^0,c
  3635   0004E4  0E00               	movlw	0
  3636   0004E6  6E41               	movwf	Enter_password@wait^0,c
  3637   0004E8                     l3323:
  3638                           
  3639                           ;main.c: 45: {;main.c: 46: if (attempt < 4)
  3640   0004E8  0E04               	movlw	4
  3641   0004EA  602B               	cpfslt	Enter_password@attempt^0,c
  3642   0004EC  D087               	goto	l3381
  3643                           
  3644                           ;main.c: 47: {;main.c: 48: key = read_switches(1);
  3645   0004EE  0E01               	movlw	1
  3646   0004F0  ECAE  F008         	call	_read_switches
  3647   0004F4  6E43               	movwf	Enter_password@key^0,c
  3648                           
  3649                           ;main.c: 49: if (input < 4)
  3650   0004F6  0E04               	movlw	4
  3651   0004F8  602A               	cpfslt	Enter_password@input^0,c
  3652   0004FA  D028               	goto	l3349
  3653                           
  3654                           ;main.c: 50: {;main.c: 51: if (key == 5)
  3655   0004FC  0E05               	movlw	5
  3656   0004FE  1843               	xorwf	Enter_password@key^0,w,c
  3657   000500  A4D8               	btfss	status,2,c
  3658   000502  D009               	goto	l3337
  3659                           
  3660                           ;main.c: 52: {;main.c: 53: clcd_putch('*', (0xC0 + (input++)));
  3661   000504  502A               	movf	Enter_password@input^0,w,c
  3662   000506  0FC0               	addlw	192
  3663   000508  6E3B               	movwf	clcd_putch@addr^0,c
  3664   00050A  0E2A               	movlw	42
  3665   00050C  EC24  F00A         	call	_clcd_putch
  3666   000510  2A2A               	incf	Enter_password@input^0,f,c
  3667                           
  3668                           ;main.c: 54: count = count << 1 | 1 ;
  3669   000512  80D8               	bsf	status,0,c
  3670   000514  3644               	rlcf	Enter_password@count^0,f,c
  3671   000516                     l3337:
  3672                           
  3673                           ;main.c: 55: };main.c: 56: if (key == 6)
  3674   000516  0E06               	movlw	6
  3675   000518  1843               	xorwf	Enter_password@key^0,w,c
  3676   00051A  A4D8               	btfss	status,2,c
  3677   00051C  D00A               	goto	l3345
  3678                           
  3679                           ;main.c: 57: {;main.c: 58: clcd_putch('*',(0xC0 + (input++)));
  3680   00051E  502A               	movf	Enter_password@input^0,w,c
  3681   000520  0FC0               	addlw	192
  3682   000522  6E3B               	movwf	clcd_putch@addr^0,c
  3683   000524  0E2A               	movlw	42
  3684   000526  EC24  F00A         	call	_clcd_putch
  3685   00052A  2A2A               	incf	Enter_password@input^0,f,c
  3686                           
  3687                           ;main.c: 59: count = count << 1;
  3688   00052C  5044               	movf	Enter_password@count^0,w,c
  3689   00052E  2444               	addwf	Enter_password@count^0,w,c
  3690   000530  6E44               	movwf	Enter_password@count^0,c
  3691   000532                     l3345:
  3692                           
  3693                           ;main.c: 60: };main.c: 61: for (unsigned int i = 50000; i--; );
  3694   000532  0EC3               	movlw	195
  3695   000534  6E40               	movwf	(Enter_password@i+1)^0,c
  3696   000536  0E50               	movlw	80
  3697   000538  6E3F               	movwf	Enter_password@i^0,c
  3698   00053A                     l3347:
  3699   00053A  063F               	decf	Enter_password@i^0,f,c
  3700   00053C  A0D8               	btfss	status,0,c
  3701   00053E  0640               	decf	(Enter_password@i+1)^0,f,c
  3702   000540  283F               	incf	Enter_password@i^0,w,c
  3703   000542  E1FB               	bnz	l3347
  3704   000544  2840               	incf	(Enter_password@i+1)^0,w,c
  3705   000546  B4D8               	btfsc	status,2,c
  3706   000548  D7CF               	goto	l3323
  3707   00054A  D7F7               	goto	l3347
  3708   00054C                     l3349:
  3709                           
  3710                           ;main.c: 63: else;main.c: 64: {;main.c: 65: password = read_external_eeprom(0xFF);
  3711   00054C  0EFF               	movlw	255
  3712   00054E  EC94  F009         	call	_read_external_eeprom
  3713   000552  6E3D               	movwf	??_Enter_password^0,c
  3714   000554  503D               	movf	??_Enter_password^0,w,c
  3715   000556  6E22               	movwf	_password^0,c
  3716   000558  6A23               	clrf	(_password+1)^0,c
  3717                           
  3718                           ;main.c: 66: if (count == password )
  3719   00055A  5044               	movf	Enter_password@count^0,w,c
  3720   00055C  6E3D               	movwf	??_Enter_password^0,c
  3721   00055E  6A3E               	clrf	(??_Enter_password+1)^0,c
  3722   000560  5022               	movf	_password^0,w,c
  3723   000562  183D               	xorwf	??_Enter_password^0,w,c
  3724   000564  E10B               	bnz	l3357
  3725   000566  5023               	movf	(_password+1)^0,w,c
  3726   000568  183E               	xorwf	(??_Enter_password+1)^0,w,c
  3727   00056A  A4D8               	btfss	status,2,c
  3728   00056C  D007               	goto	l3357
  3729                           
  3730                           ;main.c: 67: {;main.c: 68: choose_flag = 2;
  3731   00056E  0E02               	movlw	2
  3732   000570  6E2F               	movwf	_choose_flag^0,c
  3733                           
  3734                           ;main.c: 69: input = 0;
  3735   000572  0E00               	movlw	0
  3736   000574  6E2A               	movwf	Enter_password@input^0,c
  3737                           
  3738                           ;main.c: 70: d = 4;
  3739   000576  0E04               	movlw	4
  3740   000578  6E5E               	movwf	_d^0,c
  3741                           
  3742                           ;main.c: 72: break;
  3743   00057A  0012               	return	
  3744   00057C                     l3357:
  3745                           
  3746                           ;main.c: 74: else;main.c: 75: {;main.c: 76: if (d >= 1)
  3747   00057C  505E               	movf	_d^0,w,c
  3748   00057E  B4D8               	btfsc	status,2,c
  3749   000580  D03A               	goto	l3379
  3750                           
  3751                           ;main.c: 77: {;main.c: 78: clcd_print("   Try_Again    ",(0x80 + (0)));
  3752   000582  0E30               	movlw	low STR_2
  3753   000584  6E3A               	movwf	clcd_print@data^0,c
  3754   000586  0E2F               	movlw	high STR_2
  3755   000588  6E3B               	movwf	(clcd_print@data+1)^0,c
  3756   00058A  0E80               	movlw	128
  3757   00058C  6E3C               	movwf	clcd_print@addr^0,c
  3758   00058E  EC55  F007         	call	_clcd_print	;wreg free
  3759                           
  3760                           ;main.c: 79: clcd_putch(d + 48, (0xC0 + (0)));
  3761   000592  0EC0               	movlw	192
  3762   000594  6E3B               	movwf	clcd_putch@addr^0,c
  3763   000596  505E               	movf	_d^0,w,c
  3764   000598  0F30               	addlw	48
  3765   00059A  EC24  F00A         	call	_clcd_putch
  3766                           
  3767                           ;main.c: 80: clcd_print("  Time left    ",(0xC0 + (1)));
  3768   00059E  0E85               	movlw	low STR_3
  3769   0005A0  6E3A               	movwf	clcd_print@data^0,c
  3770   0005A2  0E2F               	movlw	high STR_3
  3771   0005A4  6E3B               	movwf	(clcd_print@data+1)^0,c
  3772   0005A6  0EC1               	movlw	193
  3773   0005A8  6E3C               	movwf	clcd_print@addr^0,c
  3774   0005AA  EC55  F007         	call	_clcd_print	;wreg free
  3775                           
  3776                           ;main.c: 81: if (wait++ == 2000)
  3777   0005AE  4A41               	infsnz	Enter_password@wait^0,f,c
  3778   0005B0  2A42               	incf	(Enter_password@wait+1)^0,f,c
  3779   0005B2  0ED1               	movlw	209
  3780   0005B4  1841               	xorwf	Enter_password@wait^0,w,c
  3781   0005B6  E198               	bnz	l3323
  3782   0005B8  0E07               	movlw	7
  3783   0005BA  1842               	xorwf	(Enter_password@wait+1)^0,w,c
  3784   0005BC  A4D8               	btfss	status,2,c
  3785   0005BE  D794               	goto	l3323
  3786                           
  3787                           ;main.c: 82: {;main.c: 83: d--;
  3788   0005C0  065E               	decf	_d^0,f,c
  3789                           
  3790                           ;main.c: 84: attempt++;
  3791   0005C2  2A2B               	incf	Enter_password@attempt^0,f,c
  3792                           
  3793                           ;main.c: 85: wait = 0;
  3794   0005C4  0E00               	movlw	0
  3795   0005C6  6E42               	movwf	(Enter_password@wait+1)^0,c
  3796   0005C8  0E00               	movlw	0
  3797   0005CA  6E41               	movwf	Enter_password@wait^0,c
  3798                           
  3799                           ;main.c: 86: clcd_print("                ",(0xC0 + (0)));
  3800   0005CC  0E1F               	movlw	low STR_4
  3801   0005CE  6E3A               	movwf	clcd_print@data^0,c
  3802   0005D0  0E2F               	movlw	high STR_4
  3803   0005D2  6E3B               	movwf	(clcd_print@data+1)^0,c
  3804   0005D4  0EC0               	movlw	192
  3805   0005D6  6E3C               	movwf	clcd_print@addr^0,c
  3806   0005D8  EC55  F007         	call	_clcd_print	;wreg free
  3807                           
  3808                           ;main.c: 87: clcd_print("_ENTER_PASSWORD ",(0x80 + (0)));
  3809   0005DC  0E52               	movlw	low STR_5
  3810   0005DE  6E3A               	movwf	clcd_print@data^0,c
  3811   0005E0  0E2F               	movlw	high STR_5
  3812   0005E2  6E3B               	movwf	(clcd_print@data+1)^0,c
  3813   0005E4  0E80               	movlw	128
  3814   0005E6  6E3C               	movwf	clcd_print@addr^0,c
  3815   0005E8  EC55  F007         	call	_clcd_print	;wreg free
  3816                           
  3817                           ;main.c: 88: count = 0;
  3818   0005EC  0E00               	movlw	0
  3819   0005EE  6E44               	movwf	Enter_password@count^0,c
  3820                           
  3821                           ;main.c: 89: input = 0;
  3822   0005F0  0E00               	movlw	0
  3823   0005F2  6E2A               	movwf	Enter_password@input^0,c
  3824   0005F4  D779               	goto	l3323
  3825   0005F6                     l3379:
  3826                           
  3827                           ;main.c: 92: else;main.c: 93: {;main.c: 94: attempt = 5 ;
  3828   0005F6  0E05               	movlw	5
  3829   0005F8  6E2B               	movwf	Enter_password@attempt^0,c
  3830   0005FA  D776               	goto	l3323
  3831   0005FC                     l3381:
  3832                           
  3833                           ;main.c: 99: else;main.c: 100: {;main.c: 101: choose_flag = 0;
  3834   0005FC  0E00               	movlw	0
  3835   0005FE  6E2F               	movwf	_choose_flag^0,c
  3836                           
  3837                           ;main.c: 102: attempt = 0;
  3838   000600  0E00               	movlw	0
  3839   000602  6E2B               	movwf	Enter_password@attempt^0,c
  3840                           
  3841                           ;main.c: 103: input = 0;
  3842   000604  0E00               	movlw	0
  3843   000606  6E2A               	movwf	Enter_password@input^0,c
  3844                           
  3845                           ;main.c: 105: d = 4;
  3846   000608  0E04               	movlw	4
  3847   00060A  6E5E               	movwf	_d^0,c
  3848                           
  3849                           ;main.c: 106: break;
  3850   00060C  0012               	return	
  3851   00060E                     __end_of_Enter_password:
  3852                           	callstack 0
  3853                           
  3854 ;; *************** function _Enter_menu *****************
  3855 ;; Defined at:
  3856 ;;		line 435 in file "main.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3870 ;;      Params:         0       0       0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0
  3872 ;;      Temps:          0       0       0       0       0       0       0
  3873 ;;      Totals:         0       0       0       0       0       0       0
  3874 ;;Total ram usage:        0 bytes
  3875 ;; Hardware stack levels used: 1
  3876 ;; Hardware stack levels required when called: 6
  3877 ;; This function calls:
  3878 ;;		_Download_log
  3879 ;;		_change_password
  3880 ;;		_clear_log
  3881 ;;		_set_time
  3882 ;;		_view_log
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text25
  3889   00104C                     __ptext25:
  3890                           	callstack 0
  3891   00104C                     _Enter_menu:
  3892                           	callstack 24
  3893                           
  3894                           ;main.c: 437: switch (select_flag)
  3895                           
  3896                           ;incstack = 0
  3897   00104C  D013               	goto	l3463
  3898   00104E                     l3449:
  3899                           
  3900                           ;main.c: 440: {;main.c: 441: view_log();
  3901   00104E  ECA3  F003         	call	_view_log	;wreg free
  3902                           
  3903                           ;main.c: 442: break;
  3904   001052  0012               	return	
  3905   001054                     l3451:
  3906                           
  3907                           ;main.c: 445: {;main.c: 446: clear_log();
  3908   001054  EC85  F007         	call	_clear_log	;wreg free
  3909                           
  3910                           ;main.c: 447: break;
  3911   001058  0012               	return	
  3912   00105A                     l3453:
  3913                           
  3914                           ;main.c: 450: {;main.c: 451: Download_log();
  3915   00105A  ECB5  F005         	call	_Download_log	;wreg free
  3916                           
  3917                           ;main.c: 452: break;
  3918   00105E  0012               	return	
  3919   001060                     l3455:
  3920                           
  3921                           ;main.c: 455: {;main.c: 456: set_time();
  3922   001060  EC09  F000         	call	_set_time	;wreg free
  3923                           
  3924                           ;main.c: 457: break;
  3925   001064  0012               	return	
  3926   001066                     l3457:
  3927                           
  3928                           ;main.c: 460: {;main.c: 461: password = 0;
  3929   001066  0E00               	movlw	0
  3930   001068  6E23               	movwf	(_password+1)^0,c
  3931   00106A  0E00               	movlw	0
  3932   00106C  6E22               	movwf	_password^0,c
  3933                           
  3934                           ;main.c: 462: change_password();
  3935   00106E  EC71  F001         	call	_change_password	;wreg free
  3936                           
  3937                           ;main.c: 463: break;
  3938   001072  0012               	return	
  3939   001074                     l3463:
  3940   001074  502C               	movf	_select_flag^0,w,c
  3941                           
  3942                           ; Switch size 1, requested type "simple"
  3943                           ; Number of cases is 5, Range of values is 1 to 5
  3944                           ; switch strategies available:
  3945                           ; Name         Instructions Cycles
  3946                           ; simple_byte           16     9 (average)
  3947                           ;	Chosen strategy is simple_byte
  3948   001076  0A01               	xorlw	1	; case 1
  3949   001078  B4D8               	btfsc	status,2,c
  3950   00107A  D7E9               	goto	l3449
  3951   00107C  0A03               	xorlw	3	; case 2
  3952   00107E  B4D8               	btfsc	status,2,c
  3953   001080  D7E9               	goto	l3451
  3954   001082  0A01               	xorlw	1	; case 3
  3955   001084  B4D8               	btfsc	status,2,c
  3956   001086  D7E9               	goto	l3453
  3957   001088  0A07               	xorlw	7	; case 4
  3958   00108A  B4D8               	btfsc	status,2,c
  3959   00108C  D7E9               	goto	l3455
  3960   00108E  0A01               	xorlw	1	; case 5
  3961   001090  A4D8               	btfss	status,2,c
  3962   001092  0012               	return	
  3963   001094  D7E8               	goto	l3457
  3964   001096                     __end_of_Enter_menu:
  3965                           	callstack 0
  3966                           
  3967 ;; *************** function _view_log *****************
  3968 ;; Defined at:
  3969 ;;		line 168 in file "main.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;		None
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  b               2    9[COMRAM] unsigned int 
  3974 ;;  key             1   13[COMRAM] unsigned char 
  3975 ;;  i               1   12[COMRAM] unsigned char 
  3976 ;;  v               1   11[COMRAM] unsigned char 
  3977 ;;  cal             1    0        unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         0       0       0       0       0       0       0
  3988 ;;      Locals:         5       0       0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0
  3990 ;;      Totals:         5       0       0       0       0       0       0
  3991 ;;Total ram usage:        5 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 5
  3994 ;; This function calls:
  3995 ;;		_clcd_print
  3996 ;;		_clcd_putch
  3997 ;;		_clcd_write
  3998 ;;		_read_external_eeprom
  3999 ;;		_read_switches
  4000 ;; This function is called by:
  4001 ;;		_Enter_menu
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text26
  4006   000746                     __ptext26:
  4007                           	callstack 0
  4008   000746                     _view_log:
  4009                           	callstack 24
  4010                           
  4011                           ;main.c: 171: unsigned static int value1,value2,menu=0;;main.c: 172: key=read_switches(0
      +                          );
  4012                           
  4013                           ;incstack = 0
  4014   000746  0E00               	movlw	0
  4015   000748  ECAE  F008         	call	_read_switches
  4016   00074C  6E41               	movwf	view_log@key^0,c
  4017                           
  4018                           ;main.c: 173: if (clear_flag == 0)
  4019   00074E  5030               	movf	_clear_flag^0,w,c
  4020   000750  A4D8               	btfss	status,2,c
  4021   000752  D01C               	goto	l2879
  4022                           
  4023                           ;main.c: 174: {;main.c: 175: for (i = 0; i< 14; i++)
  4024   000754  0E00               	movlw	0
  4025   000756  6E40               	movwf	view_log@i^0,c
  4026   000758                     l2869:
  4027                           
  4028                           ;main.c: 176: {;main.c: 177: clcd_print("logs",(0x80 + (3)));
  4029   000758  0EF7               	movlw	low STR_6
  4030   00075A  6E3A               	movwf	clcd_print@data^0,c
  4031   00075C  0E2F               	movlw	high STR_6
  4032   00075E  6E3B               	movwf	(clcd_print@data+1)^0,c
  4033   000760  0E83               	movlw	131
  4034   000762  6E3C               	movwf	clcd_print@addr^0,c
  4035   000764  EC55  F007         	call	_clcd_print	;wreg free
  4036                           
  4037                           ;main.c: 178: v = read_external_eeprom((menu*14) + i);
  4038   000768  5016               	movf	view_log@menu^0,w,c
  4039   00076A  0D0E               	mullw	14
  4040   00076C  50F3               	movf	243,w,c
  4041   00076E  2440               	addwf	view_log@i^0,w,c
  4042   000770  EC94  F009         	call	_read_external_eeprom
  4043   000774  6E3F               	movwf	view_log@v^0,c
  4044                           
  4045                           ;main.c: 179: clcd_putch(v,(0xC0 + (i)));
  4046   000776  5040               	movf	view_log@i^0,w,c
  4047   000778  0FC0               	addlw	192
  4048   00077A  6E3B               	movwf	clcd_putch@addr^0,c
  4049   00077C  503F               	movf	view_log@v^0,w,c
  4050   00077E  EC24  F00A         	call	_clcd_putch
  4051   000782  2A40               	incf	view_log@i^0,f,c
  4052   000784  0E0D               	movlw	13
  4053   000786  6440               	cpfsgt	view_log@i^0,c
  4054   000788  D7E7               	goto	l2869
  4055   00078A  D00B               	goto	l2883
  4056   00078C                     l2879:
  4057                           
  4058                           ;main.c: 183: else if(clear_flag != 0)
  4059   00078C  5030               	movf	_clear_flag^0,w,c
  4060   00078E  B4D8               	btfsc	status,2,c
  4061   000790  D008               	goto	l2883
  4062                           
  4063                           ;main.c: 184: {;main.c: 185: clcd_print("No log found ",(0xC0 + (0)));
  4064   000792  0EC2               	movlw	low STR_7
  4065   000794  6E3A               	movwf	clcd_print@data^0,c
  4066   000796  0E2F               	movlw	high STR_7
  4067   000798  6E3B               	movwf	(clcd_print@data+1)^0,c
  4068   00079A  0EC0               	movlw	192
  4069   00079C  6E3C               	movwf	clcd_print@addr^0,c
  4070   00079E  EC55  F007         	call	_clcd_print	;wreg free
  4071   0007A2                     l2883:
  4072                           
  4073                           ;main.c: 186: };main.c: 188: if(key == 5)
  4074   0007A2  0E05               	movlw	5
  4075   0007A4  1841               	xorwf	view_log@key^0,w,c
  4076   0007A6  A4D8               	btfss	status,2,c
  4077   0007A8  D002               	goto	l2887
  4078                           
  4079                           ;main.c: 189: {;main.c: 190: value1++;
  4080   0007AA  4A1A               	infsnz	view_log@value1^0,f,c
  4081   0007AC  2A1B               	incf	(view_log@value1+1)^0,f,c
  4082   0007AE                     l2887:
  4083                           
  4084                           ;main.c: 191: };main.c: 192: if (value1 > 500 && key == 0xFF)
  4085   0007AE  0EF5               	movlw	245
  4086   0007B0  5C1A               	subwf	view_log@value1^0,w,c
  4087   0007B2  0E01               	movlw	1
  4088   0007B4  581B               	subwfb	(view_log@value1+1)^0,w,c
  4089   0007B6  A0D8               	btfss	status,0,c
  4090   0007B8  D014               	goto	l2897
  4091   0007BA  2841               	incf	view_log@key^0,w,c
  4092   0007BC  A4D8               	btfss	status,2,c
  4093   0007BE  D011               	goto	l2897
  4094                           
  4095                           ;main.c: 193: {;main.c: 194: for (unsigned int b=5000; b--; );
  4096   0007C0  0E13               	movlw	19
  4097   0007C2  6E3E               	movwf	(view_log@b+1)^0,c
  4098   0007C4  0E88               	movlw	136
  4099   0007C6  6E3D               	movwf	view_log@b^0,c
  4100   0007C8                     l2893:
  4101   0007C8  063D               	decf	view_log@b^0,f,c
  4102   0007CA  A0D8               	btfss	status,0,c
  4103   0007CC  063E               	decf	(view_log@b+1)^0,f,c
  4104   0007CE  283D               	incf	view_log@b^0,w,c
  4105   0007D0  E1FB               	bnz	l2893
  4106   0007D2  283E               	incf	(view_log@b+1)^0,w,c
  4107   0007D4  A4D8               	btfss	status,2,c
  4108   0007D6  D7F8               	goto	l2893
  4109   0007D8                     u2150:
  4110   0007D8                     l2895:
  4111                           
  4112                           ;main.c: 195: value1 = 0;
  4113   0007D8  0E00               	movlw	0
  4114   0007DA  6E1B               	movwf	(view_log@value1+1)^0,c
  4115   0007DC  0E00               	movlw	0
  4116   0007DE  6E1A               	movwf	view_log@value1^0,c
  4117                           
  4118                           ;main.c: 196: }
  4119   0007E0  D016               	goto	l2909
  4120   0007E2                     l2897:
  4121                           
  4122                           ;main.c: 197: else if (value1 > 0 && value1 < 500 && key == 0xFF)
  4123   0007E2  501A               	movf	view_log@value1^0,w,c
  4124   0007E4  101B               	iorwf	(view_log@value1+1)^0,w,c
  4125   0007E6  B4D8               	btfsc	status,2,c
  4126   0007E8  D012               	goto	l2909
  4127   0007EA  0EF4               	movlw	244
  4128   0007EC  5C1A               	subwf	view_log@value1^0,w,c
  4129   0007EE  0E01               	movlw	1
  4130   0007F0  581B               	subwfb	(view_log@value1+1)^0,w,c
  4131   0007F2  B0D8               	btfsc	status,0,c
  4132   0007F4  D00C               	goto	l2909
  4133   0007F6  2841               	incf	view_log@key^0,w,c
  4134   0007F8  A4D8               	btfss	status,2,c
  4135   0007FA  D009               	goto	l2909
  4136                           
  4137                           ;main.c: 198: {;main.c: 200: if (menu < 9)
  4138   0007FC  5017               	movf	(view_log@menu+1)^0,w,c
  4139   0007FE  E1EC               	bnz	l2895
  4140   000800  0E09               	movlw	9
  4141   000802  5C16               	subwf	view_log@menu^0,w,c
  4142   000804  B0D8               	btfsc	status,0,c
  4143   000806  D7E8               	goto	u2150
  4144                           
  4145                           ;main.c: 201: {;main.c: 202: menu++;
  4146   000808  4A16               	infsnz	view_log@menu^0,f,c
  4147   00080A  2A17               	incf	(view_log@menu+1)^0,f,c
  4148   00080C  D7E5               	goto	u2150
  4149   00080E                     l2909:
  4150                           
  4151                           ;main.c: 205: };main.c: 206: if ( key == 6)
  4152   00080E  0E06               	movlw	6
  4153   000810  1841               	xorwf	view_log@key^0,w,c
  4154   000812  A4D8               	btfss	status,2,c
  4155   000814  D002               	goto	l2913
  4156                           
  4157                           ;main.c: 207: {;main.c: 208: value2++;
  4158   000816  4A18               	infsnz	view_log@value2^0,f,c
  4159   000818  2A19               	incf	(view_log@value2+1)^0,f,c
  4160   00081A                     l2913:
  4161                           
  4162                           ;main.c: 209: };main.c: 211: if (value2 > 500 && key == 0xFF)
  4163   00081A  0EF5               	movlw	245
  4164   00081C  5C18               	subwf	view_log@value2^0,w,c
  4165   00081E  0E01               	movlw	1
  4166   000820  5819               	subwfb	(view_log@value2+1)^0,w,c
  4167   000822  A0D8               	btfss	status,0,c
  4168   000824  D00F               	goto	l2923
  4169   000826  2841               	incf	view_log@key^0,w,c
  4170   000828  A4D8               	btfss	status,2,c
  4171   00082A  D00C               	goto	l2923
  4172                           
  4173                           ;main.c: 212: {;main.c: 213: clcd_write(0x01, 0);
  4174   00082C  0E00               	movlw	0
  4175   00082E  6E34               	movwf	clcd_write@control_bit^0,c
  4176   000830  0E01               	movlw	1
  4177   000832  ECBE  F009         	call	_clcd_write
  4178                           
  4179                           ;main.c: 214: choose_flag = 2;
  4180   000836  0E02               	movlw	2
  4181   000838  6E2F               	movwf	_choose_flag^0,c
  4182   00083A                     l2921:
  4183                           
  4184                           ;main.c: 216: value2 = 0;
  4185   00083A  0E00               	movlw	0
  4186   00083C  6E19               	movwf	(view_log@value2+1)^0,c
  4187   00083E  0E00               	movlw	0
  4188   000840  6E18               	movwf	view_log@value2^0,c
  4189                           
  4190                           ;main.c: 217: }
  4191   000842  0012               	return	
  4192   000844                     l2923:
  4193                           
  4194                           ;main.c: 218: else if (value2 > 0 && value2 < 500 && key == 0xFF)
  4195   000844  5018               	movf	view_log@value2^0,w,c
  4196   000846  1019               	iorwf	(view_log@value2+1)^0,w,c
  4197   000848  B4D8               	btfsc	status,2,c
  4198   00084A  0012               	return	
  4199   00084C  0EF4               	movlw	244
  4200   00084E  5C18               	subwf	view_log@value2^0,w,c
  4201   000850  0E01               	movlw	1
  4202   000852  5819               	subwfb	(view_log@value2+1)^0,w,c
  4203   000854  B0D8               	btfsc	status,0,c
  4204   000856  0012               	return	
  4205   000858  2841               	incf	view_log@key^0,w,c
  4206   00085A  A4D8               	btfss	status,2,c
  4207   00085C  0012               	return	
  4208                           
  4209                           ;main.c: 219: {;main.c: 220: if (menu >= 1)
  4210   00085E  5016               	movf	view_log@menu^0,w,c
  4211   000860  1017               	iorwf	(view_log@menu+1)^0,w,c
  4212   000862  B4D8               	btfsc	status,2,c
  4213   000864  D7EA               	goto	l2921
  4214                           
  4215                           ;main.c: 221: {;main.c: 222: menu--;
  4216   000866  0616               	decf	view_log@menu^0,f,c
  4217   000868  A0D8               	btfss	status,0,c
  4218   00086A  0617               	decf	(view_log@menu+1)^0,f,c
  4219   00086C  D7E6               	goto	l2921
  4220   00086E                     __end_of_view_log:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _set_time *****************
  4224 ;; Defined at:
  4225 ;;		line 268 in file "main.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  i               1   13[COMRAM] unsigned char 
  4230 ;;  j               2   11[COMRAM] unsigned int 
  4231 ;;  change_time     1   18[COMRAM] PTR unsigned char 
  4232 ;;		 -> time(9), 
  4233 ;;  key             1   17[COMRAM] unsigned char 
  4234 ;;  min             1   16[COMRAM] unsigned char 
  4235 ;;  sec             1   15[COMRAM] unsigned char 
  4236 ;;  hr              1   14[COMRAM] unsigned char 
  4237 ;;  i               1   10[COMRAM] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4247 ;;      Params:         0       0       0       0       0       0       0
  4248 ;;      Locals:         9       0       0       0       0       0       0
  4249 ;;      Temps:          1       0       0       0       0       0       0
  4250 ;;      Totals:        10       0       0       0       0       0       0
  4251 ;;Total ram usage:       10 bytes
  4252 ;; Hardware stack levels used: 1
  4253 ;; Hardware stack levels required when called: 4
  4254 ;; This function calls:
  4255 ;;		___lbmod
  4256 ;;		_clcd_print
  4257 ;;		_read_switches
  4258 ;;		_write_ds1307
  4259 ;; This function is called by:
  4260 ;;		_Enter_menu
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text27
  4265   000012                     __ptext27:
  4266                           	callstack 0
  4267   000012                     _set_time:
  4268                           	callstack 25
  4269                           
  4270                           ;incstack = 0
  4271   000012  0E00               	movlw	0
  4272   000014  6E43               	movwf	set_time@sec^0,c
  4273   000016  0E00               	movlw	0
  4274   000018  6E44               	movwf	set_time@min^0,c
  4275   00001A  0E00               	movlw	0
  4276   00001C  6E3E               	movwf	set_time@i^0,c
  4277                           
  4278                           ;main.c: 273: unsigned static char val=0;;main.c: 274: unsigned static int cal=0,car=0;;
      +                          main.c: 275: unsigned char *change_time = time;
  4279   00001E  0E7F               	movlw	low _time
  4280   000020  6E46               	movwf	set_time@change_time^0,c
  4281                           
  4282                           ;main.c: 276: clcd_print(change_time,(0xC0 + (0)));
  4283   000022  C046  F03A         	movff	set_time@change_time,clcd_print@data
  4284   000026  6A3B               	clrf	(clcd_print@data+1)^0,c
  4285   000028  0EC0               	movlw	192
  4286   00002A  6E3C               	movwf	clcd_print@addr^0,c
  4287   00002C  EC55  F007         	call	_clcd_print	;wreg free
  4288                           
  4289                           ;main.c: 277: clcd_print("Time (HH:MM:SS) ",(0x80 + (0)));
  4290   000030  0E41               	movlw	low STR_12
  4291   000032  6E3A               	movwf	clcd_print@data^0,c
  4292   000034  0E2F               	movlw	high STR_12
  4293   000036  6E3B               	movwf	(clcd_print@data+1)^0,c
  4294   000038  0E80               	movlw	128
  4295   00003A  6E3C               	movwf	clcd_print@addr^0,c
  4296   00003C  EC55  F007         	call	_clcd_print	;wreg free
  4297                           
  4298                           ;main.c: 278: key = read_switches(0);
  4299   000040  0E00               	movlw	0
  4300   000042  ECAE  F008         	call	_read_switches
  4301   000046  6E45               	movwf	set_time@key^0,c
  4302                           
  4303                           ;main.c: 279: if(key == 5)
  4304   000048  0E05               	movlw	5
  4305   00004A  1845               	xorwf	set_time@key^0,w,c
  4306   00004C  A4D8               	btfss	status,2,c
  4307   00004E  D002               	goto	l3007
  4308                           
  4309                           ;main.c: 280: car++;
  4310   000050  4A12               	infsnz	set_time@car^0,f,c
  4311   000052  2A13               	incf	(set_time@car+1)^0,f,c
  4312   000054                     l3007:
  4313                           
  4314                           ;main.c: 281: if(key == 6)
  4315   000054  0E06               	movlw	6
  4316   000056  1845               	xorwf	set_time@key^0,w,c
  4317   000058  A4D8               	btfss	status,2,c
  4318   00005A  D002               	goto	l3011
  4319                           
  4320                           ;main.c: 282: cal++;
  4321   00005C  4A14               	infsnz	set_time@cal^0,f,c
  4322   00005E  2A15               	incf	(set_time@cal+1)^0,f,c
  4323   000060                     l3011:
  4324                           
  4325                           ;main.c: 284: if(car < 1000 && car > 0 && key == 0xFF)
  4326   000060  0EE8               	movlw	232
  4327   000062  5C12               	subwf	set_time@car^0,w,c
  4328   000064  0E03               	movlw	3
  4329   000066  5813               	subwfb	(set_time@car+1)^0,w,c
  4330   000068  B0D8               	btfsc	status,0,c
  4331   00006A  D013               	goto	l3023
  4332   00006C  5012               	movf	set_time@car^0,w,c
  4333   00006E  1013               	iorwf	(set_time@car+1)^0,w,c
  4334   000070  B4D8               	btfsc	status,2,c
  4335   000072  D00F               	goto	l3023
  4336   000074  2845               	incf	set_time@key^0,w,c
  4337   000076  A4D8               	btfss	status,2,c
  4338   000078  D00C               	goto	l3023
  4339                           
  4340                           ;main.c: 285: {;main.c: 286: val++;
  4341   00007A  2A27               	incf	set_time@val^0,f,c
  4342                           
  4343                           ;main.c: 287: val = val % 3;
  4344   00007C  0E03               	movlw	3
  4345   00007E  6E34               	movwf	___lbmod@divisor^0,c
  4346   000080  5027               	movf	set_time@val^0,w,c
  4347   000082  EC7F  F009         	call	___lbmod
  4348   000086  6E27               	movwf	set_time@val^0,c
  4349                           
  4350                           ;main.c: 288: car = 0;
  4351   000088  0E00               	movlw	0
  4352   00008A  6E13               	movwf	(set_time@car+1)^0,c
  4353   00008C  0E00               	movlw	0
  4354   00008E  6E12               	movwf	set_time@car^0,c
  4355                           
  4356                           ;main.c: 289: }
  4357   000090  D070               	goto	l3053
  4358   000092                     l3023:
  4359                           
  4360                           ;main.c: 290: else if(car > 1000 && key == 0xFF)
  4361   000092  0EE9               	movlw	233
  4362   000094  5C12               	subwf	set_time@car^0,w,c
  4363   000096  0E03               	movlw	3
  4364   000098  5813               	subwfb	(set_time@car+1)^0,w,c
  4365   00009A  A0D8               	btfss	status,0,c
  4366   00009C  D06A               	goto	l3053
  4367   00009E  2845               	incf	set_time@key^0,w,c
  4368   0000A0  A4D8               	btfss	status,2,c
  4369   0000A2  D067               	goto	l3053
  4370                           
  4371                           ;main.c: 291: {;main.c: 292: clcd_print("Saved Time in RTC",(0x80 + (0)));
  4372   0000A4  0E0D               	movlw	low STR_13
  4373   0000A6  6E3A               	movwf	clcd_print@data^0,c
  4374   0000A8  0E2F               	movlw	high STR_13
  4375   0000AA  6E3B               	movwf	(clcd_print@data+1)^0,c
  4376   0000AC  0E80               	movlw	128
  4377   0000AE  6E3C               	movwf	clcd_print@addr^0,c
  4378   0000B0  EC55  F007         	call	_clcd_print	;wreg free
  4379                           
  4380                           ;main.c: 293: car = 0;
  4381   0000B4  0E00               	movlw	0
  4382   0000B6  6E13               	movwf	(set_time@car+1)^0,c
  4383   0000B8  0E00               	movlw	0
  4384   0000BA  6E12               	movwf	set_time@car^0,c
  4385                           
  4386                           ;main.c: 294: hr = (((change_time[0] - '0') << 4) | (change_time[1] - '0'));
  4387   0000BC  5046               	movf	set_time@change_time^0,w,c
  4388   0000BE  6ED9               	movwf	fsr2l,c
  4389   0000C0  6ADA               	clrf	fsr2h,c
  4390   0000C2  50DF               	movf	indf2,w,c
  4391   0000C4  6E3D               	movwf	??_set_time^0,c
  4392   0000C6  3A3D               	swapf	??_set_time^0,f,c
  4393   0000C8  0EF0               	movlw	240
  4394   0000CA  163D               	andwf	??_set_time^0,f,c
  4395   0000CC  5046               	movf	set_time@change_time^0,w,c
  4396   0000CE  6ED9               	movwf	fsr2l,c
  4397   0000D0  6ADA               	clrf	fsr2h,c
  4398   0000D2  0E01               	movlw	1
  4399   0000D4  26D9               	addwf	fsr2l,f,c
  4400   0000D6  50DF               	movf	indf2,w,c
  4401   0000D8  0FD0               	addlw	208
  4402   0000DA  103D               	iorwf	??_set_time^0,w,c
  4403   0000DC  6E42               	movwf	set_time@hr^0,c
  4404                           
  4405                           ;main.c: 295: min = (((change_time[3] - '0') << 4) | (change_time[4] - '0'));
  4406   0000DE  5046               	movf	set_time@change_time^0,w,c
  4407   0000E0  6ED9               	movwf	fsr2l,c
  4408   0000E2  6ADA               	clrf	fsr2h,c
  4409   0000E4  0E03               	movlw	3
  4410   0000E6  26D9               	addwf	fsr2l,f,c
  4411   0000E8  50DF               	movf	indf2,w,c
  4412   0000EA  6E3D               	movwf	??_set_time^0,c
  4413   0000EC  3A3D               	swapf	??_set_time^0,f,c
  4414   0000EE  0EF0               	movlw	240
  4415   0000F0  163D               	andwf	??_set_time^0,f,c
  4416   0000F2  5046               	movf	set_time@change_time^0,w,c
  4417   0000F4  6ED9               	movwf	fsr2l,c
  4418   0000F6  6ADA               	clrf	fsr2h,c
  4419   0000F8  0E04               	movlw	4
  4420   0000FA  26D9               	addwf	fsr2l,f,c
  4421   0000FC  50DF               	movf	indf2,w,c
  4422   0000FE  0FD0               	addlw	208
  4423   000100  103D               	iorwf	??_set_time^0,w,c
  4424   000102  6E44               	movwf	set_time@min^0,c
  4425                           
  4426                           ;main.c: 296: sec = (((change_time[6] - '0') << 4) | (change_time[7] - '0'));
  4427   000104  5046               	movf	set_time@change_time^0,w,c
  4428   000106  6ED9               	movwf	fsr2l,c
  4429   000108  6ADA               	clrf	fsr2h,c
  4430   00010A  0E06               	movlw	6
  4431   00010C  26D9               	addwf	fsr2l,f,c
  4432   00010E  50DF               	movf	indf2,w,c
  4433   000110  6E3D               	movwf	??_set_time^0,c
  4434   000112  3A3D               	swapf	??_set_time^0,f,c
  4435   000114  0EF0               	movlw	240
  4436   000116  163D               	andwf	??_set_time^0,f,c
  4437   000118  5046               	movf	set_time@change_time^0,w,c
  4438   00011A  6ED9               	movwf	fsr2l,c
  4439   00011C  6ADA               	clrf	fsr2h,c
  4440   00011E  0E07               	movlw	7
  4441   000120  26D9               	addwf	fsr2l,f,c
  4442   000122  50DF               	movf	indf2,w,c
  4443   000124  0FD0               	addlw	208
  4444   000126  103D               	iorwf	??_set_time^0,w,c
  4445   000128  6E43               	movwf	set_time@sec^0,c
  4446                           
  4447                           ;main.c: 297: write_ds1307(0x02,hr);
  4448   00012A  C042  F035         	movff	set_time@hr,write_ds1307@data
  4449   00012E  0E02               	movlw	2
  4450   000130  EC07  F00A         	call	_write_ds1307
  4451                           
  4452                           ;main.c: 298: write_ds1307(0x01,min);
  4453   000134  C044  F035         	movff	set_time@min,write_ds1307@data
  4454   000138  0E01               	movlw	1
  4455   00013A  EC07  F00A         	call	_write_ds1307
  4456                           
  4457                           ;main.c: 299: write_ds1307(0x00,sec);
  4458   00013E  C043  F035         	movff	set_time@sec,write_ds1307@data
  4459   000142  0E00               	movlw	0
  4460   000144  EC07  F00A         	call	_write_ds1307
  4461                           
  4462                           ;main.c: 300: for(unsigned int j = 59999; j--;)
  4463   000148  0EEA               	movlw	234
  4464   00014A  6E40               	movwf	(set_time@j+1)^0,c
  4465   00014C  0E5F               	movlw	95
  4466   00014E  6E3F               	movwf	set_time@j^0,c
  4467   000150  D006               	goto	u2410
  4468   000152                     l3045:
  4469                           
  4470                           ;main.c: 301: for(unsigned char i = 20; i--;);
  4471   000152  0E14               	movlw	20
  4472   000154  6E41               	movwf	set_time@i_237^0,c
  4473   000156                     l3047:
  4474   000156  0641               	decf	set_time@i_237^0,f,c
  4475   000158  2841               	incf	set_time@i_237^0,w,c
  4476   00015A  A4D8               	btfss	status,2,c
  4477   00015C  D7FC               	goto	l3047
  4478   00015E                     u2410:
  4479   00015E  063F               	decf	set_time@j^0,f,c
  4480   000160  A0D8               	btfss	status,0,c
  4481   000162  0640               	decf	(set_time@j+1)^0,f,c
  4482   000164  283F               	incf	set_time@j^0,w,c
  4483   000166  E1F5               	bnz	l3045
  4484   000168  2840               	incf	(set_time@j+1)^0,w,c
  4485   00016A  A4D8               	btfss	status,2,c
  4486   00016C  D7F2               	goto	l3045
  4487                           
  4488                           ;main.c: 302: choose_flag = 0;
  4489   00016E  0E00               	movlw	0
  4490   000170  6E2F               	movwf	_choose_flag^0,c
  4491   000172                     l3053:
  4492                           
  4493                           ;main.c: 303: };main.c: 304: if(cal < 1000 && cal > 0 && key == 0xFF)
  4494   000172  0EE8               	movlw	232
  4495   000174  5C14               	subwf	set_time@cal^0,w,c
  4496   000176  0E03               	movlw	3
  4497   000178  5815               	subwfb	(set_time@cal+1)^0,w,c
  4498   00017A  B0D8               	btfsc	status,0,c
  4499   00017C  D0A2               	goto	l3087
  4500   00017E  5014               	movf	set_time@cal^0,w,c
  4501   000180  1015               	iorwf	(set_time@cal+1)^0,w,c
  4502   000182  B4D8               	btfsc	status,2,c
  4503   000184  D09E               	goto	l3087
  4504   000186  2845               	incf	set_time@key^0,w,c
  4505   000188  A4D8               	btfss	status,2,c
  4506   00018A  D09B               	goto	l3087
  4507                           
  4508                           ;main.c: 305: {;main.c: 306: cal =0;
  4509   00018C  0E00               	movlw	0
  4510   00018E  6E15               	movwf	(set_time@cal+1)^0,c
  4511   000190  0E00               	movlw	0
  4512   000192  6E14               	movwf	set_time@cal^0,c
  4513                           
  4514                           ;main.c: 307: if(val == 0)
  4515   000194  5027               	movf	set_time@val^0,w,c
  4516   000196  A4D8               	btfss	status,2,c
  4517   000198  D035               	goto	l3071
  4518                           
  4519                           ;main.c: 308: {;main.c: 309: change_time[1]++;
  4520   00019A  5046               	movf	set_time@change_time^0,w,c
  4521   00019C  6ED9               	movwf	fsr2l,c
  4522   00019E  6ADA               	clrf	fsr2h,c
  4523   0001A0  0E01               	movlw	1
  4524   0001A2  26D9               	addwf	fsr2l,f,c
  4525   0001A4  2ADF               	incf	indf2,f,c
  4526                           
  4527                           ;main.c: 311: if (change_time[1] > '9')
  4528   0001A6  5046               	movf	set_time@change_time^0,w,c
  4529   0001A8  6ED9               	movwf	fsr2l,c
  4530   0001AA  6ADA               	clrf	fsr2h,c
  4531   0001AC  0E01               	movlw	1
  4532   0001AE  26D9               	addwf	fsr2l,f,c
  4533   0001B0  0E39               	movlw	57
  4534   0001B2  64DF               	cpfsgt	indf2,c
  4535   0001B4  D00B               	goto	l311
  4536                           
  4537                           ;main.c: 312: {;main.c: 313: change_time[0]++;
  4538   0001B6  5046               	movf	set_time@change_time^0,w,c
  4539   0001B8  6ED9               	movwf	fsr2l,c
  4540   0001BA  6ADA               	clrf	fsr2h,c
  4541   0001BC  2ADF               	incf	indf2,f,c
  4542                           
  4543                           ;main.c: 314: change_time[1] = '0';
  4544   0001BE  5046               	movf	set_time@change_time^0,w,c
  4545   0001C0  6ED9               	movwf	fsr2l,c
  4546   0001C2  6ADA               	clrf	fsr2h,c
  4547   0001C4  0E01               	movlw	1
  4548   0001C6  26D9               	addwf	fsr2l,f,c
  4549   0001C8  0E30               	movlw	48
  4550   0001CA  6EDF               	movwf	indf2,c
  4551   0001CC                     l311:
  4552                           
  4553                           ;main.c: 315: };main.c: 316: if(change_time[0] == '2')
  4554   0001CC  5046               	movf	set_time@change_time^0,w,c
  4555   0001CE  6ED9               	movwf	fsr2l,c
  4556   0001D0  6ADA               	clrf	fsr2h,c
  4557   0001D2  0E32               	movlw	50
  4558   0001D4  18DE               	xorwf	postinc2,w,c
  4559   0001D6  A4D8               	btfss	status,2,c
  4560   0001D8  0012               	return	
  4561                           
  4562                           ;main.c: 317: {;main.c: 318: if (change_time[1] >'3')
  4563   0001DA  5046               	movf	set_time@change_time^0,w,c
  4564   0001DC  6ED9               	movwf	fsr2l,c
  4565   0001DE  6ADA               	clrf	fsr2h,c
  4566   0001E0  0E01               	movlw	1
  4567   0001E2  26D9               	addwf	fsr2l,f,c
  4568   0001E4  0E33               	movlw	51
  4569   0001E6  64DF               	cpfsgt	indf2,c
  4570   0001E8  0012               	return	
  4571                           
  4572                           ;main.c: 319: {;main.c: 320: change_time[1] ='0';
  4573   0001EA  5046               	movf	set_time@change_time^0,w,c
  4574   0001EC  6ED9               	movwf	fsr2l,c
  4575   0001EE  6ADA               	clrf	fsr2h,c
  4576   0001F0  0E01               	movlw	1
  4577   0001F2  26D9               	addwf	fsr2l,f,c
  4578   0001F4  0E30               	movlw	48
  4579   0001F6  6EDF               	movwf	indf2,c
  4580                           
  4581                           ;main.c: 321: change_time[0] = '0';
  4582   0001F8  5046               	movf	set_time@change_time^0,w,c
  4583   0001FA  6ED9               	movwf	fsr2l,c
  4584   0001FC  6ADA               	clrf	fsr2h,c
  4585   0001FE  0E30               	movlw	48
  4586   000200  6EDF               	movwf	indf2,c
  4587   000202  0012               	return	
  4588   000204                     l3071:
  4589                           
  4590                           ;main.c: 325: else if(val == 1)
  4591   000204  0427               	decf	set_time@val^0,w,c
  4592   000206  A4D8               	btfss	status,2,c
  4593   000208  D02C               	goto	l3079
  4594                           
  4595                           ;main.c: 326: {;main.c: 327: change_time[4]++;
  4596   00020A  5046               	movf	set_time@change_time^0,w,c
  4597   00020C  6ED9               	movwf	fsr2l,c
  4598   00020E  6ADA               	clrf	fsr2h,c
  4599   000210  0E04               	movlw	4
  4600   000212  26D9               	addwf	fsr2l,f,c
  4601   000214  2ADF               	incf	indf2,f,c
  4602                           
  4603                           ;main.c: 328: if (change_time[4] > '9')
  4604   000216  5046               	movf	set_time@change_time^0,w,c
  4605   000218  6ED9               	movwf	fsr2l,c
  4606   00021A  6ADA               	clrf	fsr2h,c
  4607   00021C  0E04               	movlw	4
  4608   00021E  26D9               	addwf	fsr2l,f,c
  4609   000220  0E39               	movlw	57
  4610   000222  64DF               	cpfsgt	indf2,c
  4611   000224  D00D               	goto	l316
  4612                           
  4613                           ;main.c: 329: {;main.c: 330: change_time[3]++;
  4614   000226  5046               	movf	set_time@change_time^0,w,c
  4615   000228  6ED9               	movwf	fsr2l,c
  4616   00022A  6ADA               	clrf	fsr2h,c
  4617   00022C  0E03               	movlw	3
  4618   00022E  26D9               	addwf	fsr2l,f,c
  4619   000230  2ADF               	incf	indf2,f,c
  4620                           
  4621                           ;main.c: 331: change_time[4] = '0';
  4622   000232  5046               	movf	set_time@change_time^0,w,c
  4623   000234  6ED9               	movwf	fsr2l,c
  4624   000236  6ADA               	clrf	fsr2h,c
  4625   000238  0E04               	movlw	4
  4626   00023A  26D9               	addwf	fsr2l,f,c
  4627   00023C  0E30               	movlw	48
  4628   00023E  6EDF               	movwf	indf2,c
  4629   000240                     l316:
  4630                           
  4631                           ;main.c: 332: };main.c: 333: if(change_time[3] == '6')
  4632   000240  5046               	movf	set_time@change_time^0,w,c
  4633   000242  6ED9               	movwf	fsr2l,c
  4634   000244  6ADA               	clrf	fsr2h,c
  4635   000246  0E03               	movlw	3
  4636   000248  26D9               	addwf	fsr2l,f,c
  4637   00024A  0E36               	movlw	54
  4638   00024C  18DE               	xorwf	postinc2,w,c
  4639   00024E  A4D8               	btfss	status,2,c
  4640   000250  0012               	return	
  4641                           
  4642                           ;main.c: 334: {;main.c: 335: change_time[3] ='0';
  4643   000252  5046               	movf	set_time@change_time^0,w,c
  4644   000254  6ED9               	movwf	fsr2l,c
  4645   000256  6ADA               	clrf	fsr2h,c
  4646   000258  0E03               	movlw	3
  4647   00025A  26D9               	addwf	fsr2l,f,c
  4648   00025C  0E30               	movlw	48
  4649   00025E  6EDF               	movwf	indf2,c
  4650   000260  0012               	return	
  4651   000262                     l3079:
  4652                           
  4653                           ;main.c: 338: else if(val == 2)
  4654   000262  0E02               	movlw	2
  4655   000264  1827               	xorwf	set_time@val^0,w,c
  4656   000266  A4D8               	btfss	status,2,c
  4657   000268  0012               	return	
  4658                           
  4659                           ;main.c: 339: {;main.c: 340: change_time[7]++;
  4660   00026A  5046               	movf	set_time@change_time^0,w,c
  4661   00026C  6ED9               	movwf	fsr2l,c
  4662   00026E  6ADA               	clrf	fsr2h,c
  4663   000270  0E07               	movlw	7
  4664   000272  26D9               	addwf	fsr2l,f,c
  4665   000274  2ADF               	incf	indf2,f,c
  4666                           
  4667                           ;main.c: 342: if (change_time[7] > '9')
  4668   000276  5046               	movf	set_time@change_time^0,w,c
  4669   000278  6ED9               	movwf	fsr2l,c
  4670   00027A  6ADA               	clrf	fsr2h,c
  4671   00027C  0E07               	movlw	7
  4672   00027E  26D9               	addwf	fsr2l,f,c
  4673   000280  0E39               	movlw	57
  4674   000282  64DF               	cpfsgt	indf2,c
  4675   000284  D00D               	goto	l320
  4676                           
  4677                           ;main.c: 343: {;main.c: 344: change_time[6]++;
  4678   000286  5046               	movf	set_time@change_time^0,w,c
  4679   000288  6ED9               	movwf	fsr2l,c
  4680   00028A  6ADA               	clrf	fsr2h,c
  4681   00028C  0E06               	movlw	6
  4682   00028E  26D9               	addwf	fsr2l,f,c
  4683   000290  2ADF               	incf	indf2,f,c
  4684                           
  4685                           ;main.c: 345: change_time[7] = '0';
  4686   000292  5046               	movf	set_time@change_time^0,w,c
  4687   000294  6ED9               	movwf	fsr2l,c
  4688   000296  6ADA               	clrf	fsr2h,c
  4689   000298  0E07               	movlw	7
  4690   00029A  26D9               	addwf	fsr2l,f,c
  4691   00029C  0E30               	movlw	48
  4692   00029E  6EDF               	movwf	indf2,c
  4693   0002A0                     l320:
  4694                           
  4695                           ;main.c: 346: };main.c: 347: if(change_time[6] == '6')
  4696   0002A0  5046               	movf	set_time@change_time^0,w,c
  4697   0002A2  6ED9               	movwf	fsr2l,c
  4698   0002A4  6ADA               	clrf	fsr2h,c
  4699   0002A6  0E06               	movlw	6
  4700   0002A8  26D9               	addwf	fsr2l,f,c
  4701   0002AA  0E36               	movlw	54
  4702   0002AC  18DE               	xorwf	postinc2,w,c
  4703   0002AE  A4D8               	btfss	status,2,c
  4704   0002B0  0012               	return	
  4705                           
  4706                           ;main.c: 348: {;main.c: 349: change_time[6] ='0';
  4707   0002B2  5046               	movf	set_time@change_time^0,w,c
  4708   0002B4  6ED9               	movwf	fsr2l,c
  4709   0002B6  6ADA               	clrf	fsr2h,c
  4710   0002B8  0E06               	movlw	6
  4711   0002BA  26D9               	addwf	fsr2l,f,c
  4712   0002BC  0E30               	movlw	48
  4713   0002BE  6EDF               	movwf	indf2,c
  4714                           
  4715                           ;main.c: 350: };main.c: 351: };main.c: 352: }
  4716   0002C0  0012               	return	
  4717   0002C2                     l3087:
  4718                           
  4719                           ;main.c: 353: else if(cal > 1000 && key == 0xFF)
  4720   0002C2  0EE9               	movlw	233
  4721   0002C4  5C14               	subwf	set_time@cal^0,w,c
  4722   0002C6  0E03               	movlw	3
  4723   0002C8  5815               	subwfb	(set_time@cal+1)^0,w,c
  4724   0002CA  A0D8               	btfss	status,0,c
  4725   0002CC  0012               	return	
  4726   0002CE  2845               	incf	set_time@key^0,w,c
  4727   0002D0  A4D8               	btfss	status,2,c
  4728   0002D2  0012               	return	
  4729                           
  4730                           ;main.c: 354: {;main.c: 355: cal = 0;
  4731   0002D4  0E00               	movlw	0
  4732   0002D6  6E15               	movwf	(set_time@cal+1)^0,c
  4733   0002D8  0E00               	movlw	0
  4734   0002DA  6E14               	movwf	set_time@cal^0,c
  4735                           
  4736                           ;main.c: 356: choose_flag = 2;
  4737   0002DC  0E02               	movlw	2
  4738   0002DE  6E2F               	movwf	_choose_flag^0,c
  4739   0002E0  0012               	return		;funcret
  4740   0002E2                     __end_of_set_time:
  4741                           	callstack 0
  4742                           
  4743 ;; *************** function _write_ds1307 *****************
  4744 ;; Defined at:
  4745 ;;		line 45 in file "ds1307.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;  address         1    wreg     unsigned char 
  4748 ;;  data            1    1[COMRAM] unsigned char 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  address         1    2[COMRAM] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4760 ;;      Params:         1       0       0       0       0       0       0
  4761 ;;      Locals:         1       0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0
  4763 ;;      Totals:         2       0       0       0       0       0       0
  4764 ;;Total ram usage:        2 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 3
  4767 ;; This function calls:
  4768 ;;		_i2c_start
  4769 ;;		_i2c_stop
  4770 ;;		_i2c_write
  4771 ;; This function is called by:
  4772 ;;		_init_ds1307
  4773 ;;		_set_time
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           	psect	text28
  4778   00140E                     __ptext28:
  4779                           	callstack 0
  4780   00140E                     _write_ds1307:
  4781                           	callstack 25
  4782                           
  4783                           ;incstack = 0
  4784                           ;write_ds1307@address stored from wreg
  4785   00140E  6E36               	movwf	write_ds1307@address^0,c
  4786                           
  4787                           ;ds1307.c: 47: i2c_start();
  4788   001410  EC5A  F00A         	call	_i2c_start	;wreg free
  4789                           
  4790                           ;ds1307.c: 48: i2c_write(0xD0);
  4791   001414  0ED0               	movlw	208
  4792   001416  EC44  F00A         	call	_i2c_write
  4793                           
  4794                           ;ds1307.c: 49: i2c_write(address);
  4795   00141A  5036               	movf	write_ds1307@address^0,w,c
  4796   00141C  EC44  F00A         	call	_i2c_write
  4797                           
  4798                           ;ds1307.c: 50: i2c_write(data);
  4799   001420  5035               	movf	write_ds1307@data^0,w,c
  4800   001422  EC44  F00A         	call	_i2c_write
  4801                           
  4802                           ;ds1307.c: 51: i2c_stop();
  4803   001426  EC56  F00A         	call	_i2c_stop	;wreg free
  4804   00142A  0012               	return		;funcret
  4805   00142C                     __end_of_write_ds1307:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function ___lbmod *****************
  4809 ;; Defined at:
  4810 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  dividend        1    wreg     unsigned char 
  4813 ;;  divisor         1    0[COMRAM] unsigned char 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  dividend        1    1[COMRAM] unsigned char 
  4816 ;;  rem             1    3[COMRAM] unsigned char 
  4817 ;;  counter         1    2[COMRAM] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      unsigned char 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4827 ;;      Params:         1       0       0       0       0       0       0
  4828 ;;      Locals:         3       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0
  4830 ;;      Totals:         4       0       0       0       0       0       0
  4831 ;;Total ram usage:        4 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_set_time
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text29
  4842   0012FE                     __ptext29:
  4843                           	callstack 0
  4844   0012FE                     ___lbmod:
  4845                           	callstack 27
  4846                           
  4847                           ;incstack = 0
  4848                           ;___lbmod@dividend stored from wreg
  4849   0012FE  6E35               	movwf	___lbmod@dividend^0,c
  4850   001300  0E08               	movlw	8
  4851   001302  6E36               	movwf	___lbmod@counter^0,c
  4852   001304  0E00               	movlw	0
  4853   001306  6E37               	movwf	___lbmod@rem^0,c
  4854   001308                     l2781:
  4855   001308  90D8               	bcf	status,0,c
  4856   00130A  3435               	rlcf	___lbmod@dividend^0,w,c
  4857   00130C  3437               	rlcf	___lbmod@rem^0,w,c
  4858   00130E  6E37               	movwf	___lbmod@rem^0,c
  4859   001310  90D8               	bcf	status,0,c
  4860   001312  3635               	rlcf	___lbmod@dividend^0,f,c
  4861   001314  5034               	movf	___lbmod@divisor^0,w,c
  4862   001316  5C37               	subwf	___lbmod@rem^0,w,c
  4863   001318  A0D8               	btfss	status,0,c
  4864   00131A  D002               	goto	l2789
  4865   00131C  5034               	movf	___lbmod@divisor^0,w,c
  4866   00131E  5E37               	subwf	___lbmod@rem^0,f,c
  4867   001320                     l2789:
  4868   001320  2E36               	decfsz	___lbmod@counter^0,f,c
  4869   001322  D7F2               	goto	l2781
  4870   001324  5037               	movf	___lbmod@rem^0,w,c
  4871   001326  0012               	return		;funcret
  4872   001328                     __end_of___lbmod:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _clear_log *****************
  4876 ;; Defined at:
  4877 ;;		line 228 in file "main.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  val             2    9[COMRAM] unsigned int 
  4882 ;;  key             1   11[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4892 ;;      Params:         0       0       0       0       0       0       0
  4893 ;;      Locals:         3       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0
  4895 ;;      Totals:         3       0       0       0       0       0       0
  4896 ;;Total ram usage:        3 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 3
  4899 ;; This function calls:
  4900 ;;		_clcd_print
  4901 ;;		_clcd_write
  4902 ;;		_read_switches
  4903 ;; This function is called by:
  4904 ;;		_Enter_menu
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text30
  4909   000F0A                     __ptext30:
  4910                           	callstack 0
  4911   000F0A                     _clear_log:
  4912                           	callstack 26
  4913                           
  4914                           ;main.c: 230: unsigned int val;;main.c: 231: unsigned char key;;main.c: 232: clear_flag 
      +                          = 1;
  4915                           
  4916                           ;incstack = 0
  4917   000F0A  0E01               	movlw	1
  4918   000F0C  6E30               	movwf	_clear_flag^0,c
  4919                           
  4920                           ;main.c: 233: clcd_print("Cleared Log",(0xC0 + (0)));
  4921   000F0E  0EEB               	movlw	low STR_8
  4922   000F10  6E3A               	movwf	clcd_print@data^0,c
  4923   000F12  0E2F               	movlw	high STR_8
  4924   000F14  6E3B               	movwf	(clcd_print@data+1)^0,c
  4925   000F16  0EC0               	movlw	192
  4926   000F18  6E3C               	movwf	clcd_print@addr^0,c
  4927   000F1A  EC55  F007         	call	_clcd_print	;wreg free
  4928                           
  4929                           ;main.c: 234: clcd_print("SUCCESSFULLY",(0x80 + (0)));
  4930   000F1E  0EDE               	movlw	low STR_9
  4931   000F20  6E3A               	movwf	clcd_print@data^0,c
  4932   000F22  0E2F               	movlw	high STR_9
  4933   000F24  6E3B               	movwf	(clcd_print@data+1)^0,c
  4934   000F26  0E80               	movlw	128
  4935   000F28  6E3C               	movwf	clcd_print@addr^0,c
  4936   000F2A  EC55  F007         	call	_clcd_print	;wreg free
  4937                           
  4938                           ;main.c: 235: key = read_switches(0);
  4939   000F2E  0E00               	movlw	0
  4940   000F30  ECAE  F008         	call	_read_switches
  4941   000F34  6E3F               	movwf	clear_log@key^0,c
  4942                           
  4943                           ;main.c: 236: if (key == 5)
  4944   000F36  0E05               	movlw	5
  4945   000F38  183F               	xorwf	clear_log@key^0,w,c
  4946   000F3A  A4D8               	btfss	status,2,c
  4947   000F3C  D002               	goto	l2947
  4948                           
  4949                           ;main.c: 237: {;main.c: 238: val++;
  4950   000F3E  4A3D               	infsnz	clear_log@val^0,f,c
  4951   000F40  2A3E               	incf	(clear_log@val+1)^0,f,c
  4952   000F42                     l2947:
  4953                           
  4954                           ;main.c: 239: };main.c: 240: if (val > 1000)
  4955   000F42  0EE9               	movlw	233
  4956   000F44  5C3D               	subwf	clear_log@val^0,w,c
  4957   000F46  0E03               	movlw	3
  4958   000F48  583E               	subwfb	(clear_log@val+1)^0,w,c
  4959   000F4A  A0D8               	btfss	status,0,c
  4960   000F4C  0012               	return	
  4961                           
  4962                           ;main.c: 241: {;main.c: 242: clcd_write(0x01, 0);
  4963   000F4E  0E00               	movlw	0
  4964   000F50  6E34               	movwf	clcd_write@control_bit^0,c
  4965   000F52  0E01               	movlw	1
  4966   000F54  ECBE  F009         	call	_clcd_write
  4967                           
  4968                           ;main.c: 243: choose_flag = 2;
  4969   000F58  0E02               	movlw	2
  4970   000F5A  6E2F               	movwf	_choose_flag^0,c
  4971   000F5C  0012               	return		;funcret
  4972   000F5E                     __end_of_clear_log:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _change_password *****************
  4976 ;; Defined at:
  4977 ;;		line 360 in file "main.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;  j               1   16[COMRAM] unsigned char 
  4982 ;;  j               1   15[COMRAM] unsigned char 
  4983 ;;  i               2   13[COMRAM] unsigned int 
  4984 ;;  i               2   11[COMRAM] unsigned int 
  4985 ;;  key             1   17[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4995 ;;      Params:         0       0       0       0       0       0       0
  4996 ;;      Locals:         7       0       0       0       0       0       0
  4997 ;;      Temps:          2       0       0       0       0       0       0
  4998 ;;      Totals:         9       0       0       0       0       0       0
  4999 ;;Total ram usage:        9 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; Hardware stack levels required when called: 4
  5002 ;; This function calls:
  5003 ;;		_clcd_print
  5004 ;;		_clcd_putch
  5005 ;;		_clcd_write
  5006 ;;		_read_switches
  5007 ;;		_write_external_eeprom
  5008 ;; This function is called by:
  5009 ;;		_Enter_menu
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text31
  5014   0002E2                     __ptext31:
  5015                           	callstack 0
  5016   0002E2                     _change_password:
  5017                           	callstack 25
  5018                           
  5019                           ;main.c: 362: unsigned static int re_pass = 0,choice = 0,i=0,j=0,psswd = 0;;main.c: 363:
      +                           unsigned char key;;main.c: 365: if (choice < 4)
  5020                           
  5021                           ;incstack = 0
  5022   0002E2  500F               	movf	(change_password@choice+1)^0,w,c
  5023   0002E4  E13A               	bnz	l3115
  5024   0002E6  0E04               	movlw	4
  5025   0002E8  5C0E               	subwf	change_password@choice^0,w,c
  5026   0002EA  B0D8               	btfsc	status,0,c
  5027   0002EC  D036               	goto	l3115
  5028                           
  5029                           ;main.c: 366: {;main.c: 368: clcd_print("Enter Password",(0x80 + (0)));
  5030   0002EE  0EB3               	movlw	low STR_14
  5031   0002F0  6E3A               	movwf	clcd_print@data^0,c
  5032   0002F2  0E2F               	movlw	high STR_14
  5033   0002F4  6E3B               	movwf	(clcd_print@data+1)^0,c
  5034   0002F6  0E80               	movlw	128
  5035   0002F8  6E3C               	movwf	clcd_print@addr^0,c
  5036   0002FA  EC55  F007         	call	_clcd_print	;wreg free
  5037                           
  5038                           ;main.c: 369: key = read_switches(1);
  5039   0002FE  0E01               	movlw	1
  5040   000300  ECAE  F008         	call	_read_switches
  5041   000304  6E45               	movwf	change_password@key^0,c
  5042                           
  5043                           ;main.c: 371: if (key == 5)
  5044   000306  0E05               	movlw	5
  5045   000308  1845               	xorwf	change_password@key^0,w,c
  5046   00030A  A4D8               	btfss	status,2,c
  5047   00030C  D014               	goto	l3107
  5048                           
  5049                           ;main.c: 372: {;main.c: 373: psswd = psswd << 1 | 1;
  5050   00030E  0E01               	movlw	1
  5051   000310  C008  F03D         	movff	change_password@psswd,??_change_password
  5052   000314  C009  F03E         	movff	change_password@psswd+1,??_change_password+1
  5053   000318  90D8               	bcf	status,0,c
  5054   00031A  363D               	rlcf	??_change_password^0,f,c
  5055   00031C  363E               	rlcf	(??_change_password+1)^0,f,c
  5056   00031E  103D               	iorwf	??_change_password^0,w,c
  5057   000320  6E08               	movwf	change_password@psswd^0,c
  5058   000322  503E               	movf	(??_change_password+1)^0,w,c
  5059   000324  6E09               	movwf	(change_password@psswd+1)^0,c
  5060                           
  5061                           ;main.c: 375: clcd_putch('*', (0xC0 + (choice++)));
  5062   000326  500E               	movf	change_password@choice^0,w,c
  5063   000328  0FC0               	addlw	192
  5064   00032A  6E3B               	movwf	clcd_putch@addr^0,c
  5065   00032C  0E2A               	movlw	42
  5066   00032E  EC24  F00A         	call	_clcd_putch
  5067   000332  4A0E               	infsnz	change_password@choice^0,f,c
  5068   000334  2A0F               	incf	(change_password@choice+1)^0,f,c
  5069   000336                     l3107:
  5070                           
  5071                           ;main.c: 376: };main.c: 377: if (key == 6)
  5072   000336  0E06               	movlw	6
  5073   000338  1845               	xorwf	change_password@key^0,w,c
  5074   00033A  A4D8               	btfss	status,2,c
  5075   00033C  D05D               	goto	l3147
  5076                           
  5077                           ;main.c: 378: {;main.c: 380: psswd = psswd << 1;
  5078   00033E  90D8               	bcf	status,0,c
  5079   000340  3408               	rlcf	change_password@psswd^0,w,c
  5080   000342  6E08               	movwf	change_password@psswd^0,c
  5081   000344  3409               	rlcf	(change_password@psswd+1)^0,w,c
  5082   000346  6E09               	movwf	(change_password@psswd+1)^0,c
  5083                           
  5084                           ;main.c: 381: clcd_putch('*', (0xC0 + (choice++)));
  5085   000348  500E               	movf	change_password@choice^0,w,c
  5086   00034A  0FC0               	addlw	192
  5087   00034C  6E3B               	movwf	clcd_putch@addr^0,c
  5088   00034E  0E2A               	movlw	42
  5089   000350  EC24  F00A         	call	_clcd_putch
  5090   000354  4A0E               	infsnz	change_password@choice^0,f,c
  5091   000356  2A0F               	incf	(change_password@choice+1)^0,f,c
  5092   000358  D04F               	goto	l3147
  5093   00035A                     l3115:
  5094                           
  5095                           ;main.c: 384: else if (choice >= 4 && choice <= 7)
  5096   00035A  500F               	movf	(change_password@choice+1)^0,w,c
  5097   00035C  E104               	bnz	u2610
  5098   00035E  0E04               	movlw	4
  5099   000360  5C0E               	subwf	change_password@choice^0,w,c
  5100   000362  A0D8               	btfss	status,0,c
  5101   000364  D049               	goto	l3147
  5102   000366                     u2610:
  5103   000366  500F               	movf	(change_password@choice+1)^0,w,c
  5104   000368  E147               	bnz	l3147
  5105   00036A  0E08               	movlw	8
  5106   00036C  5C0E               	subwf	change_password@choice^0,w,c
  5107   00036E  B0D8               	btfsc	status,0,c
  5108   000370  D043               	goto	l3147
  5109                           
  5110                           ;main.c: 385: {;main.c: 386: if (choice == 4)
  5111   000372  0E04               	movlw	4
  5112   000374  180E               	xorwf	change_password@choice^0,w,c
  5113   000376  100F               	iorwf	(change_password@choice+1)^0,w,c
  5114   000378  A4D8               	btfss	status,2,c
  5115   00037A  D005               	goto	l3123
  5116                           
  5117                           ;main.c: 387: {;main.c: 388: clcd_write(0x01, 0);
  5118   00037C  0E00               	movlw	0
  5119   00037E  6E34               	movwf	clcd_write@control_bit^0,c
  5120   000380  0E01               	movlw	1
  5121   000382  ECBE  F009         	call	_clcd_write
  5122   000386                     l3123:
  5123                           
  5124                           ;main.c: 389: };main.c: 390: clcd_print("Ree Enter password",(0x80 + (0)));
  5125   000386  0EFA               	movlw	low STR_15
  5126   000388  6E3A               	movwf	clcd_print@data^0,c
  5127   00038A  0E2E               	movlw	high STR_15
  5128   00038C  6E3B               	movwf	(clcd_print@data+1)^0,c
  5129   00038E  0E80               	movlw	128
  5130   000390  6E3C               	movwf	clcd_print@addr^0,c
  5131   000392  EC55  F007         	call	_clcd_print	;wreg free
  5132                           
  5133                           ;main.c: 391: key = read_switches(1);
  5134   000396  0E01               	movlw	1
  5135   000398  ECAE  F008         	call	_read_switches
  5136   00039C  6E45               	movwf	change_password@key^0,c
  5137                           
  5138                           ;main.c: 393: if (key == 5)
  5139   00039E  0E05               	movlw	5
  5140   0003A0  1845               	xorwf	change_password@key^0,w,c
  5141   0003A2  A4D8               	btfss	status,2,c
  5142   0003A4  D016               	goto	l3137
  5143                           
  5144                           ;main.c: 394: {;main.c: 395: re_pass = re_pass << 1 | 1;
  5145   0003A6  0E01               	movlw	1
  5146   0003A8  C010  F03D         	movff	change_password@re_pass,??_change_password
  5147   0003AC  C011  F03E         	movff	change_password@re_pass+1,??_change_password+1
  5148   0003B0  90D8               	bcf	status,0,c
  5149   0003B2  363D               	rlcf	??_change_password^0,f,c
  5150   0003B4  363E               	rlcf	(??_change_password+1)^0,f,c
  5151   0003B6  103D               	iorwf	??_change_password^0,w,c
  5152   0003B8  6E10               	movwf	change_password@re_pass^0,c
  5153   0003BA  503E               	movf	(??_change_password+1)^0,w,c
  5154   0003BC  6E11               	movwf	(change_password@re_pass+1)^0,c
  5155                           
  5156                           ;main.c: 396: choice++;
  5157   0003BE  4A0E               	infsnz	change_password@choice^0,f,c
  5158   0003C0  2A0F               	incf	(change_password@choice+1)^0,f,c
  5159                           
  5160                           ;main.c: 397: clcd_putch('*', (0xC0 + (i++)));
  5161   0003C2  500C               	movf	change_password@i^0,w,c
  5162   0003C4  0FC0               	addlw	192
  5163   0003C6  6E3B               	movwf	clcd_putch@addr^0,c
  5164   0003C8  0E2A               	movlw	42
  5165   0003CA  EC24  F00A         	call	_clcd_putch
  5166   0003CE  4A0C               	infsnz	change_password@i^0,f,c
  5167   0003D0  2A0D               	incf	(change_password@i+1)^0,f,c
  5168   0003D2                     l3137:
  5169                           
  5170                           ;main.c: 398: };main.c: 399: if (key == 6)
  5171   0003D2  0E06               	movlw	6
  5172   0003D4  1845               	xorwf	change_password@key^0,w,c
  5173   0003D6  A4D8               	btfss	status,2,c
  5174   0003D8  D00F               	goto	l3147
  5175                           
  5176                           ;main.c: 400: {;main.c: 401: choice++;
  5177   0003DA  4A0E               	infsnz	change_password@choice^0,f,c
  5178   0003DC  2A0F               	incf	(change_password@choice+1)^0,f,c
  5179                           
  5180                           ;main.c: 402: clcd_putch('*',(0xC0 + (i++)));
  5181   0003DE  500C               	movf	change_password@i^0,w,c
  5182   0003E0  0FC0               	addlw	192
  5183   0003E2  6E3B               	movwf	clcd_putch@addr^0,c
  5184   0003E4  0E2A               	movlw	42
  5185   0003E6  EC24  F00A         	call	_clcd_putch
  5186   0003EA  4A0C               	infsnz	change_password@i^0,f,c
  5187   0003EC  2A0D               	incf	(change_password@i+1)^0,f,c
  5188                           
  5189                           ;main.c: 403: re_pass = re_pass << 1;
  5190   0003EE  90D8               	bcf	status,0,c
  5191   0003F0  3410               	rlcf	change_password@re_pass^0,w,c
  5192   0003F2  6E10               	movwf	change_password@re_pass^0,c
  5193   0003F4  3411               	rlcf	(change_password@re_pass+1)^0,w,c
  5194   0003F6  6E11               	movwf	(change_password@re_pass+1)^0,c
  5195   0003F8                     l3147:
  5196                           
  5197                           ;main.c: 404: };main.c: 405: };main.c: 407: if (choice == 8)
  5198   0003F8  0E08               	movlw	8
  5199   0003FA  180E               	xorwf	change_password@choice^0,w,c
  5200   0003FC  100F               	iorwf	(change_password@choice+1)^0,w,c
  5201   0003FE  A4D8               	btfss	status,2,c
  5202   000400  0012               	return	
  5203                           
  5204                           ;main.c: 408: {;main.c: 409: clcd_write(0x01, 0);
  5205   000402  0E00               	movlw	0
  5206   000404  6E34               	movwf	clcd_write@control_bit^0,c
  5207   000406  0E01               	movlw	1
  5208   000408  ECBE  F009         	call	_clcd_write
  5209                           
  5210                           ;main.c: 411: if (psswd == re_pass)
  5211   00040C  5010               	movf	change_password@re_pass^0,w,c
  5212   00040E  1808               	xorwf	change_password@psswd^0,w,c
  5213   000410  E132               	bnz	l3171
  5214   000412  5011               	movf	(change_password@re_pass+1)^0,w,c
  5215   000414  1809               	xorwf	(change_password@psswd+1)^0,w,c
  5216   000416  A4D8               	btfss	status,2,c
  5217   000418  D02E               	goto	l3171
  5218                           
  5219                           ;main.c: 412: {;main.c: 413: password = re_pass;
  5220   00041A  C010  F022         	movff	change_password@re_pass,_password
  5221   00041E  C011  F023         	movff	change_password@re_pass+1,_password+1
  5222                           
  5223                           ;main.c: 414: write_external_eeprom(0xFF,re_pass);
  5224   000422  C010  F035         	movff	change_password@re_pass,write_external_eeprom@data
  5225   000426  0EFF               	movlw	255
  5226   000428  EC06  F009         	call	_write_external_eeprom
  5227                           
  5228                           ;main.c: 415: clcd_print("Password changed",(0x80 + (0)));
  5229   00042C  0E74               	movlw	low STR_16
  5230   00042E  6E3A               	movwf	clcd_print@data^0,c
  5231   000430  0E2F               	movlw	high STR_16
  5232   000432  6E3B               	movwf	(clcd_print@data+1)^0,c
  5233   000434  0E80               	movlw	128
  5234   000436  6E3C               	movwf	clcd_print@addr^0,c
  5235   000438  EC55  F007         	call	_clcd_print	;wreg free
  5236                           
  5237                           ;main.c: 416: clcd_print("Successfully ",(0xC0 + (0)));
  5238   00043C  0ED0               	movlw	low STR_17
  5239   00043E  6E3A               	movwf	clcd_print@data^0,c
  5240   000440  0E2F               	movlw	high STR_17
  5241   000442  6E3B               	movwf	(clcd_print@data+1)^0,c
  5242   000444  0EC0               	movlw	192
  5243   000446  6E3C               	movwf	clcd_print@addr^0,c
  5244   000448  EC55  F007         	call	_clcd_print	;wreg free
  5245                           
  5246                           ;main.c: 417: for (unsigned int i = 59999; i--;)
  5247   00044C  0EEA               	movlw	234
  5248   00044E  6E40               	movwf	(change_password@i_249+1)^0,c
  5249   000450  0E5F               	movlw	95
  5250   000452  6E3F               	movwf	change_password@i_249^0,c
  5251   000454  D006               	goto	u2680
  5252   000456                     l3163:
  5253                           
  5254                           ;main.c: 418: for (unsigned char j = 30; j--; );
  5255   000456  0E1E               	movlw	30
  5256   000458  6E43               	movwf	change_password@j_250^0,c
  5257   00045A                     l3165:
  5258   00045A  0643               	decf	change_password@j_250^0,f,c
  5259   00045C  2843               	incf	change_password@j_250^0,w,c
  5260   00045E  A4D8               	btfss	status,2,c
  5261   000460  D7FC               	goto	l3165
  5262   000462                     u2680:
  5263   000462  063F               	decf	change_password@i_249^0,f,c
  5264   000464  A0D8               	btfss	status,0,c
  5265   000466  0640               	decf	(change_password@i_249+1)^0,f,c
  5266   000468  283F               	incf	change_password@i_249^0,w,c
  5267   00046A  E1F5               	bnz	l3163
  5268   00046C  2840               	incf	(change_password@i_249+1)^0,w,c
  5269   00046E  A4D8               	btfss	status,2,c
  5270   000470  D7F2               	goto	l3163
  5271                           
  5272                           ;main.c: 419: choose_flag = 0;
  5273   000472  0E00               	movlw	0
  5274   000474  D01C               	goto	L2
  5275   000476                     l3171:
  5276                           
  5277                           ;main.c: 421: else;main.c: 422: {;main.c: 423: clcd_print("Wrong Password",(0x80 + (0)))
      +                          ;
  5278   000476  0EA4               	movlw	low STR_18
  5279   000478  6E3A               	movwf	clcd_print@data^0,c
  5280   00047A  0E2F               	movlw	high STR_18
  5281   00047C  6E3B               	movwf	(clcd_print@data+1)^0,c
  5282   00047E  0E80               	movlw	128
  5283   000480  6E3C               	movwf	clcd_print@addr^0,c
  5284   000482  EC55  F007         	call	_clcd_print	;wreg free
  5285                           
  5286                           ;main.c: 424: for (unsigned int i = 59999;i--;)
  5287   000486  0EEA               	movlw	234
  5288   000488  6E42               	movwf	(change_password@i_252+1)^0,c
  5289   00048A  0E5F               	movlw	95
  5290   00048C  6E41               	movwf	change_password@i_252^0,c
  5291   00048E  D006               	goto	u2700
  5292   000490                     l3175:
  5293                           
  5294                           ;main.c: 425: for(unsigned char j = 30; j--;);
  5295   000490  0E1E               	movlw	30
  5296   000492  6E44               	movwf	change_password@j_253^0,c
  5297   000494                     l3177:
  5298   000494  0644               	decf	change_password@j_253^0,f,c
  5299   000496  2844               	incf	change_password@j_253^0,w,c
  5300   000498  A4D8               	btfss	status,2,c
  5301   00049A  D7FC               	goto	l3177
  5302   00049C                     u2700:
  5303   00049C  0641               	decf	change_password@i_252^0,f,c
  5304   00049E  A0D8               	btfss	status,0,c
  5305   0004A0  0642               	decf	(change_password@i_252+1)^0,f,c
  5306   0004A2  2841               	incf	change_password@i_252^0,w,c
  5307   0004A4  E1F5               	bnz	l3175
  5308   0004A6  2842               	incf	(change_password@i_252+1)^0,w,c
  5309   0004A8  A4D8               	btfss	status,2,c
  5310   0004AA  D7F2               	goto	l3175
  5311                           
  5312                           ;main.c: 426: choose_flag = 2;
  5313   0004AC  0E02               	movlw	2
  5314   0004AE                     L2:
  5315   0004AE  6E2F               	movwf	_choose_flag^0,c
  5316                           
  5317                           ;main.c: 427: };main.c: 428: choice = 0;
  5318   0004B0  0E00               	movlw	0
  5319   0004B2  6E0F               	movwf	(change_password@choice+1)^0,c
  5320   0004B4  0E00               	movlw	0
  5321   0004B6  6E0E               	movwf	change_password@choice^0,c
  5322                           
  5323                           ;main.c: 429: i= 0;
  5324   0004B8  0E00               	movlw	0
  5325   0004BA  6E0D               	movwf	(change_password@i+1)^0,c
  5326   0004BC  0E00               	movlw	0
  5327   0004BE  6E0C               	movwf	change_password@i^0,c
  5328   0004C0  0012               	return		;funcret
  5329   0004C2                     __end_of_change_password:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _write_external_eeprom *****************
  5333 ;; Defined at:
  5334 ;;		line 12 in file "exter.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  address         1    wreg     unsigned char 
  5337 ;;  data            1    1[COMRAM] unsigned char 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  address         1    4[COMRAM] unsigned char 
  5340 ;;  i               2    2[COMRAM] unsigned int 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5350 ;;      Params:         1       0       0       0       0       0       0
  5351 ;;      Locals:         3       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0
  5353 ;;      Totals:         4       0       0       0       0       0       0
  5354 ;;Total ram usage:        4 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 3
  5357 ;; This function calls:
  5358 ;;		_i2c_start
  5359 ;;		_i2c_stop
  5360 ;;		_i2c_write
  5361 ;; This function is called by:
  5362 ;;		_change_password
  5363 ;;		_store_external_eeprom
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text32
  5368   00120C                     __ptext32:
  5369                           	callstack 0
  5370   00120C                     _write_external_eeprom:
  5371                           	callstack 24
  5372                           
  5373                           ;incstack = 0
  5374                           ;write_external_eeprom@address stored from wreg
  5375   00120C  6E38               	movwf	write_external_eeprom@address^0,c
  5376                           
  5377                           ;exter.c: 14: i2c_start();
  5378   00120E  EC5A  F00A         	call	_i2c_start	;wreg free
  5379                           
  5380                           ;exter.c: 15: i2c_write(0xA0);
  5381   001212  0EA0               	movlw	160
  5382   001214  EC44  F00A         	call	_i2c_write
  5383                           
  5384                           ;exter.c: 16: i2c_write(address);
  5385   001218  5038               	movf	write_external_eeprom@address^0,w,c
  5386   00121A  EC44  F00A         	call	_i2c_write
  5387                           
  5388                           ;exter.c: 17: i2c_write(data);
  5389   00121E  5035               	movf	write_external_eeprom@data^0,w,c
  5390   001220  EC44  F00A         	call	_i2c_write
  5391                           
  5392                           ;exter.c: 18: i2c_stop();
  5393   001224  EC56  F00A         	call	_i2c_stop	;wreg free
  5394                           
  5395                           ;exter.c: 19: for(unsigned int i = 1000;i--;);
  5396   001228  0E03               	movlw	3
  5397   00122A  6E37               	movwf	(write_external_eeprom@i+1)^0,c
  5398   00122C  0EE8               	movlw	232
  5399   00122E  6E36               	movwf	write_external_eeprom@i^0,c
  5400   001230                     l2563:
  5401   001230  0636               	decf	write_external_eeprom@i^0,f,c
  5402   001232  A0D8               	btfss	status,0,c
  5403   001234  0637               	decf	(write_external_eeprom@i+1)^0,f,c
  5404   001236  2836               	incf	write_external_eeprom@i^0,w,c
  5405   001238  E1FB               	bnz	l2563
  5406   00123A  2837               	incf	(write_external_eeprom@i+1)^0,w,c
  5407   00123C  B4D8               	btfsc	status,2,c
  5408   00123E  0012               	return	
  5409   001240  D7F7               	goto	l2563
  5410   001242                     __end_of_write_external_eeprom:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function _read_switches *****************
  5414 ;; Defined at:
  5415 ;;		line 88 in file "matrix_keypad.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  detection_ty    1    wreg     unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  detection_ty    1    0[COMRAM] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      unsigned char 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5429 ;;      Params:         0       0       0       0       0       0       0
  5430 ;;      Locals:         1       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0
  5432 ;;      Totals:         1       0       0       0       0       0       0
  5433 ;;Total ram usage:        1 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 2
  5436 ;; This function calls:
  5437 ;;		_scan_key
  5438 ;; This function is called by:
  5439 ;;		_Enter_password
  5440 ;;		_view_menu
  5441 ;;		_view_log
  5442 ;;		_clear_log
  5443 ;;		_set_time
  5444 ;;		_change_password
  5445 ;;		_change_event
  5446 ;;		_main
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text33
  5451   00115C                     __ptext33:
  5452                           	callstack 0
  5453   00115C                     _read_switches:
  5454                           	callstack 27
  5455                           
  5456                           ;incstack = 0
  5457                           ;read_switches@detection_type stored from wreg
  5458   00115C  6E34               	movwf	read_switches@detection_type^0,c
  5459                           
  5460                           ;matrix_keypad.c: 90: static unsigned char once = 1, key;;matrix_keypad.c: 92: if (detec
      +                          tion_type == 1)
  5461   00115E  0434               	decf	read_switches@detection_type^0,w,c
  5462   001160  A4D8               	btfss	status,2,c
  5463   001162  D013               	goto	l2691
  5464                           
  5465                           ;matrix_keypad.c: 93: {;matrix_keypad.c: 94: key = scan_key();
  5466   001164  EC7E  F006         	call	_scan_key	;wreg free
  5467   001168  6E26               	movwf	read_switches@key^0,c
  5468                           
  5469                           ;matrix_keypad.c: 95: if(key != 0xFF && once )
  5470   00116A  2826               	incf	read_switches@key^0,w,c
  5471   00116C  B4D8               	btfsc	status,2,c
  5472   00116E  D007               	goto	l2687
  5473   001170  505D               	movf	read_switches@once^0,w,c
  5474   001172  B4D8               	btfsc	status,2,c
  5475   001174  D004               	goto	l2687
  5476                           
  5477                           ;matrix_keypad.c: 96: {;matrix_keypad.c: 97: once = 0;
  5478   001176  0E00               	movlw	0
  5479   001178  6E5D               	movwf	read_switches@once^0,c
  5480                           
  5481                           ;matrix_keypad.c: 98: return key;
  5482   00117A  5026               	movf	read_switches@key^0,w,c
  5483   00117C  0012               	return	
  5484   00117E                     l2687:
  5485                           
  5486                           ;matrix_keypad.c: 100: else if(key == 0xFF)
  5487   00117E  2826               	incf	read_switches@key^0,w,c
  5488   001180  A4D8               	btfss	status,2,c
  5489   001182  D009               	goto	l2697
  5490                           
  5491                           ;matrix_keypad.c: 101: {;matrix_keypad.c: 102: once = 1;
  5492   001184  0E01               	movlw	1
  5493   001186  6E5D               	movwf	read_switches@once^0,c
  5494   001188  D006               	goto	l2697
  5495   00118A                     l2691:
  5496                           
  5497                           ;matrix_keypad.c: 105: else if (detection_type == 0)
  5498   00118A  5034               	movf	read_switches@detection_type^0,w,c
  5499   00118C  A4D8               	btfss	status,2,c
  5500   00118E  D003               	goto	l2697
  5501                           
  5502                           ;matrix_keypad.c: 106: {;matrix_keypad.c: 107: return scan_key();
  5503   001190  EC7E  F006         	call	_scan_key	;wreg free
  5504   001194  0012               	return	
  5505   001196                     l2697:
  5506                           
  5507                           ;matrix_keypad.c: 108: };matrix_keypad.c: 110: return 0xFF;
  5508   001196  0EFF               	movlw	255
  5509   001198  0012               	return		;funcret
  5510   00119A                     __end_of_read_switches:
  5511                           	callstack 0
  5512                           
  5513 ;; *************** function _scan_key *****************
  5514 ;; Defined at:
  5515 ;;		line 18 in file "matrix_keypad.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      unsigned char 
  5522 ;; Registers used:
  5523 ;;		wreg
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5529 ;;      Params:         0       0       0       0       0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0
  5532 ;;      Totals:         0       0       0       0       0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_read_switches
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text34
  5544   000CFC                     __ptext34:
  5545                           	callstack 0
  5546   000CFC                     _scan_key:
  5547                           	callstack 27
  5548                           
  5549                           ;matrix_keypad.c: 20: PORTBbits.RB5 = 0;
  5550                           
  5551                           ;incstack = 0
  5552   000CFC  9A81               	bcf	129,5,c	;volatile
  5553                           
  5554                           ;matrix_keypad.c: 21: PORTBbits.RB6 = 1;
  5555   000CFE  8C81               	bsf	129,6,c	;volatile
  5556                           
  5557                           ;matrix_keypad.c: 22: PORTBbits.RB7 = 1;
  5558   000D00  8E81               	bsf	129,7,c	;volatile
  5559                           
  5560                           ;matrix_keypad.c: 24: if (PORTBbits.RB1 == 0)
  5561   000D02  B281               	btfsc	129,1,c	;volatile
  5562   000D04  D002               	goto	l452
  5563                           
  5564                           ;matrix_keypad.c: 25: {;matrix_keypad.c: 26: return 1;
  5565   000D06  0E01               	movlw	1
  5566   000D08  0012               	return	
  5567   000D0A                     l452:
  5568                           
  5569                           ;matrix_keypad.c: 28: else if (PORTBbits.RB2 == 0)
  5570   000D0A  B481               	btfsc	129,2,c	;volatile
  5571   000D0C  D002               	goto	l455
  5572                           
  5573                           ;matrix_keypad.c: 29: {;matrix_keypad.c: 30: return 4;
  5574   000D0E  0E04               	movlw	4
  5575   000D10  0012               	return	
  5576   000D12                     l455:
  5577                           
  5578                           ;matrix_keypad.c: 32: else if (PORTBbits.RB3 == 0)
  5579   000D12  B681               	btfsc	129,3,c	;volatile
  5580   000D14  D002               	goto	l457
  5581                           
  5582                           ;matrix_keypad.c: 33: {;matrix_keypad.c: 34: return 7;
  5583   000D16  0E07               	movlw	7
  5584   000D18  0012               	return	
  5585   000D1A                     l457:
  5586                           
  5587                           ;matrix_keypad.c: 36: else if (PORTBbits.RB4 == 0)
  5588   000D1A  B881               	btfsc	129,4,c	;volatile
  5589   000D1C  D002               	goto	l454
  5590                           
  5591                           ;matrix_keypad.c: 37: {;matrix_keypad.c: 38: return 10;
  5592   000D1E  0E0A               	movlw	10
  5593   000D20  0012               	return	
  5594   000D22                     l454:
  5595                           
  5596                           ;matrix_keypad.c: 39: };matrix_keypad.c: 41: PORTBbits.RB5 = 1;
  5597   000D22  8A81               	bsf	129,5,c	;volatile
  5598                           
  5599                           ;matrix_keypad.c: 42: PORTBbits.RB6 = 0;
  5600   000D24  9C81               	bcf	129,6,c	;volatile
  5601                           
  5602                           ;matrix_keypad.c: 43: PORTBbits.RB7 = 1;
  5603   000D26  8E81               	bsf	129,7,c	;volatile
  5604                           
  5605                           ;matrix_keypad.c: 45: if (PORTBbits.RB1 == 0)
  5606   000D28  B281               	btfsc	129,1,c	;volatile
  5607   000D2A  D002               	goto	l460
  5608                           
  5609                           ;matrix_keypad.c: 46: {;matrix_keypad.c: 47: return 2;
  5610   000D2C  0E02               	movlw	2
  5611   000D2E  0012               	return	
  5612   000D30                     l460:
  5613                           
  5614                           ;matrix_keypad.c: 49: else if (PORTBbits.RB2 == 0)
  5615   000D30  B481               	btfsc	129,2,c	;volatile
  5616   000D32  D002               	goto	l462
  5617                           
  5618                           ;matrix_keypad.c: 50: {;matrix_keypad.c: 51: return 5;
  5619   000D34  0E05               	movlw	5
  5620   000D36  0012               	return	
  5621   000D38                     l462:
  5622                           
  5623                           ;matrix_keypad.c: 53: else if (PORTBbits.RB3 == 0)
  5624   000D38  B681               	btfsc	129,3,c	;volatile
  5625   000D3A  D002               	goto	l464
  5626                           
  5627                           ;matrix_keypad.c: 54: {;matrix_keypad.c: 55: return 8;
  5628   000D3C  0E08               	movlw	8
  5629   000D3E  0012               	return	
  5630   000D40                     l464:
  5631                           
  5632                           ;matrix_keypad.c: 57: else if (PORTBbits.RB4 == 0)
  5633   000D40  B881               	btfsc	129,4,c	;volatile
  5634   000D42  D002               	goto	l461
  5635                           
  5636                           ;matrix_keypad.c: 58: {;matrix_keypad.c: 59: return 11;
  5637   000D44  0E0B               	movlw	11
  5638   000D46  0012               	return	
  5639   000D48                     l461:
  5640                           
  5641                           ;matrix_keypad.c: 60: };matrix_keypad.c: 62: PORTBbits.RB5 = 1;
  5642   000D48  8A81               	bsf	129,5,c	;volatile
  5643                           
  5644                           ;matrix_keypad.c: 63: PORTBbits.RB6 = 1;
  5645   000D4A  8C81               	bsf	129,6,c	;volatile
  5646                           
  5647                           ;matrix_keypad.c: 64: PORTBbits.RB7 = 0;
  5648   000D4C  9E81               	bcf	129,7,c	;volatile
  5649                           
  5650                           ;matrix_keypad.c: 66: PORTBbits.RB7 = 0;
  5651   000D4E  9E81               	bcf	129,7,c	;volatile
  5652                           
  5653                           ;matrix_keypad.c: 68: if (PORTBbits.RB1 == 0)
  5654   000D50  B281               	btfsc	129,1,c	;volatile
  5655   000D52  D002               	goto	l467
  5656                           
  5657                           ;matrix_keypad.c: 69: {;matrix_keypad.c: 70: return 3;
  5658   000D54  0E03               	movlw	3
  5659   000D56  0012               	return	
  5660   000D58                     l467:
  5661                           
  5662                           ;matrix_keypad.c: 72: else if (PORTBbits.RB2 == 0)
  5663   000D58  B481               	btfsc	129,2,c	;volatile
  5664   000D5A  D002               	goto	l469
  5665                           
  5666                           ;matrix_keypad.c: 73: {;matrix_keypad.c: 74: return 6;
  5667   000D5C  0E06               	movlw	6
  5668   000D5E  0012               	return	
  5669   000D60                     l469:
  5670                           
  5671                           ;matrix_keypad.c: 76: else if (PORTBbits.RB3 == 0)
  5672   000D60  B681               	btfsc	129,3,c	;volatile
  5673   000D62  D002               	goto	l471
  5674                           
  5675                           ;matrix_keypad.c: 77: {;matrix_keypad.c: 78: return 9;
  5676   000D64  0E09               	movlw	9
  5677   000D66  0012               	return	
  5678   000D68                     l471:
  5679                           
  5680                           ;matrix_keypad.c: 80: else if (PORTBbits.RB4 == 0)
  5681   000D68  B881               	btfsc	129,4,c	;volatile
  5682   000D6A  D002               	goto	l470
  5683                           
  5684                           ;matrix_keypad.c: 81: {;matrix_keypad.c: 82: return 12;
  5685   000D6C  0E0C               	movlw	12
  5686   000D6E  0012               	return	
  5687   000D70                     l470:
  5688                           
  5689                           ;matrix_keypad.c: 83: };matrix_keypad.c: 85: return 0xFF;
  5690   000D70  0EFF               	movlw	255
  5691   000D72  0012               	return		;funcret
  5692   000D74                     __end_of_scan_key:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function _clcd_putch *****************
  5696 ;; Defined at:
  5697 ;;		line 51 in file "clcd.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  data            1    wreg     const unsigned char 
  5700 ;;  addr            1    7[COMRAM] unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  data            1    8[COMRAM] const unsigned char 
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5712 ;;      Params:         1       0       0       0       0       0       0
  5713 ;;      Locals:         1       0       0       0       0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0
  5715 ;;      Totals:         2       0       0       0       0       0       0
  5716 ;;Total ram usage:        2 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 2
  5719 ;; This function calls:
  5720 ;;		_clcd_write
  5721 ;; This function is called by:
  5722 ;;		_Enter_password
  5723 ;;		_view_menu
  5724 ;;		_view_log
  5725 ;;		_change_password
  5726 ;;		_display_time
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text35
  5731   001448                     __ptext35:
  5732                           	callstack 0
  5733   001448                     _clcd_putch:
  5734                           	callstack 27
  5735                           
  5736                           ;incstack = 0
  5737                           ;clcd_putch@data stored from wreg
  5738   001448  6E3C               	movwf	clcd_putch@data^0,c
  5739                           
  5740                           ;clcd.c: 53: clcd_write(addr, 0);
  5741   00144A  0E00               	movlw	0
  5742   00144C  6E34               	movwf	clcd_write@control_bit^0,c
  5743   00144E  503B               	movf	clcd_putch@addr^0,w,c
  5744   001450  ECBE  F009         	call	_clcd_write
  5745                           
  5746                           ;clcd.c: 54: clcd_write(data, 1);
  5747   001454  0E01               	movlw	1
  5748   001456  6E34               	movwf	clcd_write@control_bit^0,c
  5749   001458  503C               	movf	clcd_putch@data^0,w,c
  5750   00145A  ECBE  F009         	call	_clcd_write
  5751   00145E  0012               	return		;funcret
  5752   001460                     __end_of_clcd_putch:
  5753                           	callstack 0
  5754                           
  5755 ;; *************** function _Download_log *****************
  5756 ;; Defined at:
  5757 ;;		line 248 in file "main.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  k               1   26[COMRAM] unsigned char 
  5762 ;;  j               2   24[COMRAM] unsigned int 
  5763 ;;  down_array     15    9[COMRAM] unsigned char [15]
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      void 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         0       0       0       0       0       0       0
  5774 ;;      Locals:        18       0       0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0
  5776 ;;      Totals:        18       0       0       0       0       0       0
  5777 ;;Total ram usage:       18 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; Hardware stack levels required when called: 5
  5780 ;; This function calls:
  5781 ;;		_clcd_print
  5782 ;;		_puts
  5783 ;;		_read_external_eeprom
  5784 ;; This function is called by:
  5785 ;;		_Enter_menu
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text36
  5790   000B6A                     __ptext36:
  5791                           	callstack 0
  5792   000B6A                     _Download_log:
  5793                           	callstack 24
  5794                           
  5795                           ;main.c: 250: unsigned static char i=0,b=0;;main.c: 251: unsigned char down_array[15]={0
      +                          };
  5796                           
  5797                           ;incstack = 0
  5798   000B6A  EE20  F03D         	lfsr	2,Download_log@down_array
  5799   000B6E  0E0E               	movlw	14
  5800   000B70                     u2291:
  5801   000B70  6ADE               	clrf	postinc2,c
  5802   000B72  06E8               	decf	wreg,f,c
  5803   000B74  E2FD               	bc	u2291
  5804                           
  5805                           ;main.c: 252: for (b =0; b < 10; b++)
  5806   000B76  0E00               	movlw	0
  5807   000B78  6E28               	movwf	Download_log@b^0,c
  5808   000B7A                     l2963:
  5809                           
  5810                           ;main.c: 253: {;main.c: 254: for (i = 0; i< 14; i++)
  5811   000B7A  0E00               	movlw	0
  5812   000B7C  6E29               	movwf	Download_log@i^0,c
  5813   000B7E                     l2969:
  5814                           
  5815                           ;main.c: 255: {;main.c: 256: down_array[i] = read_external_eeprom((b*14) + i);
  5816   000B7E  5029               	movf	Download_log@i^0,w,c
  5817   000B80  0F3D               	addlw	low Download_log@down_array
  5818   000B82  6ED9               	movwf	fsr2l,c
  5819   000B84  6ADA               	clrf	fsr2h,c
  5820   000B86  5028               	movf	Download_log@b^0,w,c
  5821   000B88  0D0E               	mullw	14
  5822   000B8A  50F3               	movf	243,w,c
  5823   000B8C  2429               	addwf	Download_log@i^0,w,c
  5824   000B8E  EC94  F009         	call	_read_external_eeprom
  5825   000B92  6EDF               	movwf	indf2,c
  5826   000B94  2A29               	incf	Download_log@i^0,f,c
  5827   000B96  0E0D               	movlw	13
  5828   000B98  6429               	cpfsgt	Download_log@i^0,c
  5829   000B9A  D7F1               	goto	l2969
  5830                           
  5831                           ;main.c: 257: };main.c: 258: puts("\n\r");
  5832   000B9C  0EFC               	movlw	low STR_10
  5833   000B9E  6E35               	movwf	puts@s^0,c
  5834   000BA0  0E2F               	movlw	high STR_10
  5835   000BA2  6E36               	movwf	(puts@s+1)^0,c
  5836   000BA4  ECD8  F007         	call	_puts	;wreg free
  5837                           
  5838                           ;main.c: 259: puts(down_array);
  5839   000BA8  0E3D               	movlw	low Download_log@down_array
  5840   000BAA  6E35               	movwf	puts@s^0,c
  5841   000BAC  6A36               	clrf	(puts@s+1)^0,c
  5842   000BAE  ECD8  F007         	call	_puts	;wreg free
  5843   000BB2  2A28               	incf	Download_log@b^0,f,c
  5844   000BB4  0E09               	movlw	9
  5845   000BB6  6428               	cpfsgt	Download_log@b^0,c
  5846   000BB8  D7E0               	goto	l2963
  5847                           
  5848                           ;main.c: 260: };main.c: 262: clcd_print("Download completed",(0xC0 + (0)));
  5849   000BBA  0EE7               	movlw	low STR_11
  5850   000BBC  6E3A               	movwf	clcd_print@data^0,c
  5851   000BBE  0E2E               	movlw	high STR_11
  5852   000BC0  6E3B               	movwf	(clcd_print@data+1)^0,c
  5853   000BC2  0EC0               	movlw	192
  5854   000BC4  6E3C               	movwf	clcd_print@addr^0,c
  5855   000BC6  EC55  F007         	call	_clcd_print	;wreg free
  5856                           
  5857                           ;main.c: 263: for (unsigned int j = 59999; j--;)
  5858   000BCA  0EEA               	movlw	234
  5859   000BCC  6E4D               	movwf	(Download_log@j+1)^0,c
  5860   000BCE  0E5F               	movlw	95
  5861   000BD0  6E4C               	movwf	Download_log@j^0,c
  5862   000BD2  D006               	goto	u2320
  5863   000BD4                     l2985:
  5864                           
  5865                           ;main.c: 264: for (unsigned char k = 30; k--;);
  5866   000BD4  0E1E               	movlw	30
  5867   000BD6  6E4E               	movwf	Download_log@k^0,c
  5868   000BD8                     l2987:
  5869   000BD8  064E               	decf	Download_log@k^0,f,c
  5870   000BDA  284E               	incf	Download_log@k^0,w,c
  5871   000BDC  A4D8               	btfss	status,2,c
  5872   000BDE  D7FC               	goto	l2987
  5873   000BE0                     u2320:
  5874   000BE0  064C               	decf	Download_log@j^0,f,c
  5875   000BE2  A0D8               	btfss	status,0,c
  5876   000BE4  064D               	decf	(Download_log@j+1)^0,f,c
  5877   000BE6  284C               	incf	Download_log@j^0,w,c
  5878   000BE8  E1F5               	bnz	l2985
  5879   000BEA  284D               	incf	(Download_log@j+1)^0,w,c
  5880   000BEC  A4D8               	btfss	status,2,c
  5881   000BEE  D7F2               	goto	l2985
  5882                           
  5883                           ;main.c: 265: choose_flag = 2;
  5884   000BF0  0E02               	movlw	2
  5885   000BF2  6E2F               	movwf	_choose_flag^0,c
  5886   000BF4  0012               	return		;funcret
  5887   000BF6                     __end_of_Download_log:
  5888                           	callstack 0
  5889                           
  5890 ;; *************** function _read_external_eeprom *****************
  5891 ;; Defined at:
  5892 ;;		line 22 in file "exter.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  address         1    wreg     unsigned char 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  address         1    1[COMRAM] unsigned char 
  5897 ;;  data            1    2[COMRAM] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      unsigned char 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5907 ;;      Params:         0       0       0       0       0       0       0
  5908 ;;      Locals:         2       0       0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0
  5910 ;;      Totals:         2       0       0       0       0       0       0
  5911 ;;Total ram usage:        2 bytes
  5912 ;; Hardware stack levels used: 1
  5913 ;; Hardware stack levels required when called: 4
  5914 ;; This function calls:
  5915 ;;		_i2c_read
  5916 ;;		_i2c_rep_start
  5917 ;;		_i2c_start
  5918 ;;		_i2c_stop
  5919 ;;		_i2c_write
  5920 ;; This function is called by:
  5921 ;;		_Enter_password
  5922 ;;		_view_log
  5923 ;;		_Download_log
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text37
  5928   001328                     __ptext37:
  5929                           	callstack 0
  5930   001328                     _read_external_eeprom:
  5931                           	callstack 25
  5932                           
  5933                           ;incstack = 0
  5934                           ;read_external_eeprom@address stored from wreg
  5935   001328  6E35               	movwf	read_external_eeprom@address^0,c
  5936                           
  5937                           ;exter.c: 24: unsigned char data;;exter.c: 26: i2c_start();
  5938   00132A  EC5A  F00A         	call	_i2c_start	;wreg free
  5939                           
  5940                           ;exter.c: 27: i2c_write(0xA0);
  5941   00132E  0EA0               	movlw	160
  5942   001330  EC44  F00A         	call	_i2c_write
  5943                           
  5944                           ;exter.c: 28: i2c_write(address);
  5945   001334  5035               	movf	read_external_eeprom@address^0,w,c
  5946   001336  EC44  F00A         	call	_i2c_write
  5947                           
  5948                           ;exter.c: 29: i2c_rep_start();
  5949   00133A  EC5E  F00A         	call	_i2c_rep_start	;wreg free
  5950                           
  5951                           ;exter.c: 30: i2c_write(0xA1);
  5952   00133E  0EA1               	movlw	161
  5953   001340  EC44  F00A         	call	_i2c_write
  5954                           
  5955                           ;exter.c: 31: data = i2c_read();
  5956   001344  EC4A  F00A         	call	_i2c_read	;wreg free
  5957   001348  6E36               	movwf	read_external_eeprom@data^0,c
  5958                           
  5959                           ;exter.c: 32: i2c_stop();
  5960   00134A  EC56  F00A         	call	_i2c_stop	;wreg free
  5961                           
  5962                           ;exter.c: 34: return data;
  5963   00134E  5036               	movf	read_external_eeprom@data^0,w,c
  5964   001350  0012               	return		;funcret
  5965   001352                     __end_of_read_external_eeprom:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _i2c_write *****************
  5969 ;; Defined at:
  5970 ;;		line 54 in file "i2c.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  data            1    wreg     unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  data            1    0[COMRAM] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5984 ;;      Params:         0       0       0       0       0       0       0
  5985 ;;      Locals:         1       0       0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0
  5987 ;;      Totals:         1       0       0       0       0       0       0
  5988 ;;Total ram usage:        1 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 2
  5991 ;; This function calls:
  5992 ;;		_i2c_idle
  5993 ;; This function is called by:
  5994 ;;		_write_ds1307
  5995 ;;		_read_ds1307
  5996 ;;		_write_external_eeprom
  5997 ;;		_read_external_eeprom
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text38
  6002   001488                     __ptext38:
  6003                           	callstack 0
  6004   001488                     _i2c_write:
  6005                           	callstack 25
  6006                           
  6007                           ;incstack = 0
  6008                           ;i2c_write@data stored from wreg
  6009   001488  6E34               	movwf	i2c_write@data^0,c
  6010                           
  6011                           ;i2c.c: 56: SSPBUF = data;
  6012   00148A  C034  FFC9         	movff	i2c_write@data,4041	;volatile
  6013                           
  6014                           ;i2c.c: 57: i2c_idle();
  6015   00148E  EC66  F00A         	call	_i2c_idle	;wreg free
  6016   001492  0012               	return		;funcret
  6017   001494                     __end_of_i2c_write:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function _i2c_stop *****************
  6021 ;; Defined at:
  6022 ;;		line 42 in file "i2c.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;		None
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:         0       0       0       0       0       0       0
  6037 ;;      Locals:         0       0       0       0       0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0
  6039 ;;      Totals:         0       0       0       0       0       0       0
  6040 ;;Total ram usage:        0 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 2
  6043 ;; This function calls:
  6044 ;;		_i2c_idle
  6045 ;; This function is called by:
  6046 ;;		_write_ds1307
  6047 ;;		_read_ds1307
  6048 ;;		_write_external_eeprom
  6049 ;;		_read_external_eeprom
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text39
  6054   0014AC                     __ptext39:
  6055                           	callstack 0
  6056   0014AC                     _i2c_stop:
  6057                           	callstack 25
  6058                           
  6059                           ;i2c.c: 44: PEN = 1;
  6060                           
  6061                           ;incstack = 0
  6062   0014AC  84C5               	bsf	4037,2,c	;volatile
  6063                           
  6064                           ;i2c.c: 45: i2c_idle();
  6065   0014AE  EC66  F00A         	call	_i2c_idle	;wreg free
  6066   0014B2  0012               	return		;funcret
  6067   0014B4                     __end_of_i2c_stop:
  6068                           	callstack 0
  6069                           
  6070 ;; *************** function _i2c_start *****************
  6071 ;; Defined at:
  6072 ;;		line 36 in file "i2c.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;		None
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6086 ;;      Params:         0       0       0       0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0
  6089 ;;      Totals:         0       0       0       0       0       0       0
  6090 ;;Total ram usage:        0 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; Hardware stack levels required when called: 2
  6093 ;; This function calls:
  6094 ;;		_i2c_idle
  6095 ;; This function is called by:
  6096 ;;		_write_ds1307
  6097 ;;		_read_ds1307
  6098 ;;		_write_external_eeprom
  6099 ;;		_read_external_eeprom
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text40
  6104   0014B4                     __ptext40:
  6105                           	callstack 0
  6106   0014B4                     _i2c_start:
  6107                           	callstack 25
  6108                           
  6109                           ;i2c.c: 38: SEN = 1;
  6110                           
  6111                           ;incstack = 0
  6112   0014B4  80C5               	bsf	4037,0,c	;volatile
  6113                           
  6114                           ;i2c.c: 39: i2c_idle();
  6115   0014B6  EC66  F00A         	call	_i2c_idle	;wreg free
  6116   0014BA  0012               	return		;funcret
  6117   0014BC                     __end_of_i2c_start:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _i2c_rep_start *****************
  6121 ;; Defined at:
  6122 ;;		line 48 in file "i2c.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6136 ;;      Params:         0       0       0       0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0
  6139 ;;      Totals:         0       0       0       0       0       0       0
  6140 ;;Total ram usage:        0 bytes
  6141 ;; Hardware stack levels used: 1
  6142 ;; Hardware stack levels required when called: 2
  6143 ;; This function calls:
  6144 ;;		_i2c_idle
  6145 ;; This function is called by:
  6146 ;;		_read_ds1307
  6147 ;;		_read_external_eeprom
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text41
  6152   0014BC                     __ptext41:
  6153                           	callstack 0
  6154   0014BC                     _i2c_rep_start:
  6155                           	callstack 25
  6156                           
  6157                           ;i2c.c: 50: RSEN = 1;
  6158                           
  6159                           ;incstack = 0
  6160   0014BC  82C5               	bsf	4037,1,c	;volatile
  6161                           
  6162                           ;i2c.c: 51: i2c_idle();
  6163   0014BE  EC66  F00A         	call	_i2c_idle	;wreg free
  6164   0014C2  0012               	return		;funcret
  6165   0014C4                     __end_of_i2c_rep_start:
  6166                           	callstack 0
  6167                           
  6168 ;; *************** function _i2c_read *****************
  6169 ;; Defined at:
  6170 ;;		line 72 in file "i2c.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      unsigned char 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6184 ;;      Params:         0       0       0       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0
  6187 ;;      Totals:         0       0       0       0       0       0       0
  6188 ;;Total ram usage:        0 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 3
  6191 ;; This function calls:
  6192 ;;		_i2c_no_ack
  6193 ;;		_i2c_rx_mode
  6194 ;; This function is called by:
  6195 ;;		_read_ds1307
  6196 ;;		_read_external_eeprom
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text42
  6201   001494                     __ptext42:
  6202                           	callstack 0
  6203   001494                     _i2c_read:
  6204                           	callstack 24
  6205                           
  6206                           ;i2c.c: 74: i2c_rx_mode();
  6207                           
  6208                           ;incstack = 0
  6209   001494  EC62  F00A         	call	_i2c_rx_mode	;wreg free
  6210                           
  6211                           ;i2c.c: 75: i2c_no_ack();
  6212   001498  EC6A  F00A         	call	_i2c_no_ack	;wreg free
  6213                           
  6214                           ;i2c.c: 77: return SSPBUF;
  6215   00149C  50C9               	movf	201,w,c	;volatile
  6216   00149E  0012               	return		;funcret
  6217   0014A0                     __end_of_i2c_read:
  6218                           	callstack 0
  6219                           
  6220 ;; *************** function _i2c_rx_mode *****************
  6221 ;; Defined at:
  6222 ;;		line 60 in file "i2c.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6236 ;;      Params:         0       0       0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 2
  6243 ;; This function calls:
  6244 ;;		_i2c_idle
  6245 ;; This function is called by:
  6246 ;;		_i2c_read
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text43
  6251   0014C4                     __ptext43:
  6252                           	callstack 0
  6253   0014C4                     _i2c_rx_mode:
  6254                           	callstack 24
  6255                           
  6256                           ;i2c.c: 62: RCEN = 1;
  6257                           
  6258                           ;incstack = 0
  6259   0014C4  86C5               	bsf	4037,3,c	;volatile
  6260                           
  6261                           ;i2c.c: 63: i2c_idle();
  6262   0014C6  EC66  F00A         	call	_i2c_idle	;wreg free
  6263   0014CA  0012               	return		;funcret
  6264   0014CC                     __end_of_i2c_rx_mode:
  6265                           	callstack 0
  6266                           
  6267 ;; *************** function _i2c_idle *****************
  6268 ;; Defined at:
  6269 ;;		line 22 in file "i2c.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		None
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6283 ;;      Params:         0       0       0       0       0       0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used: 1
  6289 ;; Hardware stack levels required when called: 1
  6290 ;; This function calls:
  6291 ;;		Nothing
  6292 ;; This function is called by:
  6293 ;;		_i2c_start
  6294 ;;		_i2c_stop
  6295 ;;		_i2c_rep_start
  6296 ;;		_i2c_write
  6297 ;;		_i2c_rx_mode
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text44
  6302   0014CC                     __ptext44:
  6303                           	callstack 0
  6304   0014CC                     _i2c_idle:
  6305                           	callstack 25
  6306                           
  6307                           ;i2c.c: 24: while (!SSPIF);
  6308                           
  6309                           ;incstack = 0
  6310   0014CC  A69E               	btfss	3998,3,c	;volatile
  6311   0014CE  D7FE               	goto	__ptext44
  6312                           
  6313                           ;i2c.c: 25: SSPIF = 0;
  6314   0014D0  969E               	bcf	3998,3,c	;volatile
  6315   0014D2  0012               	return		;funcret
  6316   0014D4                     __end_of_i2c_idle:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _i2c_no_ack *****************
  6320 ;; Defined at:
  6321 ;;		line 66 in file "i2c.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		None
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6335 ;;      Params:         0       0       0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0
  6338 ;;      Totals:         0       0       0       0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; Hardware stack levels required when called: 1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_i2c_read
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text45
  6350   0014D4                     __ptext45:
  6351                           	callstack 0
  6352   0014D4                     _i2c_no_ack:
  6353                           	callstack 25
  6354                           
  6355                           ;i2c.c: 68: ACKDT = 1;
  6356                           
  6357                           ;incstack = 0
  6358   0014D4  8AC5               	bsf	4037,5,c	;volatile
  6359                           
  6360                           ;i2c.c: 69: ACKEN = 1;
  6361   0014D6  88C5               	bsf	4037,4,c	;volatile
  6362   0014D8  0012               	return		;funcret
  6363   0014DA                     __end_of_i2c_no_ack:
  6364                           	callstack 0
  6365                           
  6366 ;; *************** function _puts *****************
  6367 ;; Defined at:
  6368 ;;		line 93 in file "uart.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  s               2    1[COMRAM] PTR const unsigned char 
  6371 ;;		 -> STR_10(3), Download_log@down_array(15), 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  2    1[COMRAM] int 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6383 ;;      Params:         2       0       0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0
  6386 ;;      Totals:         2       0       0       0       0       0       0
  6387 ;;Total ram usage:        2 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 2
  6390 ;; This function calls:
  6391 ;;		_putch
  6392 ;; This function is called by:
  6393 ;;		_Download_log
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text46
  6398   000FB0                     __ptext46:
  6399                           	callstack 0
  6400   000FB0                     _puts:
  6401                           	callstack 26
  6402                           
  6403                           ;uart.c: 95: while(*s)
  6404                           
  6405                           ;incstack = 0
  6406   000FB0  D014               	goto	l2723
  6407   000FB2                     l2719:
  6408                           
  6409                           ;uart.c: 96: {;uart.c: 97: putch(*s++);
  6410   000FB2  C035  FFF6         	movff	puts@s,tblptrl
  6411   000FB6  C036  FFF7         	movff	puts@s+1,tblptrh
  6412   000FBA  6AF8               	clrf	tblptru,c
  6413   000FBC  0E05               	movlw	(high __ramtop+-1)
  6414   000FBE  64F7               	cpfsgt	tblptrh,c
  6415   000FC0  D003               	bra	u1887
  6416   000FC2  0008               	tblrd		*
  6417   000FC4  50F5               	movf	tablat,w,c
  6418   000FC6  D005               	bra	u1880
  6419   000FC8                     u1887:
  6420   000FC8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6421   000FCC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6422   000FD0  50EF               	movf	indf0,w,c
  6423   000FD2                     u1880:
  6424   000FD2  EC50  F00A         	call	_putch
  6425   000FD6  4A35               	infsnz	puts@s^0,f,c
  6426   000FD8  2A36               	incf	(puts@s+1)^0,f,c
  6427   000FDA                     l2723:
  6428   000FDA  C035  FFF6         	movff	puts@s,tblptrl
  6429   000FDE  C036  FFF7         	movff	puts@s+1,tblptrh
  6430   000FE2  6AF8               	clrf	tblptru,c
  6431   000FE4  0E05               	movlw	(high __ramtop+-1)
  6432   000FE6  64F7               	cpfsgt	tblptrh,c
  6433   000FE8  D003               	bra	u1897
  6434   000FEA  0008               	tblrd		*
  6435   000FEC  50F5               	movf	tablat,w,c
  6436   000FEE  D005               	bra	u1890
  6437   000FF0                     u1897:
  6438   000FF0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6439   000FF4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6440   000FF8  50EF               	movf	indf0,w,c
  6441   000FFA                     u1890:
  6442   000FFA  0900               	iorlw	0
  6443   000FFC  B4D8               	btfsc	status,2,c
  6444   000FFE  0012               	return	
  6445   001000  D7D8               	goto	l2719
  6446   001002                     __end_of_puts:
  6447                           	callstack 0
  6448                           
  6449 ;; *************** function _putch *****************
  6450 ;; Defined at:
  6451 ;;		line 80 in file "uart.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;  byte            1    wreg     unsigned char 
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;  byte            1    0[COMRAM] unsigned char 
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6465 ;;      Params:         0       0       0       0       0       0       0
  6466 ;;      Locals:         1       0       0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0
  6468 ;;      Totals:         1       0       0       0       0       0       0
  6469 ;;Total ram usage:        1 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; Hardware stack levels required when called: 1
  6472 ;; This function calls:
  6473 ;;		Nothing
  6474 ;; This function is called by:
  6475 ;;		_puts
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text47
  6480   0014A0                     __ptext47:
  6481                           	callstack 0
  6482   0014A0                     _putch:
  6483                           	callstack 26
  6484                           
  6485                           ;incstack = 0
  6486                           ;putch@byte stored from wreg
  6487   0014A0  6E34               	movwf	putch@byte^0,c
  6488   0014A2                     
  6489                           ;uart.c: 84: while(!TXIF)
  6490   0014A2  A89E               	btfss	3998,4,c	;volatile
  6491   0014A4  D7FE               	goto	l2637
  6492                           
  6493                           ;uart.c: 87: };uart.c: 88: TXREG = byte;
  6494   0014A6  C034  FFAD         	movff	putch@byte,4013	;volatile
  6495   0014AA  0012               	return		;funcret
  6496   0014AC                     __end_of_putch:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _clcd_print *****************
  6500 ;; Defined at:
  6501 ;;		line 42 in file "clcd.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  data            2    6[COMRAM] PTR const unsigned char 
  6504 ;;		 -> STR_20(17), STR_19(17), Event1(27), STR_18(15), 
  6505 ;;		 -> STR_17(14), STR_16(17), STR_15(19), STR_14(15), 
  6506 ;;		 -> STR_13(18), STR_12(17), time(9), STR_11(19), 
  6507 ;;		 -> STR_9(13), STR_8(12), STR_7(14), STR_6(5), 
  6508 ;;		 -> view_menu@view_array(102), STR_5(17), STR_4(17), STR_3(16), 
  6509 ;;		 -> STR_2(17), STR_1(15), 
  6510 ;;  addr            1    8[COMRAM] unsigned char 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;		None
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  1    wreg      void 
  6515 ;; Registers used:
  6516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6522 ;;      Params:         3       0       0       0       0       0       0
  6523 ;;      Locals:         0       0       0       0       0       0       0
  6524 ;;      Temps:          0       0       0       0       0       0       0
  6525 ;;      Totals:         3       0       0       0       0       0       0
  6526 ;;Total ram usage:        3 bytes
  6527 ;; Hardware stack levels used: 1
  6528 ;; Hardware stack levels required when called: 2
  6529 ;; This function calls:
  6530 ;;		_clcd_write
  6531 ;; This function is called by:
  6532 ;;		_Enter_password
  6533 ;;		_view_menu
  6534 ;;		_view_log
  6535 ;;		_clear_log
  6536 ;;		_Download_log
  6537 ;;		_set_time
  6538 ;;		_change_password
  6539 ;;		_display_event
  6540 ;;		_display_time
  6541 ;;		_init_config
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text48
  6546   000EAA                     __ptext48:
  6547                           	callstack 0
  6548   000EAA                     _clcd_print:
  6549                           	callstack 27
  6550                           
  6551                           ;clcd.c: 44: clcd_write(addr, 0);
  6552                           
  6553                           ;incstack = 0
  6554   000EAA  0E00               	movlw	0
  6555   000EAC  6E34               	movwf	clcd_write@control_bit^0,c
  6556   000EAE  503C               	movf	clcd_print@addr^0,w,c
  6557   000EB0  ECBE  F009         	call	_clcd_write
  6558                           
  6559                           ;clcd.c: 45: while (*data != '\0')
  6560   000EB4  D016               	goto	l2671
  6561   000EB6                     l2667:
  6562                           
  6563                           ;clcd.c: 46: {;clcd.c: 47: clcd_write(*data++, 1);
  6564   000EB6  0E01               	movlw	1
  6565   000EB8  6E34               	movwf	clcd_write@control_bit^0,c
  6566   000EBA  C03A  FFF6         	movff	clcd_print@data,tblptrl
  6567   000EBE  C03B  FFF7         	movff	clcd_print@data+1,tblptrh
  6568   000EC2  6AF8               	clrf	tblptru,c
  6569   000EC4  0E05               	movlw	(high __ramtop+-1)
  6570   000EC6  64F7               	cpfsgt	tblptrh,c
  6571   000EC8  D003               	bra	u1807
  6572   000ECA  0008               	tblrd		*
  6573   000ECC  50F5               	movf	tablat,w,c
  6574   000ECE  D005               	bra	u1800
  6575   000ED0                     u1807:
  6576   000ED0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6577   000ED4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6578   000ED8  50EF               	movf	indf0,w,c
  6579   000EDA                     u1800:
  6580   000EDA  ECBE  F009         	call	_clcd_write
  6581   000EDE  4A3A               	infsnz	clcd_print@data^0,f,c
  6582   000EE0  2A3B               	incf	(clcd_print@data+1)^0,f,c
  6583   000EE2                     l2671:
  6584   000EE2  C03A  FFF6         	movff	clcd_print@data,tblptrl
  6585   000EE6  C03B  FFF7         	movff	clcd_print@data+1,tblptrh
  6586   000EEA  6AF8               	clrf	tblptru,c
  6587   000EEC  0E05               	movlw	(high __ramtop+-1)
  6588   000EEE  64F7               	cpfsgt	tblptrh,c
  6589   000EF0  D003               	bra	u1817
  6590   000EF2  0008               	tblrd		*
  6591   000EF4  50F5               	movf	tablat,w,c
  6592   000EF6  D005               	bra	u1810
  6593   000EF8                     u1817:
  6594   000EF8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6595   000EFC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6596   000F00  50EF               	movf	indf0,w,c
  6597   000F02                     u1810:
  6598   000F02  0900               	iorlw	0
  6599   000F04  B4D8               	btfsc	status,2,c
  6600   000F06  0012               	return	
  6601   000F08  D7D6               	goto	l2667
  6602   000F0A                     __end_of_clcd_print:
  6603                           	callstack 0
  6604                           
  6605 ;; *************** function _clcd_write *****************
  6606 ;; Defined at:
  6607 ;;		line 4 in file "clcd.c"
  6608 ;; Parameters:    Size  Location     Type
  6609 ;;  byte            1    wreg     unsigned char 
  6610 ;;  control_bit     1    0[COMRAM] unsigned char 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;  byte            1    1[COMRAM] unsigned char 
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6622 ;;      Params:         1       0       0       0       0       0       0
  6623 ;;      Locals:         1       0       0       0       0       0       0
  6624 ;;      Temps:          0       0       0       0       0       0       0
  6625 ;;      Totals:         2       0       0       0       0       0       0
  6626 ;;Total ram usage:        2 bytes
  6627 ;; Hardware stack levels used: 1
  6628 ;; Hardware stack levels required when called: 1
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_Enter_password
  6633 ;;		_view_menu
  6634 ;;		_view_log
  6635 ;;		_clear_log
  6636 ;;		_change_password
  6637 ;;		_init_config
  6638 ;;		_init_clcd
  6639 ;;		_clcd_print
  6640 ;;		_clcd_putch
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text49
  6645   00137C                     __ptext49:
  6646                           	callstack 0
  6647   00137C                     _clcd_write:
  6648                           	callstack 28
  6649                           
  6650                           ;incstack = 0
  6651                           ;clcd_write@byte stored from wreg
  6652   00137C  6E35               	movwf	clcd_write@byte^0,c
  6653                           
  6654                           ;clcd.c: 6: RC1 = control_bit;
  6655   00137E  A034               	btfss	clcd_write@control_bit^0,0,c
  6656   001380  D002               	goto	u1630
  6657   001382  8282               	bsf	3970,1,c	;volatile
  6658   001384  D001               	goto	u1645
  6659   001386                     u1630:
  6660   001386  9282               	bcf	3970,1,c	;volatile
  6661   001388                     u1645:
  6662                           
  6663                           ;clcd.c: 7: PORTD = byte;
  6664   001388  C035  FF83         	movff	clcd_write@byte,3971	;volatile
  6665                           
  6666                           ;clcd.c: 10: RC2 = 1;
  6667   00138C  8482               	bsf	3970,2,c	;volatile
  6668                           
  6669                           ;clcd.c: 11: RC2 = 0;
  6670   00138E  9482               	bcf	3970,2,c	;volatile
  6671                           
  6672                           ;clcd.c: 13: TRISD7 = 0xFF;
  6673   001390  8E95               	bsf	3989,7,c	;volatile
  6674                           
  6675                           ;clcd.c: 14: RC0 = 1;
  6676   001392  8082               	bsf	3970,0,c	;volatile
  6677                           
  6678                           ;clcd.c: 15: RC1 = 0;
  6679   001394  9282               	bcf	3970,1,c	;volatile
  6680   001396                     l2545:
  6681                           
  6682                           ;clcd.c: 18: {;clcd.c: 19: RC2 = 1;
  6683   001396  8482               	bsf	3970,2,c	;volatile
  6684                           
  6685                           ;clcd.c: 20: RC2 = 0;
  6686   001398  9482               	bcf	3970,2,c	;volatile
  6687                           
  6688                           ;clcd.c: 21: } while (RD7);
  6689   00139A  BE83               	btfsc	3971,7,c	;volatile
  6690   00139C  D7FC               	goto	l2545
  6691                           
  6692                           ;clcd.c: 23: RC0 = 0;
  6693   00139E  9082               	bcf	3970,0,c	;volatile
  6694                           
  6695                           ;clcd.c: 24: TRISD7 = 0x00;
  6696   0013A0  9E95               	bcf	3989,7,c	;volatile
  6697   0013A2  0012               	return		;funcret
  6698   0013A4                     __end_of_clcd_write:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _isr *****************
  6702 ;; Defined at:
  6703 ;;		line 9 in file "isr.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;		None
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  1    wreg      void 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6717 ;;      Params:         0       0       0       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0
  6720 ;;      Totals:         0       0       0       0       0       0       0
  6721 ;;Total ram usage:        0 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		Interrupt level 2
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	intcode
  6731   000008                     __pintcode:
  6732                           	callstack 0
  6733   000008                     _isr:
  6734                           	callstack 24
  6735                           
  6736                           ;incstack = 0
  6737   000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6738   00000A  EDA9  F009         	call	int_func,f	;refresh shadow registers
  6739                           
  6740                           	psect	intcode_body
  6741   001352                     __pintcode_body:
  6742                           	callstack 24
  6743   001352                     int_func:
  6744                           	callstack 24
  6745   001352  0006               	pop		; remove dummy address from shadow register refresh
  6746                           
  6747                           ;isr.c: 11: static unsigned short for_minute;;isr.c: 12: static unsigned short count;;is
      +                          r.c: 14: if (TMR2IF)
  6748   001354  A29E               	btfss	3998,1,c	;volatile
  6749   001356  D00F               	goto	i2l3581
  6750                           
  6751                           ;isr.c: 15: {;isr.c: 16: if (count++ == 20000)
  6752   001358  4A04               	infsnz	isr@count^0,f,c
  6753   00135A  2A05               	incf	(isr@count+1)^0,f,c
  6754   00135C  0E21               	movlw	33
  6755   00135E  1804               	xorwf	isr@count^0,w,c
  6756   001360  E10A               	bnz	i2l3581
  6757   001362  0E4E               	movlw	78
  6758   001364  1805               	xorwf	(isr@count+1)^0,w,c
  6759   001366  A4D8               	btfss	status,2,c
  6760   001368  D006               	goto	i2l3581
  6761                           
  6762                           ;isr.c: 17: {;isr.c: 18: blink++;
  6763   00136A  4A06               	infsnz	_blink^0,f,c
  6764   00136C  2A07               	incf	(_blink+1)^0,f,c
  6765                           
  6766                           ;isr.c: 19: count = 0;
  6767   00136E  0E00               	movlw	0
  6768   001370  6E05               	movwf	(isr@count+1)^0,c
  6769   001372  0E00               	movlw	0
  6770   001374  6E04               	movwf	isr@count^0,c
  6771   001376                     i2l3581:
  6772                           
  6773                           ;isr.c: 20: };isr.c: 21: };isr.c: 22: TMR2IF = 0;
  6774   001376  929E               	bcf	3998,1,c	;volatile
  6775   001378  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6776   00137A  0011               	retfie		f
  6777   00137C                     __end_of_isr:
  6778                           	callstack 0
  6779                           
  6780                           	psect	rparam
  6781   000000                     
  6782                           	psect	temp
  6783   00005F                     btemp:
  6784                           	callstack 0
  6785   00005F                     	ds	1
  6786   000000                     int$flags	set	btemp
  6787   000000                     wtemp8	set	btemp+1
  6788   000000                     ttemp5	set	btemp+1
  6789   000000                     ttemp6	set	btemp+4
  6790   000000                     ttemp7	set	btemp+8
  6791                           tosu	equ	0xFFF
  6792                           tosh	equ	0xFFE
  6793                           tosl	equ	0xFFD
  6794                           stkptr	equ	0xFFC
  6795                           pclatu	equ	0xFFB
  6796                           pclath	equ	0xFFA
  6797                           pcl	equ	0xFF9
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           prodh	equ	0xFF4
  6803                           prodl	equ	0xFF3
  6804                           indf0	equ	0xFEF
  6805                           postinc0	equ	0xFEE
  6806                           postdec0	equ	0xFED
  6807                           preinc0	equ	0xFEC
  6808                           plusw0	equ	0xFEB
  6809                           fsr0h	equ	0xFEA
  6810                           fsr0l	equ	0xFE9
  6811                           wreg	equ	0xFE8
  6812                           indf1	equ	0xFE7
  6813                           postinc1	equ	0xFE6
  6814                           postdec1	equ	0xFE5
  6815                           preinc1	equ	0xFE4
  6816                           plusw1	equ	0xFE3
  6817                           fsr1h	equ	0xFE2
  6818                           fsr1l	equ	0xFE1
  6819                           bsr	equ	0xFE0
  6820                           indf2	equ	0xFDF
  6821                           postinc2	equ	0xFDE
  6822                           postdec2	equ	0xFDD
  6823                           preinc2	equ	0xFDC
  6824                           plusw2	equ	0xFDB
  6825                           fsr2h	equ	0xFDA
  6826                           fsr2l	equ	0xFD9
  6827                           status	equ	0xFD8

Data Sizes:
    Strings     280
    Constant    0
    Data        131
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      94
    BANK0           160      0      67
    BANK1           256      0     102
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 102
		 -> STR_20(CODE[17]), STR_19(CODE[17]), Event1(BANK0[27]), STR_18(CODE[15]), 
		 -> STR_17(CODE[14]), STR_16(CODE[17]), STR_15(CODE[19]), STR_14(CODE[15]), 
		 -> STR_13(CODE[18]), STR_12(CODE[17]), time(BANK0[9]), STR_11(CODE[19]), 
		 -> STR_9(CODE[13]), STR_8(CODE[12]), STR_7(CODE[14]), STR_6(CODE[5]), 
		 -> view_menu@view_array(BANK1[102]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), STR_1(CODE[15]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[3]), Download_log@down_array(COMRAM[15]), 

    set_time@change_time	PTR unsigned char  size(1) Largest target is 9
		 -> time(BANK0[9]), 


Critical Paths under _main in COMRAM

    _view_menu->_clcd_print
    _view_menu->_clcd_putch
    _init_config->_clcd_print
    _init_ds1307->_read_ds1307
    _init_ds1307->_write_ds1307
    _init_clcd->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_write
    _display_time->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft
    _display_event->_clcd_print
    _store_event->___lwdiv
    _store_external_eeprom->_write_external_eeprom
    _Enter_password->_clcd_print
    _Enter_password->_clcd_putch
    _Enter_menu->_Download_log
    _view_log->_clcd_print
    _view_log->_clcd_putch
    _set_time->_clcd_print
    _write_ds1307->_i2c_write
    _clear_log->_clcd_print
    _change_password->_clcd_print
    _change_password->_clcd_putch
    _write_external_eeprom->_i2c_write
    _clcd_putch->___lwdiv
    _Download_log->_clcd_print
    _read_external_eeprom->_i2c_write
    _puts->_putch
    _clcd_print->___wmul

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   83077
                         _Enter_menu
                     _Enter_password
                       _change_event
                      _display_event
                       _display_time
                           _get_time
                        _init_config
                      _read_switches
                          _view_menu
 ---------------------------------------------------------------------------------
 (1) _view_menu                                            1     1      0    8823
                                              9 COMRAM     1     1      0
                             ___wmul
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     139
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0    8229
                         _clcd_print
                         _clcd_write
                           _init_adc
                          _init_clcd
                        _init_ds1307
                           _init_i2c
                 _init_matrix_keypad
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          1     1      0     734
                                              3 COMRAM     1     1      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0    1260
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             0     0      0      67
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _display_time                                         0     0      0   14683
                            ___ftdiv
                            ___fttol
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
                         _clcd_print
                         _clcd_putch
                           _read_adc
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2864
                                              8 COMRAM     3     0      3
                           ___ftpack
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                             26 COMRAM    15    11      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3326
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2766
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _display_event                                        1     1      0    4975
                                              9 COMRAM     1     1      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (1) _change_event                                         1     1      0    1393
                                              7 COMRAM     1     1      0
                      _read_switches
                        _store_event
 ---------------------------------------------------------------------------------
 (2) _store_event                                          0     0      0    1260
                            ___lwdiv
                            ___lwmod
              _store_external_eeprom
 ---------------------------------------------------------------------------------
 (3) _store_external_eeprom                                1     1      0     331
                                              5 COMRAM     1     1      0
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Enter_password                                      10    10      0    8726
                                              9 COMRAM     8     8      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (1) _Enter_menu                                           0     0      0   36131
                       _Download_log
                    _change_password
                          _clear_log
                           _set_time
                           _view_log
 ---------------------------------------------------------------------------------
 (2) _view_log                                             6     6      0    8832
                                              9 COMRAM     5     5      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
               _read_external_eeprom
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _set_time                                            10    10      0    6699
                                              9 COMRAM    10    10      0
                            ___lbmod
                         _clcd_print
                      _read_switches
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     598
                                              1 COMRAM     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     235
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _clear_log                                            3     3      0    6326
                                              9 COMRAM     3     3      0
                         _clcd_print
                         _clcd_write
                      _read_switches
 ---------------------------------------------------------------------------------
 (2) _change_password                                      9     9      0    8918
                                              9 COMRAM     9     9      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                      _read_switches
              _write_external_eeprom
 ---------------------------------------------------------------------------------
 (4) _write_external_eeprom                                4     3      1     241
                                              1 COMRAM     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _read_switches                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _scan_key
 ---------------------------------------------------------------------------------
 (3) _scan_key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    2216
                                              7 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _Download_log                                        18    18      0    5356
                                              9 COMRAM    18    18      0
                         _clcd_print
                               _puts
               _read_external_eeprom
 ---------------------------------------------------------------------------------
 (2) _read_external_eeprom                                 2     2      0      67
                                              1 COMRAM     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             0     0      0       0
                         _i2c_no_ack
                        _i2c_rx_mode
 ---------------------------------------------------------------------------------
 (5) _i2c_rx_mode                                          0     0      0       0
                           _i2c_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_idle                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_no_ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _puts                                                 2     0      2     219
                                              1 COMRAM     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    4975
                                              6 COMRAM     3     0      3
                             ___wmul (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_write                                           2     1      1    1260
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Enter_menu
     _Download_log
       _clcd_print
         ___wmul (ARG)
         _clcd_write (ARG)
       _puts
         _putch
       _read_external_eeprom
         _i2c_read
           _i2c_no_ack
           _i2c_rx_mode
             _i2c_idle
         _i2c_rep_start
           _i2c_idle
         _i2c_start
           _i2c_idle
         _i2c_stop
           _i2c_idle
         _i2c_write
           _i2c_idle
     _change_password
       _clcd_print
       _clcd_putch
         ___lwdiv (ARG)
         ___lwmod (ARG)
         _clcd_write (ARG)
       _clcd_write
       _read_switches
         _scan_key
       _write_external_eeprom
         _i2c_start
         _i2c_stop
         _i2c_write
     _clear_log
       _clcd_print
       _clcd_write
       _read_switches
     _set_time
       ___lbmod
       _clcd_print
       _read_switches
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _view_log
       _clcd_print
       _clcd_putch
       _clcd_write
       _read_external_eeprom
       _read_switches
   _Enter_password
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_external_eeprom
     _read_switches
   _change_event
     _read_switches
     _store_event
       ___lwdiv
       ___lwmod
       _store_external_eeprom
         _write_external_eeprom
   _display_event
     _clcd_print
   _display_time
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         _read_adc (ARG)
       _read_adc (ARG)
     ___fttol
       ___ftdiv (ARG)
       ___lwtoft (ARG)
       _read_adc (ARG)
     ___lwdiv
     ___lwmod
     ___lwtoft
     _clcd_print
     _clcd_putch
     _read_adc
   _get_time
     _read_ds1307
       _i2c_read
       _i2c_rep_start
       _i2c_start
       _i2c_stop
       _i2c_write
   _init_config
     _clcd_print
     _clcd_write
     _init_adc
     _init_clcd
       _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
     _init_i2c
     _init_matrix_keypad
     _init_uart
   _read_switches
   _view_menu
     ___wmul
     _clcd_print
     _clcd_putch
     _clcd_write
     _read_switches

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
BITBIGSFRlll       281      0       0      24        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      66       7       39.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      43       5       41.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      5E       1      100.0%
BITBIGSFRhhhhhl     25      0       0      17        0.0%
BITBIGSFRllh         F      0       0      23        0.0%
BITBIGSFRhhhhhh      E      0       0      16        0.0%
BITBIGSFRlhhhl       9      0       0      20        0.0%
BITBIGSFRlhhhhl      8      0       0      19        0.0%
BITBIGSFRlhhhhh      7      0       0      18        0.0%
BITBIGSFRlhl         7      0       0      22        0.0%
BITBIGSFRlhhl        2      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      25        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 30 16:20:01 2023

                            _d 005E          _write_external_eeprom 120C                 clcd_print@addr 003C  
               clcd_print@data 003A                             l36 11B2                             _GO 7E11  
       Download_log@down_array 003D            ___wmul@multiplicand 0036             _init_matrix_keypad 1476  
                          l311 01CC                            l320 02A0                            l316 0240  
                          l460 0D30                            l452 0D0A                            l461 0D48  
                          l470 0D70                            l462 0D38                            l454 0D22  
                          l471 0D68                            l455 0D12                            l464 0D40  
                          l457 0D1A                            l467 0D58                            l469 0D60  
                          _CKE 7E3E                            l979 0922                            _RC0 7C10  
                          _RC1 7C11                            _RC2 7C12                            _RD7 7C1F  
                          _PR2 0FCB                            _PEN 7E2A                            _SEN 7E28  
                          _RX9 7D5E                            _SMP 7E3F                            _TX9 7D66  
                ?_display_time 0034                            _WUE 7DC1                Enter_password@i 003F  
                          _isr 0008           __end_of_change_event 0EAA                 clcd_putch@addr 003B  
               clcd_putch@data 003C                            wreg 0FE8            ?_init_matrix_keypad 0034  
                 ___ftdiv@cntr 0048                   ___ftdiv@sign 004D                           l1117 0FA6  
                         l1127 1114                           l3011 0060                           l3023 0092  
                         l3007 0054                           l3123 0386                           l3107 0336  
                         l3115 035A                           l3045 0152                           l3053 0172  
                         l3301 09F8                           l3071 0204                           l3047 0156  
                         l3231 08BE                           l3137 03D2                           l3225 0896  
                         l3163 0456                           l3171 0476                           l3147 03F8  
                         l3323 04E8                           l3251 08FC                           l3307 0A14  
                         l3165 045A                           l3501 0E9C                           l3175 0490  
                         l3079 0262                           l3087 02C2                           l3271 0980  
                         l2545 1396                           l3177 0494                           l3345 0532  
                         l3337 0516                           l2801 0F74                           l3601 0686  
                         l2723 0FDA                           l2563 1230                           l3451 1054  
                         l3347 053A                           l2803 0F7C                           l2731 127A  
                         l2637 14A2                           l3453 105A                           l3357 057C  
                         l3349 054C                           l3381 05FC                           l2813 0F9C  
                         l2821 10EA                           l3293 09E4                           l3613 06B0  
                         l2671 0EE2                           l2719 0FB2                           l3455 1060  
                         l3463 1074                           l2823 10F2                           l2751 0A44  
                         l3519 0D98                           l3631 06F2                           l3615 06BA  
                         l2921 083A                           l2913 081A                           l3457 1066  
                         l3449 104E                           l2761 0AA0                           l2753 0A4E  
                         l3289 09D4                           l3641 071C                           l2667 0EB6  
                         l2691 118A                           l2923 0844                           l3379 05F6  
                         l3483 0E6C                           l2763 0AAA                           l2755 0A6C  
                         l3299 09EC                           l3627 06E6                           l2781 1308  
                         l2909 080E                           l2829 110A                           l3493 0E88  
                         l2687 117E                           l3495 0E8E                           l3479 0E5E  
                         l2759 0A82                           l3639 0712                           l3655 1006  
                         l2697 1196                           l3489 0E80                           l3673 1030  
                         l2963 0B7A                           l2947 0F42                           l2883 07A2  
                         l2789 1320                           l2893 07C8                           l2869 0758  
                         l3677 103E                           l3669 1024                           l2895 07D8  
                         l2887 07AE                           l2879 078C                           l2985 0BD4  
                         l2969 0B7E                           l2897 07E2                           l2987 0BD8  
                         _ADFM 7E07                           ?_isr 0034                           _ADON 7E10  
                         STR_1 2F95                           STR_2 2F30                           STR_3 2F85  
                         STR_4 2F1F                           STR_5 2F52                           STR_6 2FF7  
                         STR_7 2FC2                           STR_8 2FEB                           STR_9 2FDE  
                         _BRGH 7D62                           _CREN 7D5C                           _FERR 7D5A  
                         u2030 0F80                           _CSRC 7D67                           u2060 10F6  
                         u2150 07D8                           u2320 0BE0                           u2410 015E  
                         u1630 1386                           u1800 0EDA                 ?_display_event 0034  
                         u1810 0F02                           u2610 0366                           u2291 0B70  
                         u2700 049C                           u1645 1388                           u1807 0ED0  
                         u1817 0EF8                           u2721 087E          ?_read_external_eeprom 0034  
                         u1940 0A36                           u2741 08A6                           u2830 09FE  
       __end_of_Enter_password 060E                           u1880 0FD2                           u2680 0462  
                         u1890 0FFA                           u2771 0964                           u1980 0AB4  
                         u2780 096E                           u2790 099E                           u1887 0FC8  
                         u1897 0FF0                           u2795 0996                           _RCIE 7CED  
                         _RCEN 7E2B                           _RCIF 7CF5                           _OERR 7D59  
                         _SCKP 7DC4                           _RBPU 7F8F                           _RX9D 7D58  
                         _SPEN 7D5F                           _RSEN 7E29                           _TX9D 7D60  
                         _SREN 7D5D                           _TRMT 7D61                           _TXIE 7CEC  
                         _TXEN 7D65                           _TXIF 7CF4                           _SYNC 7D64  
                         _flag 0031                           _main 1002                   ___ftpack@arg 0034  
                 ___ftpack@exp 0037                           _time 007F                           fsr0h 0FEA  
                         indf0 0FEF                           fsr2h 0FDA                           fsr0l 0FE9  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005F                           _puts 0FB0        ??_store_external_eeprom 0039  
                         prodh 0FF4                           prodl 0FF3                           start 000E  
         ??_init_matrix_keypad 0034                  ?_Download_log 0034                   ___param_bank 0000  
               clcd_write@byte 0035                    _store_event 0BF6                  _i2c_rep_start 14BC  
                ??_i2c_rx_mode 0034                   ___fttol@exp1 005C                   ___fttol@lval 0058  
                        ??_isr 0034                   ?_init_ds1307 0034                          _ABDEN 7DC0  
                        _ADCS0 7E00                          _ADCS1 7E01                          _ADCS2 7E02  
                        _ADDEN 7D5B                          ?_main 0034                   ?_read_ds1307 0034  
                        _ACKEN 7E2C                          _ACKDT 7E2D                 ??_display_time 005D  
                        _BCLIF 7D0B                          _ACQT0 7E03                          _ACQT1 7E04  
                        _ACQT2 7E05                          STR_10 2FFC                          STR_11 2EE7  
                        STR_20 2F63                          STR_12 2F41                          STR_13 2F0D  
                        STR_14 2FB3                          STR_15 2EFA                          STR_16 2F74  
                        _BRG16 7DC3                          STR_17 2FD0                          STR_18 2FA4  
                        STR_19 2F63                __end_of___lbmod 1328                __end_of___ftdiv 0954  
                        ?_puts 0035                __end_of___fttol 0A26                __end_of___lwdiv 0FB0  
              __end_of___lwmod 111E                   ?_init_config 0034                          _RCIDL 7DC6  
                        _VCFG0 7E0C                          _VCFG1 7E0D                          _RCREG 0FAE  
                        _SENDB 7D63            set_time@change_time 0046                          _SPBRG 0FAF  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISB 0F93  
                        _TRISC 0F94                          _TRISD 0F95                          _SSPIF 7CF3  
                        _TXREG 0FAD      write_external_eeprom@data 0035                          _blink 0006  
                        _count 0032                          _event 0033              Enter_password@key 0043  
                ___ftpack@sign 0038                          _speed 0024                   view_log@menu 0016  
                        _putch 14A0                _change_password 02E2                   view_menu@key 003D  
              ?_Enter_password 0034                          tablat 0FF5                          puts@s 0035  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 0FD8                          wtemp8 0060                     _Enter_menu 104C  
             init_ds1307@dummy 0037                 ??_Download_log 003D                     _i2c_no_ack 14D4  
              __initialization 0C7E                 ?_i2c_rep_start 0034         ?_write_external_eeprom 0035  
                 __end_of_main 104C                   __end_of_puts 1002               __end_of_i2c_idle 14D4  
             __end_of_i2c_read 14A0               __end_of_i2c_stop 14B4                         ??_main 005D  
                ___fttol@sign1 0057                         ??_puts 0037                  __activetblptr 0002  
          __end_of_i2c_rx_mode 14CC                ??_display_event 003D                         _ADCON0 0FC2  
                       _ADCON1 0FC1                         _ABDOVF 7DC7               read_switches@key 0026  
       ??_read_external_eeprom 0035                         _ADRESH 0FC4                         _ADRESL 0FC3  
                       ?_putch 0034               __end_of___ftpack 0AD4                         _GODONE 7E11  
                       i2l3581 1376               __end_of___lwtoft 13EE                   _write_ds1307 140E  
                       _TMR2IF 7CF1                         _TMR2ON 7E52                         _SSPADD 0FC8  
                       _TRISC3 7CA3                         _TRISC4 7CA4                         _TRISC6 7CA6  
                       _TRISC7 7CA7                         _TRISD7 7CAF                         _SSPBUF 0FC9  
                       _Event1 0088               __end_of_get_time 0DDE                         ___wmul 13A4  
                    ??___lbmod 0035                      ??___ftdiv 0045                      ??___fttol 0052  
                    ??___lwdiv 0038                      ??___lwmod 0038               __end_of_init_i2c 1476  
             __end_of_init_adc 140E               __end_of_read_adc 11D6                         clear_0 0CDC  
                       clear_1 0CE8             Enter_password@wait 0041                         isa$std 0001  
             __end_of_scan_key 0D74          change_password@choice 000E                  view_menu@menu 0020  
                 __pdataCOMRAM 005D        __end_of_change_password 04C2               __end_of_set_time 02E2  
                 __mediumconst 2EE6                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8               __end_of_view_log 086E                ___lbmod@divisor 0034  
                   __accesstop 0060        __end_of__initialization 0CEE                ___lbmod@counter 0036  
                  ?_Enter_menu 0034           __end_of_display_time 0B6A                  ___rparam_used 0001  
                   ___ftdiv@f1 003F                     ___ftdiv@f2 0042                     ___ftdiv@f3 0049  
              ??_i2c_rep_start 0034                   _change_event 0E44                    ?_i2c_no_ack 0034  
           Download_log@F10428 0060                     ___fttol@f1 004E                 __pcstackCOMRAM 0034  
                 __pidataBANK0 142C                   __pidataBANK1 0DDE                change_event@key 003B  
                  _i2c_rx_mode 14C4                  __end_of_putch 14AC                     ___lwtoft@c 003C  
            __end_of_i2c_start 14BC              __end_of_i2c_write 1494           __end_of_Download_log 0BF6  
                      ??_putch 0034                     __pbssBANK0 0060         write_external_eeprom@i 0036  
                    ?_i2c_idle 0034                      ?_i2c_read 0034                      ?_i2c_stop 0034  
                   _clcd_print 0EAA                     _clcd_putch 1448                     _clcd_write 137C  
__end_of_store_external_eeprom 12AA                     _clear_flag 0030   write_external_eeprom@address 0038  
                 ?_store_event 0034                read_ds1307@data 0036                        ?___wmul 0034  
            read_switches@once 005D                        _ACKSTAT 7E2E                      ?___ftpack 0034  
                    ?___lwtoft 003C               ?_change_password 0034               ??_Enter_password 003D  
                      _SSPCON1 0FC6                      ?_get_time 0034                  _read_switches 115C  
                   ??_i2c_idle 0034                     ??_i2c_read 0034                     ??_i2c_stop 0034  
                    ?_init_i2c 0034                      ?_init_adc 0034                      ?_read_adc 0034  
            __end_of_clear_log 0F5E                      ?_scan_key 0034        ??_write_external_eeprom 0036  
                      __Hparam 0000                        __Lparam 0000                      ?_set_time 0034  
           change_password@key 0045                        ___lbmod 12FE                      ?_view_log 0034  
                      ___ftdiv 086E                        ___fttol 0954                        ___lwdiv 0F5E  
                      ___lwmod 10DC                        __pcinit 0C7E                     ??___ftpack 0039  
                Download_log@b 0028                  Download_log@i 0029                  Download_log@j 004C  
                Download_log@k 004E                        __ramtop 0600                        __ptext0 1002  
                      __ptext1 060E                        __ptext2 13A4                        __ptext3 1242  
                      __ptext4 111E                        __ptext5 1476                        __ptext6 1460  
                      __ptext7 1096                        __ptext8 11D6                        __ptext9 13EE  
              read_adc@CHANNEL 003A                     ??___lwtoft 003F              __end_of_init_clcd 120C  
            __end_of_init_uart 115C            Enter_password@count 0044            Enter_password@input 002A  
               ?_read_switches 0034                 view_log@value1 001A                 view_log@value2 0018  
                   ??_get_time 0037                 __pintcode_body 1352           end_of_initialization 0CEE  
       change_password@re_pass 0010                    set_time@cal 0014                    set_time@car 0012  
                  set_time@key 0045                    set_time@min 0044                    set_time@sec 0043  
                  set_time@val 0027                     ??_init_i2c 0034                     ??_init_adc 0034  
                __Lmediumconst 2EE6                     ??_read_adc 0036                        int_func 1352  
                   ??_scan_key 0034                    ?_clcd_print 003A                    ?_clcd_putch 003B  
                  ?_clcd_write 0034                     ??_set_time 003D              __end_of_view_menu 0746  
                      postdec1 0FE5                        postinc0 0FEE                        postinc2 0FDE  
                   ??_view_log 003D                      _PORTBbits 0F81                   _display_time 0AD4  
                i2c_write@data 0034               ___lbmod@dividend 0035                read_adc@reg_val 0038  
          view_menu@view_array 0100          __end_of_display_event 12FE                    ___lbmod@rem 0037  
                  ___ftdiv@exp 004C                   ??_Enter_menu 004F       read_external_eeprom@data 0036  
                 ??_i2c_no_ack 0034                     _store_data 006F                   _Download_log 0B6A  
                 ?_i2c_rx_mode 0034                 __end_of___wmul 13CA                  __pidataCOMRAM 14DA  
                  view_log@key 0041            start_initialization 0C7E             __end_of_Enter_menu 1096  
              ??_read_switches 0034                      _i2c_start 14B4                    __end_of_isr 137C  
                    _i2c_write 1488             __end_of_i2c_no_ack 14DA               change_password@i 000C  
             change_password@j 000A          __end_of_i2c_rep_start 14C4           change_password@i_252 0041  
         change_password@i_249 003F           change_password@j_250 0043           change_password@j_253 0044  
                     ??___wmul 0038                  ??_init_ds1307 0037                    __pdataBANK0 0088  
                  __pdataBANK1 0100           change_password@psswd 0008                  ??_read_ds1307 0035  
  read_switches@detection_type 0034                  ??_init_config 003D                    __pbssCOMRAM 0001  
                   ?_i2c_start 0034                     ?_i2c_write 0034               ___lwdiv@dividend 0034  
__end_of_write_external_eeprom 1242                      _clear_log 0F0A                      __pintcode 0008  
                __pmediumconst 2EE6                       ?___lbmod 0034          _store_external_eeprom 1276  
                     ?___ftdiv 003F             read_ds1307@address 0035                       ?___fttol 004E  
                     ?___lwdiv 0034                      _clock_reg 0001                       ?___lwmod 0034  
          __end_of_init_ds1307 10DC            __end_of_read_ds1307 12D4                    _choose_flag 002F  
             ___lwdiv@quotient 0038                      _init_clcd 11D6            __end_of_init_config 1276  
                    _init_uart 111E                  ?_write_ds1307 0035          Enter_password@attempt 002B  
               ___wmul@product 0038    read_external_eeprom@address 0035                     set_time@hr 0042  
                 ??_clcd_print 003D                   ??_clcd_putch 003C     __end_of_init_matrix_keypad 1488  
                 ??_clcd_write 0035                     ?_clear_log 0034                  isr@for_minute 007D  
                    _view_menu 060E          clcd_write@control_bit 0034              ___wmul@multiplier 0034  
                  ??_i2c_start 0034             __end_of_clcd_print 0F0A                    ??_i2c_write 0034  
           __end_of_clcd_putch 1460             __end_of_clcd_write 13A4                     ?_init_clcd 0034  
                   ?_init_uart 0034                      copy_data0 0C92                      copy_data1 0CB2  
               ??_write_ds1307 0036                       _i2c_idle 14CC                       _i2c_read 1494  
                     _i2c_stop 14AC                  set_time@i_237 0041                  ?_change_event 0034  
                     __Hrparam 0000                   clear_log@key 003F                   clear_log@val 003D  
                     __Lrparam 0000         ?_store_external_eeprom 0034   __end_of_read_external_eeprom 1352  
                  _init_ds1307 1096                     ?_view_menu 0034                       ___ftpack 0A26  
                  _read_ds1307 12AA                       ___lwtoft 13CA                    _init_config 1242  
          write_ds1307@address 0036                ___lwdiv@divisor 0036                ___lwdiv@counter 003A  
                     __ptext10 0D74                       __ptext11 12AA                       __ptext20 0BF6  
                     __ptext12 0AD4                       __ptext21 1276                       __ptext13 119A  
                     __ptext30 0F0A                       __ptext22 10DC                       __ptext14 13CA  
                     __ptext31 02E2                       __ptext23 0F5E                       __ptext15 0954  
                     __ptext40 14B4                       __ptext32 120C                       __ptext24 04C2  
                     __ptext16 086E                       __ptext41 14BC                       __ptext33 115C  
                     __ptext25 104C                       __ptext17 0A26                       __ptext42 1494  
                     __ptext34 0CFC                       __ptext26 0746                       __ptext18 12D4  
                     __ptext43 14C4                       __ptext35 1448                       __ptext27 0012  
                     __ptext19 0E44                       __ptext44 14CC                       __ptext36 0B6A  
                     __ptext28 140E                       __ptext45 14D4                       __ptext37 1328  
                     __ptext29 12FE                       __ptext46 0FB0                       __ptext38 1488  
                     __ptext47 14A0                       __ptext39 14AC                       __ptext48 0EAA  
                     __ptext49 137C                       _get_time 0D74                       _init_i2c 1460  
                     _init_adc 13EE                       _read_adc 119A                 ??_change_event 003B  
                     _scan_key 0CFC                       _select_1 002E                      set_time@i 003E  
                     _select_2 002D                      set_time@j 003F                       _password 0022  
                  ??_clear_log 003D                  ??_store_event 003B              ??_change_password 003D  
                     _set_time 0012                       isa$xinst 0000                       int$flags 005F  
                     _view_log 0746                      view_log@b 003D                      view_log@i 0040  
                    view_log@v 003F                      putch@byte 0034                view_menu@delay1 001E  
              view_menu@delay2 001C                       isr@count 0004                    ??_init_clcd 0036  
        __end_of_read_switches 119A                    _select_flag 002C                    ??_init_uart 0034  
                     intlevel2 0000               ___lwmod@dividend 0034           __end_of_write_ds1307 142C  
                  ??_view_menu 003D            __end_of_store_event 0C7E                ___lwmod@divisor 0036  
              ___lwmod@counter 0038         store_external_eeprom@i 0039               write_ds1307@data 0035  
         _read_external_eeprom 1328                  _display_event 12D4                 _Enter_password 04C2  
